{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . [toc] Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Hello World This is my first note To share knowledge to the world Oracle MySQL PestgSQL Mysql life little Now 20-30 10-20","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org . [toc]","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#hello-world","text":"This is my first note","title":"Hello World"},{"location":"#to-share-knowledge-to-the-world","text":"","title":"To share knowledge to the world"},{"location":"#oracle","text":"","title":"Oracle"},{"location":"#mysql","text":"","title":"MySQL"},{"location":"#pestgsql","text":"","title":"PestgSQL"},{"location":"#mysql-life","text":"","title":"Mysql life"},{"location":"#little","text":"Now 20-30 10-20","title":"little"},{"location":"TrustYouself/","text":"1 \u7b2c 1 \u7ae0 DBA \u4f18\u5316\u4e4b\u8def \u7f16\u8005\u6309\uff1a\u600e\u6837\u5b66\u4e60 Oracle\uff0c\u600e\u6837\u7740\u624b\u4f18\u5316\u6570\u636e\u5e93\uff0c\u8fd9\u4e00\u76f4\u662f\u4e00\u4e2a\u53cd\u590d\u88ab\u63d0\u53ca\u548c\u8ba8\u8bba\u7684\u95ee\u9898\uff0c \u672c\u7ae0\u5e76\u975e\u4ecb\u7ecd\u5177\u4f53\u7684\u65b9\u6cd5\u8bba\uff0c\u800c\u662f\u4e00\u7bc7\u8fc7\u6765\u4eba\u7684\u7ecf\u9a8c\u4e4b\u8c08\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u4ece\u672c\u7ae0\u7684\u5efa\u8bae\u4ee5\u53ca\u63a8\u8350 \u4e2d\uff0c\u627e\u5230\u4e00\u6761\u66f4\u4e3a\u5e73\u5766\u7684\u4f18\u5316\u4e4b\u8def\u3002 \u8bb8\u4f60\u7ecf\u8fc7\u4e00\u7ffb\u52aa\u529b\uff0c\u7ec8\u4e8e\u6709\u4e86\u4efd DBA \u7684\u5de5\u4f5c\uff0c\u5fd0\u5fd1\u4e0d\u5b89\u5730\u5750\u5728\u8ba1\u7b97\u673a\u65c1\uff0c\u6fc0\u52a8\u5f97\u624b\u5fc3\u5192\u6c57\uff0c \u5374\u4e0d\u77e5\u5982\u4f55\u53bb\u8c03\u6574\u3001\u4f18\u5316\u6570\u636e\u5e93\uff1b\u9762\u5bf9\u7a81\u5982\u5176\u6765\u7684\u6545\u969c\uff0c\u7535\u8bdd\u54cd\u4e2a\u4e0d\u505c\uff0c\u8001\u677f\u864e\u89c6\u7708\u7708\u5730\u7ad9 \u5728\u8eab\u65c1\uff0c\u4e0d\u77e5\u4f60\u6b64\u65f6\u662f\u5426\u80fd\u9759\u4e0b\u5fc3\u6765\uff1f \u53ef\u80fd\u4f60\u8bfb\u4e86\u8bb8\u591a\u6570\u636e\u5e93\u7ba1\u7406\u3001\u8c03\u4f18\u3001\u5907\u4efd\u3001\u6062\u590d\u3001PL/SQL \u5f00\u53d1\u65b9\u9762\u7684\u4e66\uff0c\u4e5f\u53ef\u80fd\u505a\u4e86\u5f88\u591a\u6545 \u969c\u6392\u9664\u7684\u5b9e\u9a8c\uff0c\u53ef\u5f53\u6545\u969c\u771f\u6b63\u964d\u4e34\u65f6\uff0c\u5374\u663e\u5f97\u90a3\u4e48\u7a81\u7136\uff0c\u4e00\u70b9\u5148\u5146\u4e5f\u6ca1\u6709\uff0c\u9ebb\u70e6\u603b\u662f\u4ece\u4f60\u610f\u60f3\u4e0d \u5230\u7684\u5730\u65b9\u51fa\u73b0\u3002 \u6570\u636e\u5e93\u7cfb\u7edf\u672c\u8eab\u6c38\u8fdc\u662f\u503c\u5f97\u6ce8\u610f\u7684\u9ebb\u70e6\u5236\u9020\u8005\uff1a\u6570\u4e0d\u6e05\u7684 Bug\u3001\u5bf9\u8c61\u5931\u6548\u3001\u78c1\u76d8\u788e\u7247\u3001\u7d22\u5f15 \u91cd\u5efa\uff0c\u4ee5\u53ca\u5f88\u591a\u6ca1\u6709\u987e\u53ca\u5230\u7684\u7a81\u53d1\u4e8b\u4ef6\u7b49\u3002\u6ca1\u6709\u6570\u636e\u5e93\u5f00\u53d1\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u4e5f\u662f\u4e0d\u53ef\u5ffd\u89c6\u7684\u9ebb\u70e6\u5236 \u9020\u8005\uff1a\u7f16\u5199\u6027\u80fd\u4e0d\u4f73\u7684 SQL \u4ee5\u53ca\u521b\u5efa\u4e00\u4e9b\u6027\u80fd\u8f83\u5dee\u7684\u5b58\u50a8\u5bf9\u8c61\u3002\u6700\u53ef\u6015\u7684\u9ebb\u70e6\u5236\u9020\u8005\u662f\u8c01\u5462\uff1f\u6b63 \u662f\u6765\u6e90\u4e8e DBA \u672c\u8eab\uff0c\u5bf9\u6570\u636e\u5e93\u4e00\u4e2a\u5fae\u5c0f\u7684\u4fee\u6539\uff0c\u6216\u8bb8\u5c31\u5c06\u5bfc\u81f4\u4e00\u573a\u707e\u96be\u3002 \u4f5c\u4e3a\u4e00\u540d DBA\uff0c\u5e94\u8be5\u600e\u6837\u5b66\u4e60 Oracle \u548c\u7740\u624b\u4f18\u5316\u6570\u636e\u5e93\u5462\uff1f 1.1 \u5b66\u4e60\u7684\u5efa\u8bae \u5bf9\u4e00\u4e2a\u521d\u7ea7 DBA \u800c\u8a00\uff0c\u6709\u5173 Oracle \u4f53\u7cfb\u7ed3\u6784\u7684\u6982\u5ff5\u975e\u5e38\u91cd\u8981\uff0c\u5982\u679c\u60f3\u6bd4\u8f83\u900f\u5f7b\u5730\u7406\u89e3\u8fd9\u4e9b \u6982\u5ff5\uff0c\u5fc5\u987b\u505a\u5927\u91cf\u7684\u5b9e\u9a8c\uff0c\u201c\u4e66\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45\uff0c\u7edd\u77e5\u4e9b\u4e8b\u8981\u8eac\u884c\u201d\uff0c\u4f46\u5343\u4e07\u4e0d\u8981\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8fdb\u884c \u5b9e\u9a8c\u3002\u5982\u679c\u60f3\u4ece\u9ebb\u70e6\u5236\u9020\u8005\u6210\u957f\u4e3a\u4e00\u4e2a\u9ebb\u70e6\u7ec8\u7ed3\u8005\uff0c\u53ea\u987e\u81ea\u5df1\u57cb\u5934\u82e6\u5b66\u662f\u4e0d\u591f\u7684\uff0c\u6bd5\u7adf\u5728\u751f\u4ea7\u73af \u5883\u4e0e\u5b66\u4e60\u73af\u5883\u4e2d\u9047\u5230\u7684\u6545\u969c\u662f\u5f88\u6709\u9650\u7684\uff0c\u4f60\u9700\u8981\u5728\u76f8\u5173\u8bba\u575b\u4e0a\u9605\u8bfb\u5927\u91cf\u7684\u5e16\u5b50\uff0c\u4ece\u7f51\u53cb\u7684\u7ecf\u9a8c\u4e0e \u6559\u8bad\u4e2d\u6c72\u53d6\u8425\u517b\uff0c\u624d\u80fd\u5c3d\u5feb\u62d3\u5c55\u53d1\u73b0\u4e0e\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\u3002 \u72ec\u7acb\u5b66\u4e60\u4e0e\u601d\u8003\u662f DBA \u5feb\u901f\u6210\u957f\u7684\u5173\u952e\u3002\u8bb8\u591a\u65b0\u624b\u53d1\u73b0\u7cfb\u7edf\u51fa\u73b0\u95ee\u9898\u6216\u672a\u77e5\u7684\u73b0\u8c61\uff0c\u7b2c\u4e00\u65f6 \u95f4\u5c31\u662f\u53bb\u54a8\u8be2\u8d44\u6df1 DBA\uff0c\u5176\u5b9e\u8fd9\u5e76\u4e0d\u662f\u597d\u4e60\u60ef\u3002\u8d8a\u662f\u6ca1\u6709\u7ecf\u9a8c\u8d8a\u662f\u5e94\u8be5\u5c3d\u91cf\u5bf9\u95ee\u9898\u8fdb\u884c\u5206\u6790\u4e0e\u63a8 \u65ad\uff0c\u5982\u679c\u5b9e\u5728\u6ca1\u6709\u5934\u7eea\u7684\u8bdd\uff0c\u53ef\u4ee5\u5728 Google \u6216\u76f8\u5173\u7684\u8bba\u575b\u4e0a\u8fdb\u884c\u641c\u7d22\u548c\u6c42\u52a9\uff0c\u7f51\u7edc\u4e0a\u603b\u4f1a\u6709\u8bb8 \u591a\u610f\u60f3\u4e0d\u5230\u7684\u60ca\u559c\uff0c\u76f8\u4fe1 99%\u7684\u95ee\u9898\u5728\u7f51\u7edc\u4e0a\u90fd\u53ef\u4ee5\u627e\u5230\u7b54\u6848\uff0c\u5173\u952e\u662f\u5982\u4f55\u627e\u5230\u5b83\u4eec\u3002 4 Oracle \u6570\u636e\u5e93\u6027\u80fd\u4f18\u5316 \u4e00\u5f00\u59cb\uff0c\u4e0d\u8981\u5bf9 Oracle Internal \u7684\u4e1c\u897f\u8d39\u5fc3\u8d39\u795e\uff0c\u6253\u597d\u57fa\u7840\u624d\u662f\u5173\u952e\u3002PL/SQL \u5f00\u53d1\u77e5\u8bc6\u5fc5\u4e0d \u53ef\u5c11\uff0c\u5e94\u4e86\u89e3\u4f53\u7cfb\u7ed3\u6784\u3001\u5907\u4efd\u3001\u6062\u590d\u7b49\u65b9\u9762\u7684\u5185\u5bb9\uff1b\u52aa\u529b\u63d0\u9ad8\u7cfb\u7edf\u8c03\u4f18\u53ca SQL \u4f18\u5316\u7684\u6280\u80fd\u3002\u5f53\u77e5 \u8bc6\u7d2f\u79ef\u5230\u4e00\u5b9a\u7684\u5c42\u6b21\u65f6\uff0c\u5bf9\u4e8e Oracle Internal \u7684\u4e1c\u897f\u81ea\u7136\u800c\u7136\u5c31\u53ef\u4ee5\u9886\u4f1a\u3002 \u826f\u597d\u7684\u6c9f\u901a\u80fd\u529b\u6709\u52a9\u4e8e\u66f4\u5feb\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5f88\u591a\u65f6\u5019\uff0c\u95ee\u9898\u53ef\u80fd\u5df2\u7ecf\u89e3\u51b3\uff0c\u5374\u4e0d\u77e5\u4e3a\u4ec0\u4e48\u4f1a\u4ea7 \u751f\u8fd9\u79cd\u95ee\u9898\uff0c\u8fd9\u65f6\u53ef\u4ee5\u54a8\u8be2\u4e00\u4e0b\u9879\u76ee\u8d1f\u8d23\u4eba\u6216\u76f8\u5173\u7a0b\u5e8f\u5458\uff0c\u5c3d\u91cf\u628a\u95ee\u9898\u7684\u6839\u6e90\u641e\u6e05\u695a\uff0c\u5982\u679c\u67d0\u4e2a \u95ee\u9898\u6ca1\u6709\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5fc5\u7136\u4f1a\u5377\u571f\u91cd\u6765\u3002 \u9700\u8981\u4e3a\u9879\u76ee\u7ec4\u7684\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u7edf\u4e00\u7684\u300a\u6570\u636e\u5e93\u5f00\u53d1\u89c4\u8303\u300b\u3002\u5982\u679c\u53ef\u80fd\uff0c\u53ef\u4ee5\u5bf9\u7a0b\u5e8f\u5458\u8fdb\u884c \u6570\u636e\u5e93\u8bbe\u8ba1\uff08\u5efa\u6a21\uff09\u53ca SQL \u4f18\u5316\u65b9\u9762\u7684\u57f9\u8bad\uff0c\u5c3d\u91cf\u8ba9\u6027\u80fd\u4e0d\u4f73\u7684 SQL \u80ce\u6b7b\u8179\u4e2d\u3002\u8981\u5c3d\u5feb\u878d\u5165\u9879\u76ee \u7ec4\uff0c\u7406\u89e3\u4e1a\u52a1\u7cfb\u7edf\u7684\u9700\u6c42\u53ca\u53d1\u5c55\u8d8b\u52bf\uff0c\u901a\u8fc7\u5bf9\u6570\u636e\u5e93\u7ed3\u6784\u53ca\u4e1a\u52a1\u7cfb\u7edf\u7684\u638c\u63e1\uff0c\u4e3a\u540e\u671f\u4ea7\u54c1\u6570\u636e\u5e93 \u7684\u7ed3\u6784\u4f18\u5316\u4e0e SQL \u4f18\u5316\u6253\u4e0b\u57fa\u7840\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5e76\u4e0d\u662f Oracle \u65b9\u65b9\u9762\u9762\u7684\u77e5\u8bc6\u90fd\u9700\u8981\u719f\u8bb0\u5728\u5fc3\uff0c\u5e94\u8be5\u6709\u9009\u62e9\u5730\u6df1\u5165\u7814\u7a76 Oracle \u6280\u672f\u7684\u67d0\u4e2a\u65b9\u9762\uff0c\u8fd9\u6837\u624d\u80fd\u7a81\u7834\u6cdb\u6cdb\u4e4b\u5883\u3002\u4e0d\u8981\u592a\u5728\u610f\u5b89\u88c5\u4e0e\u914d\u7f6e DataGuard\u3001RAC \u7b49\uff0c \u8fd9\u4e9b\u53ea\u662f\u96d5\u866b\u5c0f\u6280\u800c\u5df2\u3002piner \u7f51\u53cb\u6574\u7406\u4e86\u5173\u4e8e Oracle \u7684 FAQ\uff08http://www.itpub.net/180363.html\uff09\uff0c \u65e0\u8bba\u65b0\u624b\u8fd8\u662f\u8d44\u6df1 DBA\uff0c\u90fd\u53ef\u4ee5\u4ece\u4e2d\u53d7\u76ca\u3002","title":"TrustYouself"},{"location":"about/","text":"About me Zhiqing Chen E-mail: byyelang@gmail.com Skilled : System : Linux(SUSE , Redhat , CentOS) Database : Oracle\uff0811GOCM\uff09, PostgreSQL , MySQL Program : Shell , Python Base : Guangdong , China Married : No (I want to fu*k me much times!!! ) Github :","title":"About"},{"location":"Database/","text":"Hi,World!!! I'm Oracle!","title":"Home"},{"location":"Database/Oracle/","text":"Hi,World!!! I'm Oracle!","title":"Oracle"},{"location":"Database/GaussDB/GaussDB\u8003\u8bd5\u8ba4\u8bc1\u6307\u5357/","text":"GaussDB\u8003\u8bd5\u8ba4\u8bc1\u6307\u5357 \u4e91\u548c\u6069\u58a8-\u9648\u6bc5\u658c 2019-10-26 705 \u6458\u8981\uff1a 10\u670825\u53f7\uff0c\u534e\u4e3aGaussDB\u6570\u636e\u5e93\u5de5\u7a0b\u5e08\u8ba4\u8bc1HCIA-GaussDB/HCIP-GaussDB-OLAP/HCIP-GaussDB-OLTP\u4e8e\u672c\u5468\u5185\u9646\u7eed\u53d1\u5e03\uff0c\u672c\u6587\u5bf9GaussDB\u8003\u8bd5\u8ba4\u8bc1\u76f8\u5173\u7684\u4fe1\u606f\u505a\u4e86\u6574\u7406\uff0c\u7ed9\u6709\u5174\u8da3\u8003\u8bc1\u8bc1\u4e66\u7684\u670b\u53cb\u53c2\u8003\u3002 10\u670821\u65e5\uff0c\u534e\u4e3a\u8ba4\u8bc1GaussDB\u6570\u636e\u5e93\u5de5\u7a0b\u5e08(HCIA)\u6b63\u5f0f\u53d1\u5e03\uff01 10\u670822\u65e5\uff0c\u534e\u4e3a\u8ba4\u8bc1GaussDB OLAP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u6b63\u5f0f\u53d1\u5e03\uff01 10\u670825\u65e5\uff0c\u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u6b63\u5f0f\u53d1\u5e03\uff01 \u672c\u5468\u5185\uff0c\u534e\u4e3aGaussDB\u8ba4\u8bc1\u4e2d\u7684\u5de5\u7a0b\u5e08\u7ea7\u522b\u3001\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u7ea7\u522b\u8ba4\u8bc1\u90fd\u9646\u7eed\u53d1\u5e03\uff0c\u5f00\u653e\u6280\u80fd\u57f9\u8bad\u548c\u8bc1\u4e66\u8003\u8bd5\uff0c\u5236\u5b9a\u8be6\u7ec6\u7684\u8ba4\u8bc1\u6807\u51c6\uff0c\u8fd9\u610f\u5473\u7740\u534e\u4e3a\u9ad8\u65af\u5728\u9762\u5411\u793e\u4f1a\u4eba\u624d\u57f9\u517b\u65b9\u9762\u8d70\u51fa\u4e86\u91cd\u8981\u7684\u4e00\u6b65\u3002\u672c\u6587\u5bf9\u8003\u8bd5\u8ba4\u8bc1\u76f8\u5173\u7684\u5185\u5bb9\u505a\u4e86\u4fe1\u606f\u6574\u7406\uff0c\u7ed9\u60f3\u8003\u53d6\u9ad8\u65af\u8ba4\u8bc1\u7684\u670b\u53cb\u63d0\u4f9b\u53c2\u8003\u3002 \u4e00\u3001\u8003\u8bd5\u79d1\u76ee \u8003\u8bd5\u8d39\u7528\u4e0d\u9ad8\uff0c\u76f8\u5bf9mysql\u548coracle\u53ef\u4ee5\u8bf4\u662f\u767d\u83dc\u4ef7\u4e86\u3002\u76ee\u524d\u62a5\u8003\u7684\u4eba\u8fd8\u5f88\u5c11\uff0c\u6240\u4ee5\u8003\u8bd5\u65f6\u95f4\u9884\u7ea6\u4e5f\u975e\u5e38\u5bbd\u677e\uff0c\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u53c2\u52a0\u8003\u8bd5\u7684\u65f6\u95f4\u3002 \u9884\u7ea6\u5165\u53e3\uff1ahttps://support.huawei.com/learning/vueAppointment/toConfirmPage?lang=zh \u62a5\u8003\u6d41\u7a0b\uff1a \u8bbf\u95ee\u534e\u4e3a\u5b98\u7f51\uff0c\u6ce8\u518c\u534e\u4e3a\u8d26\u53f7 \u8bbf\u95eePearson VUE\u7f51\u7ad9\u521b\u5efa\u4e2a\u4eba\u8d44\u6599\uff0c\u7136\u540e\u901a\u8fc7Pearson VUE\u7f51\u7ad9\u6216\u5ba2\u6237\u670d\u52a1\u4e2d\u5fc3\u9884\u7ea6\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u5c31\u8fd1\u7684\u8003\u8bd5\u4e2d\u5fc3\u9884\u7ea6 \u652f\u4ed8\u7b14\u8bd5\u8003\u8bd5\u8d39\u7528\uff08\u652f\u6301\u4fe1\u7528\u5361\u3001\u73b0\u91d1\u3001\u8003\u8bd5\u5238\u652f\u4ed8\u65b9\u5f0f\uff09 \u5728\u9884\u7ea6\u65f6\u95f4\u524d\u5f80\u8003\u8bd5\u4e2d\u5fc3\u53c2\u52a0\u8003\u8bd5\uff0c\u8003\u8bd5\u7ed3\u675f\u540e\uff0c\u8003\u8bd5\u4e2d\u5fc3\u7ed9\u51fa\u6210\u7ee9\u5355 \u83b7\u53d6\u534e\u4e3a\u8ba4\u8bc1\u8bc1\u4e66\u3002\u901a\u8fc7\u7684\u8003\u751f\uff0c\u5728\u5b8c\u6210\u8003\u8bd51\u4e2a\u5de5\u4f5c\u65e5\u540e\uff0c\u5c06\u6536\u5230\u534e\u4e3a\u53d1\u9001\u7684\u201c\u7535\u5b50\u8bc1\u4e66\u4e0b\u8f7d\u201c\u7684\u90ae\u4ef6\u901a\u77e5\uff0c\u6216\u8003\u751f\u53ef\u81ea\u884c\u767b\u9646\uff1a\u534e\u4e3a\u7f51\u7ad9\u4e0b\u8f7d\u7535\u5b50\u8bc1\u4e66\u3002 \u4e8c\u3001\u57f9\u8bad\u987b\u77e5 \u57f9\u8bad\u5f00\u8bfe\u67e5\u8be2\uff1ahttps://support.huawei.com/learning/NavigationAction/createNavi?navId=_trainingsearch lang=zh tp=name|gauss \u5b98\u7f51\u4e0a\u76ee\u524d\u8fd8\u6ca1\u6709\u5f00\u73ed\u8ba1\u5212\u3002 \u4e09\u9879\u8ba4\u8bc1\u8003\u8bd5\u5bf9\u5e94\u7684\u57f9\u8bad\u8bfe\u7a0b\u90fd\u6709\u5177\u4f53\u4ecb\u7ecd\uff0c\u4f8b\u5982HCIP-GaussDB-OLAP\u7684\u4ecb\u7ecd\u5982\u4e0b\uff1a HCIP-GaussDB-OLAP V1.0\u534e\u4e3a\u8ba4\u8bc1GaussDB OLAP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u57f9\u8bad \u57f9\u8bad\u5bf9\u8c61 \u2022 \u5e0c\u671b\u6210\u4e3a\u9ad8\u7ea7\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7ba1\u7406\u5458\u7684\u4eba\u5458 \u5e0c\u671b\u6210\u4e3a\u9ad8\u7ea7\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u5e08\u548c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5de5\u7a0b\u5e08\u7684\u4eba\u5458 \u5e0c\u671b\u83b7\u5f97HCIP-GaussDB-OLAP\u8ba4\u8bc1\u7684\u4eba\u5458 \u5165\u5b66\u8981\u6c42 \u2022 \u638c\u63e1\u57fa\u672c\u7684\u8ba1\u7b97\u673a\u77e5\u8bc6 \u2022 \u638c\u63e1\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u57fa\u7840\u77e5\u8bc6 \u2022 \u638c\u63e1\u57fa\u672cLinux\u8fd0\u7ef4\u77e5\u8bc6 \u2022 \u638c\u63e1SQL\u7f16\u7a0b \u57f9\u8bad\u76ee\u6807 \u2022 \u5b8c\u6210\u8be5\u9879\u76ee\u57f9\u8bad\u540e\uff0c\u60a8\u5c06\u80fd\u591f\uff1a \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u5b89\u88c5\u90e8\u7f72\u3001\u6570\u636e\u5e93\u8bbe\u8ba1\u4e0e\u7ba1\u7406 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u9ad8\u53ef\u7528\u8bbe\u8ba1 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u8fd0\u7ef4\u4e0e\u6027\u80fd\u8c03\u4f18 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406\u548c\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u6570\u636e\u8fc1\u79fb\u3001\u6269\u5bb9\u548c\u5bb9\u707e\u5907\u4efd\u7b49 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u5e38\u89c1\u95ee\u9898\u4e0e\u6545\u969c\u5904\u7406 \u2022 \u4e86\u89e3GaussDB OLAP\u6570\u636e\u5e93\u7684\u9ad8\u7ea7\u7279\u6027 \u57f9\u8bad\u6559\u6750 HCIP-GaussDB-OLAP V1.0 \u57f9\u8bad\u6559\u6750 HCIP-GaussDB-OLAP V1.0 \u5b9e\u9a8c\u624b\u518c HCIP-GaussDB-OLAP V1.0 \u5b9e\u9a8c\u6570\u636e1 HCIP-GaussDB-OLAP V1.0 \u5b9e\u9a8c\u6570\u636e2 \u57f9\u8bad\u65f6\u957f \u2022 12\u5de5\u4f5c\u65e5 \u8bfe\u7a0b\u5185\u5bb9 \u7b2c\u4e00\u7ae0 OLAP\u6570\u636e\u5e93\u6982\u8ff0\u4e0e\u90e8\u7f72 \u2022 OLAP\u6570\u636e\u5e93\u6982\u8ff0 \u2022 GaussDB200\u6982\u8ff0 \u2022 \u5b89\u88c5\u89c4\u5212\u8bbe\u8ba1 \u2022 \u5b89\u88c5\u90e8\u7f72\u6307\u5bfc \u7b2c\u4e8c\u7ae0 SQL\u8fdb\u9636 \u2022 \u9ad8\u7ea7\u8bed\u6cd5 \u2022 \u6570\u636e\u5b57\u5178 \u2022 \u6570\u636e\u7c7b\u578b \u2022 \u51fd\u6570\u4e0e\u64cd\u4f5c\u7b26 \u2022 \u5b50\u67e5\u8be2 \u2022 PL-SQL \u2022 vacuum\u64cd\u4f5c \u2022 C function~ \u2022 \u5206\u5e03\u5f0f\u6267\u884c \u2022 \u6838\u5fc3\u7b97\u5b50 \u2022 \u5206\u5e03\u5f0f\u6267\u884c\u6846\u67b6 \u2022 \u6267\u884c\u8ba1\u5212 \u2022 \u6267\u884c\u65b9\u5f0f \u7b2c\u4e09\u7ae0\u6570\u636e\u5e93\u8bbe\u8ba1\u4e0e\u7ba1\u7406 \u2022 \u6570\u636e\u5e93\u5bf9\u8c61\u8bbe\u8ba1\u4e0e\u7ba1\u7406 \u2022 \u521b\u5efa\u548c\u7ba1\u7406\u7528\u6237\u3001\u6570\u636e\u5e93\u3001schema \u2022 \u8868\u7ba1\u7406 \u2022 \u7d22\u5f15\u7ba1\u7406 \u2022 \u89c6\u56fe\u7ba1\u7406 \u2022 sequence\u7ba1\u7406 \u2022 \u5b58\u50a8\u7ba1\u7406 \u2022 \u6570\u636e\u5b58\u50a8\u7ed3\u6784 \u2022 \u8868\u7a7a\u95f4\u7ba1\u7406 \u2022 \u5206\u533a\u7ba1\u7406 \u2022 \u65e5\u5fd7\u7ba1\u7406 \u2022 \u4e8b\u52a1\u7ba1\u7406 \u2022 \u4e8b\u52a1\u4ecb\u7ecd \u2022 \u4e8b\u52a1\u9694\u79bb\u7ea7\u522b \u2022 \u7ba1\u7406\u5e76\u53d1\u8bfb\u5199 \u2022 \u9501\u7ba1\u7406 \u2022 \u5b50\u4e8b\u52a1\u4ecb\u7ecd \u2022 \u5206\u5e03\u5f0f\u4e8b\u52a1 \u2022 redo\u6062\u590d \u7b2c\u56db\u7ae0\u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18 \u2022 \u6570\u636e\u5e93\u96c6\u7fa4\u7ba1\u7406 \u2022 \u76d1\u63a7\u548c\u7ba1\u7406\u96c6\u7fa4 \u2022 \u5347\u7ea7 \u2022 \u6269\u7f29\u5bb9 \u2022 CN\u5254\u9664 \u2022 \u8282\u70b9\u4fee\u590d\uff08\u66ff\u6362\uff09 \u2022 \u65e5\u5e38\u5de1\u68c0 \u2022 \u5de5\u5177\u4ecb\u7ecd \u2022 \u6570\u636e\u5e93\u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406 \u2022 \u57fa\u7840\u6846\u67b6 \u2022 \u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406\u4ecb\u7ecd \u2022 \u4e3b\u8981\u529f\u80fd \u2022 \u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406\u914d\u7f6e \u2022 \u6570\u636e\u5e93\u8fc1\u79fb\u7ba1\u7406 \u2022 GDS\u8fc1\u79fb\u7269\u7406\u6570\u636e \u2022 COPY\u8fc1\u79fb\u7269\u7406\u6570\u636e \u2022 gs_dump/gs_resotre\u8fc1\u79fb\u5143\u6570\u636e \u2022 ETL\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u2022 Migration\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u2022 \u6570\u636e\u5e93\u5e38\u89c1\u95ee\u9898\u4e0e\u6545\u969c\u5904\u7406 \u2022 \u9ad8\u5371\u64cd\u4f5c\u5217\u8868 \u2022 \u6545\u969c\u5904\u7406\u6d41\u7a0b \u2022 \u6545\u969c\u5b9a\u754c \u2022 \u6545\u969c\u5b9a\u4f4d \u2022 \u5e94\u6025\u5904\u7406 \u2022 \u6570\u636e\u5e93\u6027\u80fd\u8c03\u4f18 \u2022 \u6027\u80fd\u4f18\u5316\u57fa\u7840\u6982\u5ff5 \u2022 \u6027\u80fd\u76d1\u63a7 \u2022 \u6027\u80fd\u8c03\u4f18 \u7b2c\u4e94\u7ae0\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406 \u2022 \u8bbf\u95ee\u63a7\u5236 \u2022 \u7528\u6237\u7ba1\u7406 \u2022 \u6743\u9650\u7ba1\u7406 \u2022 \u5bf9\u8c61\u6743\u9650 \u2022 \u5b89\u5168\u5ba1\u8ba1 \u2022 \u6570\u636e\u52a0\u5bc6 \u7b2c\u516d\u7ae0\u6570\u636e\u5e93\u9ad8\u53ef\u7528\u8bbe\u8ba1 \u2022 \u96c6\u7fa4HA \u2022 HA\u539f\u7406\u8bf4\u660e \u2022 \u6545\u969c\u6062\u590d \u2022 \u5907\u4efd\u6062\u590d \u2022 \u5907\u4efd\u6062\u590d\u539f\u7406\u4e0e\u6d41\u7a0b \u2022 \u5bb9\u707e\u5904\u7406 \u7b2c\u4e03\u7ae0\u6570\u636e\u5e93\u9ad8\u7ea7\u7279\u6027\u4ecb\u7ecd \u2022 SQL on anywhere \u2022 \u5f39\u6027\u4f38\u7f29\u7ba1\u7406 \u2022 PostGIS \u2022 \u903b\u8f91\u96c6\u7fa4 \u57f9\u8bad\u65b9\u5f0f \u2022 \u7406\u8bba\u6388\u8bfe\u3001\u4e0a\u673a\u5b9e\u4e60 \u5728\u5b98\u7f51\u4e0a\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\u5230\u57f9\u8bad\u6559\u6750\u3001\u5b9e\u9a8c\u624b\u518c\u3002https://support.huawei.com/learning/trainFaceDetailAction?lang=zh pbiPath=term1000025154 courseId=Node1000013442","title":"GaussDB\u8003\u8bd5\u8ba4\u8bc1\u6307\u5357"},{"location":"Database/GaussDB/GaussDB\u8003\u8bd5\u8ba4\u8bc1\u6307\u5357/#gaussdb","text":"\u4e91\u548c\u6069\u58a8-\u9648\u6bc5\u658c 2019-10-26 705 \u6458\u8981\uff1a 10\u670825\u53f7\uff0c\u534e\u4e3aGaussDB\u6570\u636e\u5e93\u5de5\u7a0b\u5e08\u8ba4\u8bc1HCIA-GaussDB/HCIP-GaussDB-OLAP/HCIP-GaussDB-OLTP\u4e8e\u672c\u5468\u5185\u9646\u7eed\u53d1\u5e03\uff0c\u672c\u6587\u5bf9GaussDB\u8003\u8bd5\u8ba4\u8bc1\u76f8\u5173\u7684\u4fe1\u606f\u505a\u4e86\u6574\u7406\uff0c\u7ed9\u6709\u5174\u8da3\u8003\u8bc1\u8bc1\u4e66\u7684\u670b\u53cb\u53c2\u8003\u3002 10\u670821\u65e5\uff0c\u534e\u4e3a\u8ba4\u8bc1GaussDB\u6570\u636e\u5e93\u5de5\u7a0b\u5e08(HCIA)\u6b63\u5f0f\u53d1\u5e03\uff01 10\u670822\u65e5\uff0c\u534e\u4e3a\u8ba4\u8bc1GaussDB OLAP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u6b63\u5f0f\u53d1\u5e03\uff01 10\u670825\u65e5\uff0c\u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u6b63\u5f0f\u53d1\u5e03\uff01 \u672c\u5468\u5185\uff0c\u534e\u4e3aGaussDB\u8ba4\u8bc1\u4e2d\u7684\u5de5\u7a0b\u5e08\u7ea7\u522b\u3001\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u7ea7\u522b\u8ba4\u8bc1\u90fd\u9646\u7eed\u53d1\u5e03\uff0c\u5f00\u653e\u6280\u80fd\u57f9\u8bad\u548c\u8bc1\u4e66\u8003\u8bd5\uff0c\u5236\u5b9a\u8be6\u7ec6\u7684\u8ba4\u8bc1\u6807\u51c6\uff0c\u8fd9\u610f\u5473\u7740\u534e\u4e3a\u9ad8\u65af\u5728\u9762\u5411\u793e\u4f1a\u4eba\u624d\u57f9\u517b\u65b9\u9762\u8d70\u51fa\u4e86\u91cd\u8981\u7684\u4e00\u6b65\u3002\u672c\u6587\u5bf9\u8003\u8bd5\u8ba4\u8bc1\u76f8\u5173\u7684\u5185\u5bb9\u505a\u4e86\u4fe1\u606f\u6574\u7406\uff0c\u7ed9\u60f3\u8003\u53d6\u9ad8\u65af\u8ba4\u8bc1\u7684\u670b\u53cb\u63d0\u4f9b\u53c2\u8003\u3002 \u4e00\u3001\u8003\u8bd5\u79d1\u76ee \u8003\u8bd5\u8d39\u7528\u4e0d\u9ad8\uff0c\u76f8\u5bf9mysql\u548coracle\u53ef\u4ee5\u8bf4\u662f\u767d\u83dc\u4ef7\u4e86\u3002\u76ee\u524d\u62a5\u8003\u7684\u4eba\u8fd8\u5f88\u5c11\uff0c\u6240\u4ee5\u8003\u8bd5\u65f6\u95f4\u9884\u7ea6\u4e5f\u975e\u5e38\u5bbd\u677e\uff0c\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u53c2\u52a0\u8003\u8bd5\u7684\u65f6\u95f4\u3002 \u9884\u7ea6\u5165\u53e3\uff1ahttps://support.huawei.com/learning/vueAppointment/toConfirmPage?lang=zh \u62a5\u8003\u6d41\u7a0b\uff1a \u8bbf\u95ee\u534e\u4e3a\u5b98\u7f51\uff0c\u6ce8\u518c\u534e\u4e3a\u8d26\u53f7 \u8bbf\u95eePearson VUE\u7f51\u7ad9\u521b\u5efa\u4e2a\u4eba\u8d44\u6599\uff0c\u7136\u540e\u901a\u8fc7Pearson VUE\u7f51\u7ad9\u6216\u5ba2\u6237\u670d\u52a1\u4e2d\u5fc3\u9884\u7ea6\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u5c31\u8fd1\u7684\u8003\u8bd5\u4e2d\u5fc3\u9884\u7ea6 \u652f\u4ed8\u7b14\u8bd5\u8003\u8bd5\u8d39\u7528\uff08\u652f\u6301\u4fe1\u7528\u5361\u3001\u73b0\u91d1\u3001\u8003\u8bd5\u5238\u652f\u4ed8\u65b9\u5f0f\uff09 \u5728\u9884\u7ea6\u65f6\u95f4\u524d\u5f80\u8003\u8bd5\u4e2d\u5fc3\u53c2\u52a0\u8003\u8bd5\uff0c\u8003\u8bd5\u7ed3\u675f\u540e\uff0c\u8003\u8bd5\u4e2d\u5fc3\u7ed9\u51fa\u6210\u7ee9\u5355 \u83b7\u53d6\u534e\u4e3a\u8ba4\u8bc1\u8bc1\u4e66\u3002\u901a\u8fc7\u7684\u8003\u751f\uff0c\u5728\u5b8c\u6210\u8003\u8bd51\u4e2a\u5de5\u4f5c\u65e5\u540e\uff0c\u5c06\u6536\u5230\u534e\u4e3a\u53d1\u9001\u7684\u201c\u7535\u5b50\u8bc1\u4e66\u4e0b\u8f7d\u201c\u7684\u90ae\u4ef6\u901a\u77e5\uff0c\u6216\u8003\u751f\u53ef\u81ea\u884c\u767b\u9646\uff1a\u534e\u4e3a\u7f51\u7ad9\u4e0b\u8f7d\u7535\u5b50\u8bc1\u4e66\u3002 \u4e8c\u3001\u57f9\u8bad\u987b\u77e5 \u57f9\u8bad\u5f00\u8bfe\u67e5\u8be2\uff1ahttps://support.huawei.com/learning/NavigationAction/createNavi?navId=_trainingsearch lang=zh tp=name|gauss \u5b98\u7f51\u4e0a\u76ee\u524d\u8fd8\u6ca1\u6709\u5f00\u73ed\u8ba1\u5212\u3002 \u4e09\u9879\u8ba4\u8bc1\u8003\u8bd5\u5bf9\u5e94\u7684\u57f9\u8bad\u8bfe\u7a0b\u90fd\u6709\u5177\u4f53\u4ecb\u7ecd\uff0c\u4f8b\u5982HCIP-GaussDB-OLAP\u7684\u4ecb\u7ecd\u5982\u4e0b\uff1a HCIP-GaussDB-OLAP V1.0\u534e\u4e3a\u8ba4\u8bc1GaussDB OLAP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u57f9\u8bad \u57f9\u8bad\u5bf9\u8c61 \u2022 \u5e0c\u671b\u6210\u4e3a\u9ad8\u7ea7\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7ba1\u7406\u5458\u7684\u4eba\u5458 \u5e0c\u671b\u6210\u4e3a\u9ad8\u7ea7\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u5e08\u548c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5de5\u7a0b\u5e08\u7684\u4eba\u5458 \u5e0c\u671b\u83b7\u5f97HCIP-GaussDB-OLAP\u8ba4\u8bc1\u7684\u4eba\u5458 \u5165\u5b66\u8981\u6c42 \u2022 \u638c\u63e1\u57fa\u672c\u7684\u8ba1\u7b97\u673a\u77e5\u8bc6 \u2022 \u638c\u63e1\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u57fa\u7840\u77e5\u8bc6 \u2022 \u638c\u63e1\u57fa\u672cLinux\u8fd0\u7ef4\u77e5\u8bc6 \u2022 \u638c\u63e1SQL\u7f16\u7a0b \u57f9\u8bad\u76ee\u6807 \u2022 \u5b8c\u6210\u8be5\u9879\u76ee\u57f9\u8bad\u540e\uff0c\u60a8\u5c06\u80fd\u591f\uff1a \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u5b89\u88c5\u90e8\u7f72\u3001\u6570\u636e\u5e93\u8bbe\u8ba1\u4e0e\u7ba1\u7406 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u9ad8\u53ef\u7528\u8bbe\u8ba1 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u8fd0\u7ef4\u4e0e\u6027\u80fd\u8c03\u4f18 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406\u548c\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u7684\u6570\u636e\u8fc1\u79fb\u3001\u6269\u5bb9\u548c\u5bb9\u707e\u5907\u4efd\u7b49 \u2022 \u638c\u63e1GaussDB OLAP\u6570\u636e\u5e93\u5e38\u89c1\u95ee\u9898\u4e0e\u6545\u969c\u5904\u7406 \u2022 \u4e86\u89e3GaussDB OLAP\u6570\u636e\u5e93\u7684\u9ad8\u7ea7\u7279\u6027 \u57f9\u8bad\u6559\u6750 HCIP-GaussDB-OLAP V1.0 \u57f9\u8bad\u6559\u6750 HCIP-GaussDB-OLAP V1.0 \u5b9e\u9a8c\u624b\u518c HCIP-GaussDB-OLAP V1.0 \u5b9e\u9a8c\u6570\u636e1 HCIP-GaussDB-OLAP V1.0 \u5b9e\u9a8c\u6570\u636e2 \u57f9\u8bad\u65f6\u957f \u2022 12\u5de5\u4f5c\u65e5 \u8bfe\u7a0b\u5185\u5bb9 \u7b2c\u4e00\u7ae0 OLAP\u6570\u636e\u5e93\u6982\u8ff0\u4e0e\u90e8\u7f72 \u2022 OLAP\u6570\u636e\u5e93\u6982\u8ff0 \u2022 GaussDB200\u6982\u8ff0 \u2022 \u5b89\u88c5\u89c4\u5212\u8bbe\u8ba1 \u2022 \u5b89\u88c5\u90e8\u7f72\u6307\u5bfc \u7b2c\u4e8c\u7ae0 SQL\u8fdb\u9636 \u2022 \u9ad8\u7ea7\u8bed\u6cd5 \u2022 \u6570\u636e\u5b57\u5178 \u2022 \u6570\u636e\u7c7b\u578b \u2022 \u51fd\u6570\u4e0e\u64cd\u4f5c\u7b26 \u2022 \u5b50\u67e5\u8be2 \u2022 PL-SQL \u2022 vacuum\u64cd\u4f5c \u2022 C function~ \u2022 \u5206\u5e03\u5f0f\u6267\u884c \u2022 \u6838\u5fc3\u7b97\u5b50 \u2022 \u5206\u5e03\u5f0f\u6267\u884c\u6846\u67b6 \u2022 \u6267\u884c\u8ba1\u5212 \u2022 \u6267\u884c\u65b9\u5f0f \u7b2c\u4e09\u7ae0\u6570\u636e\u5e93\u8bbe\u8ba1\u4e0e\u7ba1\u7406 \u2022 \u6570\u636e\u5e93\u5bf9\u8c61\u8bbe\u8ba1\u4e0e\u7ba1\u7406 \u2022 \u521b\u5efa\u548c\u7ba1\u7406\u7528\u6237\u3001\u6570\u636e\u5e93\u3001schema \u2022 \u8868\u7ba1\u7406 \u2022 \u7d22\u5f15\u7ba1\u7406 \u2022 \u89c6\u56fe\u7ba1\u7406 \u2022 sequence\u7ba1\u7406 \u2022 \u5b58\u50a8\u7ba1\u7406 \u2022 \u6570\u636e\u5b58\u50a8\u7ed3\u6784 \u2022 \u8868\u7a7a\u95f4\u7ba1\u7406 \u2022 \u5206\u533a\u7ba1\u7406 \u2022 \u65e5\u5fd7\u7ba1\u7406 \u2022 \u4e8b\u52a1\u7ba1\u7406 \u2022 \u4e8b\u52a1\u4ecb\u7ecd \u2022 \u4e8b\u52a1\u9694\u79bb\u7ea7\u522b \u2022 \u7ba1\u7406\u5e76\u53d1\u8bfb\u5199 \u2022 \u9501\u7ba1\u7406 \u2022 \u5b50\u4e8b\u52a1\u4ecb\u7ecd \u2022 \u5206\u5e03\u5f0f\u4e8b\u52a1 \u2022 redo\u6062\u590d \u7b2c\u56db\u7ae0\u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18 \u2022 \u6570\u636e\u5e93\u96c6\u7fa4\u7ba1\u7406 \u2022 \u76d1\u63a7\u548c\u7ba1\u7406\u96c6\u7fa4 \u2022 \u5347\u7ea7 \u2022 \u6269\u7f29\u5bb9 \u2022 CN\u5254\u9664 \u2022 \u8282\u70b9\u4fee\u590d\uff08\u66ff\u6362\uff09 \u2022 \u65e5\u5e38\u5de1\u68c0 \u2022 \u5de5\u5177\u4ecb\u7ecd \u2022 \u6570\u636e\u5e93\u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406 \u2022 \u57fa\u7840\u6846\u67b6 \u2022 \u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406\u4ecb\u7ecd \u2022 \u4e3b\u8981\u529f\u80fd \u2022 \u8d44\u6e90\u8d1f\u8f7d\u7ba1\u7406\u914d\u7f6e \u2022 \u6570\u636e\u5e93\u8fc1\u79fb\u7ba1\u7406 \u2022 GDS\u8fc1\u79fb\u7269\u7406\u6570\u636e \u2022 COPY\u8fc1\u79fb\u7269\u7406\u6570\u636e \u2022 gs_dump/gs_resotre\u8fc1\u79fb\u5143\u6570\u636e \u2022 ETL\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u2022 Migration\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u2022 \u6570\u636e\u5e93\u5e38\u89c1\u95ee\u9898\u4e0e\u6545\u969c\u5904\u7406 \u2022 \u9ad8\u5371\u64cd\u4f5c\u5217\u8868 \u2022 \u6545\u969c\u5904\u7406\u6d41\u7a0b \u2022 \u6545\u969c\u5b9a\u754c \u2022 \u6545\u969c\u5b9a\u4f4d \u2022 \u5e94\u6025\u5904\u7406 \u2022 \u6570\u636e\u5e93\u6027\u80fd\u8c03\u4f18 \u2022 \u6027\u80fd\u4f18\u5316\u57fa\u7840\u6982\u5ff5 \u2022 \u6027\u80fd\u76d1\u63a7 \u2022 \u6027\u80fd\u8c03\u4f18 \u7b2c\u4e94\u7ae0\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406 \u2022 \u8bbf\u95ee\u63a7\u5236 \u2022 \u7528\u6237\u7ba1\u7406 \u2022 \u6743\u9650\u7ba1\u7406 \u2022 \u5bf9\u8c61\u6743\u9650 \u2022 \u5b89\u5168\u5ba1\u8ba1 \u2022 \u6570\u636e\u52a0\u5bc6 \u7b2c\u516d\u7ae0\u6570\u636e\u5e93\u9ad8\u53ef\u7528\u8bbe\u8ba1 \u2022 \u96c6\u7fa4HA \u2022 HA\u539f\u7406\u8bf4\u660e \u2022 \u6545\u969c\u6062\u590d \u2022 \u5907\u4efd\u6062\u590d \u2022 \u5907\u4efd\u6062\u590d\u539f\u7406\u4e0e\u6d41\u7a0b \u2022 \u5bb9\u707e\u5904\u7406 \u7b2c\u4e03\u7ae0\u6570\u636e\u5e93\u9ad8\u7ea7\u7279\u6027\u4ecb\u7ecd \u2022 SQL on anywhere \u2022 \u5f39\u6027\u4f38\u7f29\u7ba1\u7406 \u2022 PostGIS \u2022 \u903b\u8f91\u96c6\u7fa4 \u57f9\u8bad\u65b9\u5f0f \u2022 \u7406\u8bba\u6388\u8bfe\u3001\u4e0a\u673a\u5b9e\u4e60 \u5728\u5b98\u7f51\u4e0a\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\u5230\u57f9\u8bad\u6559\u6750\u3001\u5b9e\u9a8c\u624b\u518c\u3002https://support.huawei.com/learning/trainFaceDetailAction?lang=zh pbiPath=term1000025154 courseId=Node1000013442","title":"GaussDB\u8003\u8bd5\u8ba4\u8bc1\u6307\u5357"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2/","text":"HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2 \u6700\u540e\u66f4\u65b0\u65f6\u95f4:2019-10-30 17:26:15 1 \u534e\u4e3a\u8ba4\u8bc1HCIP-GaussDB-OLTP V1.0\u8003\u8bd5 HCIP-GaussDB-OLTP V1.0\u8ba4\u8bc1\u7b14\u8bd5\u8003\u8bd5\uff08H13-921\uff09\u9884\u7ea6\u7f51\u5740: https://www.pearsonvue.com.cn/Huawei \u672c\u6587\u4e3b\u8981\u4ecb\u7ecdHCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2\uff0c\u5176\u5b83\u8ba4\u8bc1\u9879\u76ee\u7684\u8003\u8bd5\u5927\u7eb2\u53ef\u53c2\u8003\u76f8\u5e94\u7684\u57f9\u8bad\u6559\u6750\u6216\u901a\u8fc7\u534e\u4e3a\u516c\u53f8\u7f51\u7ad9 https://support.huawei.com/learning\u83b7\u53d6\u3002 \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0\u9879\u76ee\u5bf9\u5e94\u7684\u8003\u8bd5\u3001\u8003\u8bd5\u4ee3\u7801\u3001\u8003\u8bd5\u540d\u79f0\u3001\u8003\u8bd5\u65f6\u957f\u4fe1\u606f\u5982\u4e0b\u8868\u6240\u793a\uff1a \u8ba4\u8bc1\u540d\u79f0 \u8003\u8bd5\u4ee3\u7801 \u8003\u8bd5\u540d\u79f0 \u8003\u8bd5\u8bed\u8a00 \u8003\u8bd5\u65f6\u957f \u901a\u8fc7\u5206\u6570 */ *\u603b\u5206 HCIP-GaussDB-OLTP H13-921 HCIP-GaussDB-OLTP V1.0 \u4e2d\u6587 90min 600/1000 2 HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2 2.1 \u8003\u8bd5\u5185\u5bb9 \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u8986\u76d6\uff1a OLTP\u4f53\u7cfb\u7ed3\u6784 2%\uff1b \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa 7%\uff1b SQL\u9ad8\u7ea7\u7279\u6027 5%\uff1b \u6570\u636e\u5e93\u7ba1\u7406\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\u3001\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\u3001\u6570\u636e\u5e93\u6587\u4ef6\u7ba1\u7406\u3001\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\u3001\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff09 32%\uff1b \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406 5%\uff1b \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u76d1\u63a7\u3001\u5907\u4efd\u6062\u590d\u7ba1\u7406\u3001\u6027\u80fd\u8c03\u4f18\u3001\u6545\u969c\u5904\u7406\uff09 30%\uff1b \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027 5%\uff1b \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding\uff08\u5305\u62ec\uff1a\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\u3001\u65e5\u5e38\u8fd0\u7ef4\u3001\u9ad8\u53ef\u7528\u3001\u6545\u969c\u5904\u7406\u3001\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff09 14%\u3002 2.2 \u77e5\u8bc6\u70b9 \u7b2c\u4e00\u7ae0 GaussDB OLTP\u4f53\u7cfb\u7ed3\u6784\uff082%\uff09 \u4ea7\u54c1\u7b80\u4ecb \u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 \u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 \u5185\u5b58\u67b6\u6784 \u6587\u4ef6\u67b6\u6784 \u7ebf\u7a0b\u67b6\u6784 \u4e3b\u8981\u7279\u6027\u4ecb\u7ecd Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 \u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 \u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0 \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff087%\uff09 \u5b89\u88c5\u73af\u5883\u8981\u6c42 \u5b89\u88c5\u89c4\u5212 \u5b89\u88c5\u73af\u5883\u51c6\u5907 \u6570\u636e\u5e93\u5b89\u88c5 \u670d\u52a1\u7aef\u5b89\u88c5 \u5ba2\u6237\u7aef\u5b89\u88c5 \u6570\u636e\u5e93\u5de5\u5177 \u5de5\u5177\u6982\u8ff0 \u5ba2\u6237\u7aef\u5de5\u5177 DS zsql \u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 \u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM \u6570\u636e\u5e93\u5347\u7ea7 \u521b\u5efa\u6570\u636e\u5e93 \u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0 SQL\u9ad8\u7ea7\u7279\u6027\uff085%\uff09 \u6570\u636e\u7c7b\u578b SQL\u9ad8\u7ea7\u8bed\u6cd5 \u8868\u8fbe\u5f0f \u6761\u4ef6 \u8fd0\u7b97\u7b26 \u901a\u914d\u7b26 \u5e38\u91cf \u683c\u5f0f\u5316 \u51fd\u6570 PLSQL \u7b2c\u56db\u7ae0 \u6570\u636e\u5e93\u7ba1\u7406\uff0832%\uff09 \u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 \u6982\u8ff0 \u6570\u636e\u5e93\u53c2\u6570 \u6570\u636e\u5e93\u542f\u52a8 \u6570\u636e\u5e93\u5173\u95ed \u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b \u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h ) \u6570\u636e\u5e93\u76d1\u542c \u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 \u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f \u9a71\u52a8 \u5ba2\u6237\u7aef \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd \u4f1a\u8bdd\u7ba1\u7406 \u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 \u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 \u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 \u9884\u7f6e\u8868\u7a7a\u95f4 \u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 \u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe \u6587\u4ef6\u7ba1\u7406\uff081h\uff09 \u53c2\u6570\u6587\u4ef6 \u63a7\u5236\u6587\u4ef6 Redo\u65e5\u5fd7\u6587\u4ef6 \u5728\u7ebf\u65e5\u5fd7 \u5f52\u6863\u65e5\u5fd7 \u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 \u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 \u6982\u5ff5\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd \u81ea\u5b9a\u4e49\u7528\u6237 \u81ea\u5b9a\u4e49\u89d2\u8272 \u76f8\u5173\u89c6\u56fe \u6743\u9650\u7ba1\u7406 \u7cfb\u7edf\u6743\u9650 \u5bf9\u8c61\u6743\u9650 \u6388\u6743 \u6536\u56de Profile Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f \u7cfb\u7edf\u9ed8\u8ba4Profile \u81ea\u5b9a\u4e49Profile \u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 \u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 \u5bf9\u8c61\u7ba1\u7406 Table Index \u5206\u533a View Sequence \u5b58\u50a8\u8fc7\u7a0b \u81ea\u5b9a\u4e49\u51fd\u6570 \u540c\u4e49\u8bcd \u89e6\u53d1\u5668 \u5927\u5bf9\u8c61 \u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 \u5e76\u53d1\u6982\u8ff0 \u4ec0\u4e48\u662f\u5e76\u53d1 \u4e8b\u52a1 \u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 \u5e38\u89c1\u5e76\u53d1\u573a\u666f \u5e76\u53d1\u673a\u5236 \u56de\u6eda\u6bb5 MVCC\u673a\u5236 \u9501/\u6b7b\u9501 \u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0 \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff085%\uff09 \u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 \u8bbf\u95ee\u63a7\u5236 \u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e \u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 \u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 \u4f7f\u7528SSL\u8fde\u63a5 \u7528\u6237\u6743\u9650\u7ba1\u7406 \u5b89\u5168\u5ba1\u8ba1 \u5ba1\u8ba1\u5f00\u5173 \u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 \u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0 \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff0830%\uff09 \u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 \u7cfb\u7edf\u76d1\u63a7\u6307\u6807 \u76d1\u63a7\u544a\u8b66 \u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 \u76d1\u63a7\u65e5\u5fd7 \u76d1\u63a7\u76f8\u5173\u89c6\u56fe \u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 \u5907\u4efd\u6062\u590d\u6982\u8ff0 \u5907\u4efd \u5168\u91cf\u5907\u4efd \u589e\u91cf\u5907\u4efd \u6062\u590d \u5168\u91cf\u6062\u590d PITR \u6570\u636e\u5bfc\u5165\u5bfc\u51fa exp imp dump load \u56de\u6536\u7ad9 \u95ea\u56de \u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 \u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 \u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 \u7cfb\u7edf\u8c03\u4f18 \u5185\u5b58\u7ba1\u7406\u65b9\u5f0f \u7b49\u5f85\u4e8b\u4ef6 WSR\u62a5\u544a\u8be6\u89e3 SQL\u8c03\u4f18 \u6267\u884c\u8ba1\u5212\u4ecb\u7ecd \u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb RBO/CBO\u673a\u5236 \u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 SQL\u6027\u80fd\u5b9a\u4f4d SQL\u8c03\u4f18\u624b\u6bb5 Hint\u4ecb\u7ecd \u6027\u80fd\u76f8\u5173\u89c6\u56fe \u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 \u5e38\u89c1\u6545\u969c\u573a\u666f \u6545\u969c\u5904\u7406\u6d41\u7a0b \u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 \u5e94\u6025\u5904\u7406\u624b\u6bb5 \u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0 \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027 \uff085%\uff09 \u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd \u4e3b\u5907HA \u4e3b\u5907HA\u642d\u5efa HA\u4fee\u590d \u4e3b\u5907\u5207\u6362 \u4e3b\u5907\u72b6\u6001\u67e5\u8be2 \u6570\u636e\u5bf9\u6bd4 \u5e38\u89c1\u6545\u969c\u5904\u7406 \u903b\u8f91\u590d\u5236 \u903b\u8f91\u590d\u5236\u539f\u7406 \u5e94\u7528\u573a\u666f \u903b\u8f91\u590d\u5236\u914d\u7f6e \u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0 \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding \uff0814%\uff09 \u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 \u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb \u5b89\u88c5\u90e8\u7f72 \u5347\u7ea7 \u5378\u8f7d \u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 \u96c6\u7fa4\u7ba1\u7406 \u542f\u505c\u96c6\u7fa4 \u53c2\u6570\u4fee\u6539 \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5fd7\u5206\u7c7b \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5e38\u76d1\u63a7 \u544a\u8b66 \u72b6\u6001\u67e5\u8be2 \u65e5\u5fd7 \u5b89\u5168\u7ba1\u7406 \u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 \u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 \u4e3b\u5907 Paxos \u6545\u969c\u5904\u7406\uff081h\uff09 \u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 \u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 \u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 \u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0 \u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 \u5b89\u88c5\uff08\u5355\u673a\uff09 \u5907\u4efd\u6062\u590d \u521b\u5efa\u6570\u636e\u5e93 \u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 \u67e5\u8be2SQL\u8c03\u4f18 \u5355\u673a\u6269\u6210\u4e3b\u5907 \u8bf7\u6ce8\u610f\uff1a \u672c\u6587\u63d0\u5230\u7684\u8003\u8bd5\u5185\u5bb9\u4ec5\u4e3a\u8003\u751f\u63d0\u4f9b\u4e00\u4e2a\u901a\u7528\u7684\u8003\u8bd5\u6307\u5f15\uff0c\u672c\u6587\u672a\u63d0\u5230\u7684\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\u5728\u8003\u8bd5\u4e2d\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u3002 2.3 \u53c2\u8003\u8d44\u6599 \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0 \u8bfe\u7a0b \u534e\u4e3a\u4e91EI\uff08https://www.huaweicloud.com/ei\uff09\u5404\u670d\u52a1\u7684\u6587\u6863 2.4 \u63a8\u8350\u57f9\u8bad \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0\u57f9\u8bad\u3002","title":"HCIP GaussDB OLTP V1.0\u8003\u8bd5\u5927\u7eb2"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2/#hcip-gaussdb-oltp-v10","text":"","title":"HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2/#2019-10-30-172615","text":"1 \u534e\u4e3a\u8ba4\u8bc1HCIP-GaussDB-OLTP V1.0\u8003\u8bd5 HCIP-GaussDB-OLTP V1.0\u8ba4\u8bc1\u7b14\u8bd5\u8003\u8bd5\uff08H13-921\uff09\u9884\u7ea6\u7f51\u5740: https://www.pearsonvue.com.cn/Huawei \u672c\u6587\u4e3b\u8981\u4ecb\u7ecdHCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2\uff0c\u5176\u5b83\u8ba4\u8bc1\u9879\u76ee\u7684\u8003\u8bd5\u5927\u7eb2\u53ef\u53c2\u8003\u76f8\u5e94\u7684\u57f9\u8bad\u6559\u6750\u6216\u901a\u8fc7\u534e\u4e3a\u516c\u53f8\u7f51\u7ad9 https://support.huawei.com/learning\u83b7\u53d6\u3002 \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0\u9879\u76ee\u5bf9\u5e94\u7684\u8003\u8bd5\u3001\u8003\u8bd5\u4ee3\u7801\u3001\u8003\u8bd5\u540d\u79f0\u3001\u8003\u8bd5\u65f6\u957f\u4fe1\u606f\u5982\u4e0b\u8868\u6240\u793a\uff1a \u8ba4\u8bc1\u540d\u79f0 \u8003\u8bd5\u4ee3\u7801 \u8003\u8bd5\u540d\u79f0 \u8003\u8bd5\u8bed\u8a00 \u8003\u8bd5\u65f6\u957f \u901a\u8fc7\u5206\u6570 */ *\u603b\u5206 HCIP-GaussDB-OLTP H13-921 HCIP-GaussDB-OLTP V1.0 \u4e2d\u6587 90min 600/1000 2 HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u5927\u7eb2 2.1 \u8003\u8bd5\u5185\u5bb9 \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0\u8003\u8bd5\u8986\u76d6\uff1a OLTP\u4f53\u7cfb\u7ed3\u6784 2%\uff1b \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa 7%\uff1b SQL\u9ad8\u7ea7\u7279\u6027 5%\uff1b \u6570\u636e\u5e93\u7ba1\u7406\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\u3001\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\u3001\u6570\u636e\u5e93\u6587\u4ef6\u7ba1\u7406\u3001\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\u3001\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff09 32%\uff1b \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406 5%\uff1b \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u76d1\u63a7\u3001\u5907\u4efd\u6062\u590d\u7ba1\u7406\u3001\u6027\u80fd\u8c03\u4f18\u3001\u6545\u969c\u5904\u7406\uff09 30%\uff1b \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027 5%\uff1b \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding\uff08\u5305\u62ec\uff1a\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\u3001\u65e5\u5e38\u8fd0\u7ef4\u3001\u9ad8\u53ef\u7528\u3001\u6545\u969c\u5904\u7406\u3001\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff09 14%\u3002 2.2 \u77e5\u8bc6\u70b9 \u7b2c\u4e00\u7ae0 GaussDB OLTP\u4f53\u7cfb\u7ed3\u6784\uff082%\uff09 \u4ea7\u54c1\u7b80\u4ecb \u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 \u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 \u5185\u5b58\u67b6\u6784 \u6587\u4ef6\u67b6\u6784 \u7ebf\u7a0b\u67b6\u6784 \u4e3b\u8981\u7279\u6027\u4ecb\u7ecd Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 \u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 \u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0 \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff087%\uff09 \u5b89\u88c5\u73af\u5883\u8981\u6c42 \u5b89\u88c5\u89c4\u5212 \u5b89\u88c5\u73af\u5883\u51c6\u5907 \u6570\u636e\u5e93\u5b89\u88c5 \u670d\u52a1\u7aef\u5b89\u88c5 \u5ba2\u6237\u7aef\u5b89\u88c5 \u6570\u636e\u5e93\u5de5\u5177 \u5de5\u5177\u6982\u8ff0 \u5ba2\u6237\u7aef\u5de5\u5177 DS zsql \u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 \u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM \u6570\u636e\u5e93\u5347\u7ea7 \u521b\u5efa\u6570\u636e\u5e93 \u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0 SQL\u9ad8\u7ea7\u7279\u6027\uff085%\uff09 \u6570\u636e\u7c7b\u578b SQL\u9ad8\u7ea7\u8bed\u6cd5 \u8868\u8fbe\u5f0f \u6761\u4ef6 \u8fd0\u7b97\u7b26 \u901a\u914d\u7b26 \u5e38\u91cf \u683c\u5f0f\u5316 \u51fd\u6570 PLSQL \u7b2c\u56db\u7ae0 \u6570\u636e\u5e93\u7ba1\u7406\uff0832%\uff09 \u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 \u6982\u8ff0 \u6570\u636e\u5e93\u53c2\u6570 \u6570\u636e\u5e93\u542f\u52a8 \u6570\u636e\u5e93\u5173\u95ed \u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b \u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h ) \u6570\u636e\u5e93\u76d1\u542c \u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 \u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f \u9a71\u52a8 \u5ba2\u6237\u7aef \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd \u4f1a\u8bdd\u7ba1\u7406 \u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 \u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 \u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 \u9884\u7f6e\u8868\u7a7a\u95f4 \u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 \u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe \u6587\u4ef6\u7ba1\u7406\uff081h\uff09 \u53c2\u6570\u6587\u4ef6 \u63a7\u5236\u6587\u4ef6 Redo\u65e5\u5fd7\u6587\u4ef6 \u5728\u7ebf\u65e5\u5fd7 \u5f52\u6863\u65e5\u5fd7 \u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 \u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 \u6982\u5ff5\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd \u81ea\u5b9a\u4e49\u7528\u6237 \u81ea\u5b9a\u4e49\u89d2\u8272 \u76f8\u5173\u89c6\u56fe \u6743\u9650\u7ba1\u7406 \u7cfb\u7edf\u6743\u9650 \u5bf9\u8c61\u6743\u9650 \u6388\u6743 \u6536\u56de Profile Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f \u7cfb\u7edf\u9ed8\u8ba4Profile \u81ea\u5b9a\u4e49Profile \u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 \u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 \u5bf9\u8c61\u7ba1\u7406 Table Index \u5206\u533a View Sequence \u5b58\u50a8\u8fc7\u7a0b \u81ea\u5b9a\u4e49\u51fd\u6570 \u540c\u4e49\u8bcd \u89e6\u53d1\u5668 \u5927\u5bf9\u8c61 \u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 \u5e76\u53d1\u6982\u8ff0 \u4ec0\u4e48\u662f\u5e76\u53d1 \u4e8b\u52a1 \u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 \u5e38\u89c1\u5e76\u53d1\u573a\u666f \u5e76\u53d1\u673a\u5236 \u56de\u6eda\u6bb5 MVCC\u673a\u5236 \u9501/\u6b7b\u9501 \u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0 \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff085%\uff09 \u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 \u8bbf\u95ee\u63a7\u5236 \u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e \u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 \u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 \u4f7f\u7528SSL\u8fde\u63a5 \u7528\u6237\u6743\u9650\u7ba1\u7406 \u5b89\u5168\u5ba1\u8ba1 \u5ba1\u8ba1\u5f00\u5173 \u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 \u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0 \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff0830%\uff09 \u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 \u7cfb\u7edf\u76d1\u63a7\u6307\u6807 \u76d1\u63a7\u544a\u8b66 \u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 \u76d1\u63a7\u65e5\u5fd7 \u76d1\u63a7\u76f8\u5173\u89c6\u56fe \u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 \u5907\u4efd\u6062\u590d\u6982\u8ff0 \u5907\u4efd \u5168\u91cf\u5907\u4efd \u589e\u91cf\u5907\u4efd \u6062\u590d \u5168\u91cf\u6062\u590d PITR \u6570\u636e\u5bfc\u5165\u5bfc\u51fa exp imp dump load \u56de\u6536\u7ad9 \u95ea\u56de \u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 \u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 \u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 \u7cfb\u7edf\u8c03\u4f18 \u5185\u5b58\u7ba1\u7406\u65b9\u5f0f \u7b49\u5f85\u4e8b\u4ef6 WSR\u62a5\u544a\u8be6\u89e3 SQL\u8c03\u4f18 \u6267\u884c\u8ba1\u5212\u4ecb\u7ecd \u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb RBO/CBO\u673a\u5236 \u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 SQL\u6027\u80fd\u5b9a\u4f4d SQL\u8c03\u4f18\u624b\u6bb5 Hint\u4ecb\u7ecd \u6027\u80fd\u76f8\u5173\u89c6\u56fe \u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 \u5e38\u89c1\u6545\u969c\u573a\u666f \u6545\u969c\u5904\u7406\u6d41\u7a0b \u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 \u5e94\u6025\u5904\u7406\u624b\u6bb5 \u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0 \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027 \uff085%\uff09 \u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd \u4e3b\u5907HA \u4e3b\u5907HA\u642d\u5efa HA\u4fee\u590d \u4e3b\u5907\u5207\u6362 \u4e3b\u5907\u72b6\u6001\u67e5\u8be2 \u6570\u636e\u5bf9\u6bd4 \u5e38\u89c1\u6545\u969c\u5904\u7406 \u903b\u8f91\u590d\u5236 \u903b\u8f91\u590d\u5236\u539f\u7406 \u5e94\u7528\u573a\u666f \u903b\u8f91\u590d\u5236\u914d\u7f6e \u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0 \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding \uff0814%\uff09 \u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 \u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb \u5b89\u88c5\u90e8\u7f72 \u5347\u7ea7 \u5378\u8f7d \u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 \u96c6\u7fa4\u7ba1\u7406 \u542f\u505c\u96c6\u7fa4 \u53c2\u6570\u4fee\u6539 \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5fd7\u5206\u7c7b \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5e38\u76d1\u63a7 \u544a\u8b66 \u72b6\u6001\u67e5\u8be2 \u65e5\u5fd7 \u5b89\u5168\u7ba1\u7406 \u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 \u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 \u4e3b\u5907 Paxos \u6545\u969c\u5904\u7406\uff081h\uff09 \u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 \u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 \u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 \u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0 \u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 \u5b89\u88c5\uff08\u5355\u673a\uff09 \u5907\u4efd\u6062\u590d \u521b\u5efa\u6570\u636e\u5e93 \u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 \u67e5\u8be2SQL\u8c03\u4f18 \u5355\u673a\u6269\u6210\u4e3b\u5907 \u8bf7\u6ce8\u610f\uff1a \u672c\u6587\u63d0\u5230\u7684\u8003\u8bd5\u5185\u5bb9\u4ec5\u4e3a\u8003\u751f\u63d0\u4f9b\u4e00\u4e2a\u901a\u7528\u7684\u8003\u8bd5\u6307\u5f15\uff0c\u672c\u6587\u672a\u63d0\u5230\u7684\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\u5728\u8003\u8bd5\u4e2d\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u3002 2.3 \u53c2\u8003\u8d44\u6599 \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0 \u8bfe\u7a0b \u534e\u4e3a\u4e91EI\uff08https://www.huaweicloud.com/ei\uff09\u5404\u670d\u52a1\u7684\u6587\u6863 2.4 \u63a8\u8350\u57f9\u8bad \u534e\u4e3a\u8ba4\u8bc1GaussDB OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP V1.0\u57f9\u8bad\u3002","title":"\u6700\u540e\u66f4\u65b0\u65f6\u95f4:2019-10-30 17:26:15"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/","text":"HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad \u57f9\u8bad\u65f6\u957f 12\u5de5\u4f5c\u65e5 \u8bfe\u7a0b\u5185\u5bb9 \u7b2c\u4e00\u7ae0 GaussDB OLTP\u4f53\u7cfb\u7ed3\u6784\uff080.25\u5929\uff09 \u4ea7\u54c1\u7b80\u4ecb \u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 \u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 \u5185\u5b58\u67b6\u6784 \u6587\u4ef6\u67b6\u6784 \u7ebf\u7a0b\u67b6\u6784 \u4e3b\u8981\u7279\u6027\u4ecb\u7ecd Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 \u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 \u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0 \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff080.75\u5929\uff09 \u5b89\u88c5\u73af\u5883\u8981\u6c42 \u5b89\u88c5\u89c4\u5212 \u5b89\u88c5\u73af\u5883\u51c6\u5907 \u6570\u636e\u5e93\u5b89\u88c5 \u670d\u52a1\u7aef\u5b89\u88c5 \u5ba2\u6237\u7aef\u5b89\u88c5 \u6570\u636e\u5e93\u5de5\u5177 \u5de5\u5177\u6982\u8ff0 \u5ba2\u6237\u7aef\u5de5\u5177 DS zsql \u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 \u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM \u6570\u636e\u5e93\u5347\u7ea7 \u521b\u5efa\u6570\u636e\u5e93 \u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0 SQL\u9ad8\u7ea7\u7279\u6027\uff080.5\u5929\uff09 \u6570\u636e\u7c7b\u578b SQL\u9ad8\u7ea7\u8bed\u6cd5 \u8868\u8fbe\u5f0f \u6761\u4ef6 \u8fd0\u7b97\u7b26 \u901a\u914d\u7b26 \u5e38\u91cf \u683c\u5f0f\u5316 \u51fd\u6570 PLSQL \u7b2c\u56db\u7ae0 \u6570\u636e\u5e93\u7ba1\u7406\uff083.5\u5929\uff09 \u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 \u6982\u8ff0 \u6570\u636e\u5e93\u53c2\u6570 \u6570\u636e\u5e93\u542f\u52a8 \u6570\u636e\u5e93\u5173\u95ed \u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b \u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h \u6570\u636e\u5e93\u76d1\u542c \u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 \u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f \u9a71\u52a8 \u5ba2\u6237\u7aef \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd \u4f1a\u8bdd\u7ba1\u7406 \u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 \u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 \u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 \u9884\u7f6e\u8868\u7a7a\u95f4 \u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 \u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe \u6587\u4ef6\u7ba1\u7406\uff081h\uff09 \u53c2\u6570\u6587\u4ef6 \u63a7\u5236\u6587\u4ef6 Redo\u65e5\u5fd7\u6587\u4ef6 \u5728\u7ebf\u65e5\u5fd7 \u5f52\u6863\u65e5\u5fd7 \u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 \u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 \u6982\u5ff5\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd \u81ea\u5b9a\u4e49\u7528\u6237 \u81ea\u5b9a\u4e49\u89d2\u8272 \u76f8\u5173\u89c6\u56fe \u6743\u9650\u7ba1\u7406 \u7cfb\u7edf\u6743\u9650 \u5bf9\u8c61\u6743\u9650 \u6388\u6743 \u6536\u56de Profile Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f \u7cfb\u7edf\u9ed8\u8ba4Profile \u81ea\u5b9a\u4e49Profile \u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 \u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 \u5bf9\u8c61\u7ba1\u7406 Table Index \u5206\u533a View Sequence \u5b58\u50a8\u8fc7\u7a0b \u81ea\u5b9a\u4e49\u51fd\u6570 \u540c\u4e49\u8bcd \u89e6\u53d1\u5668 \u5927\u5bf9\u8c61 \u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 \u5e76\u53d1\u6982\u8ff0 \u4ec0\u4e48\u662f\u5e76\u53d1 \u4e8b\u52a1 \u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 \u5e38\u89c1\u5e76\u53d1\u573a\u666f \u5e76\u53d1\u673a\u5236 \u56de\u6eda\u6bb5 MVCC\u673a\u5236 \u9501/\u6b7b\u9501 \u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0 \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff080.5\u5929\uff09 \u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 \u8bbf\u95ee\u63a7\u5236 \u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e \u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 \u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 \u4f7f\u7528SSL\u8fde\u63a5 \u7528\u6237\u6743\u9650\u7ba1\u7406 \u5b89\u5168\u5ba1\u8ba1 \u5ba1\u8ba1\u5f00\u5173 \u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 \u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0 \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff083.5\u5929\uff09 \u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 \u7cfb\u7edf\u76d1\u63a7\u6307\u6807 \u76d1\u63a7\u544a\u8b66 \u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 \u76d1\u63a7\u65e5\u5fd7 \u76d1\u63a7\u76f8\u5173\u89c6\u56fe \u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 \u5907\u4efd\u6062\u590d\u6982\u8ff0 \u5907\u4efd \u5168\u91cf\u5907\u4efd \u589e\u91cf\u5907\u4efd \u6062\u590d \u5168\u91cf\u6062\u590d PITR \u6570\u636e\u5bfc\u5165\u5bfc\u51fa exp imp dump load \u56de\u6536\u7ad9 \u95ea\u56de \u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 \u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 \u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 \u7cfb\u7edf\u8c03\u4f18 \u5185\u5b58\u7ba1\u7406\u65b9\u5f0f \u7b49\u5f85\u4e8b\u4ef6 WSR\u62a5\u544a\u8be6\u89e3 SQL\u8c03\u4f18 \u6267\u884c\u8ba1\u5212\u4ecb\u7ecd \u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb RBO/CBO\u673a\u5236 \u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 SQL\u6027\u80fd\u5b9a\u4f4d SQL\u8c03\u4f18\u624b\u6bb5 Hint\u4ecb\u7ecd \u6027\u80fd\u76f8\u5173\u89c6\u56fe \u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 \u5e38\u89c1\u6545\u969c\u573a\u666f \u6545\u969c\u5904\u7406\u6d41\u7a0b \u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 \u5e94\u6025\u5904\u7406\u624b\u6bb5 \u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0 \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027 \uff080.5\u5929\uff09 \u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd \u4e3b\u5907HA \u4e3b\u5907HA\u642d\u5efa HA\u4fee\u590d \u4e3b\u5907\u5207\u6362 \u4e3b\u5907\u72b6\u6001\u67e5\u8be2 \u6570\u636e\u5bf9\u6bd4 \u5e38\u89c1\u6545\u969c\u5904\u7406 \u903b\u8f91\u590d\u5236 \u903b\u8f91\u590d\u5236\u539f\u7406 \u5e94\u7528\u573a\u666f \u903b\u8f91\u590d\u5236\u914d\u7f6e \u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0 \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding \uff081.5\u5929\uff09 \u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 \u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb \u5b89\u88c5\u90e8\u7f72 \u5347\u7ea7 \u5378\u8f7d \u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 \u96c6\u7fa4\u7ba1\u7406 \u542f\u505c\u96c6\u7fa4 \u53c2\u6570\u4fee\u6539 \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5fd7\u5206\u7c7b \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5e38\u76d1\u63a7 \u544a\u8b66 \u72b6\u6001\u67e5\u8be2 \u65e5\u5fd7 \u5b89\u5168\u7ba1\u7406 \u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 \u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 \u4e3b\u5907 Paxos \u6545\u969c\u5904\u7406\uff081h\uff09 \u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 \u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 \u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 \u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0 \u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 \u5b89\u88c5\uff08\u5355\u673a\uff09 \u5907\u4efd\u6062\u590d \u521b\u5efa\u6570\u636e\u5e93 \u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 \u67e5\u8be2SQL\u8c03\u4f18 \u5355\u673a\u6269\u6210\u4e3b\u5907 \u57f9\u8bad\u65b9\u5f0f \u7406\u8bba\u6388\u8bfe\u3001\u4e0a\u673a\u5b9e\u4e60","title":"HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#hcip-gaussdb-oltp","text":"","title":"HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#_1","text":"12\u5de5\u4f5c\u65e5","title":"\u57f9\u8bad\u65f6\u957f"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#_2","text":"\u7b2c\u4e00\u7ae0 GaussDB OLTP\u4f53\u7cfb\u7ed3\u6784\uff080.25\u5929\uff09 \u4ea7\u54c1\u7b80\u4ecb \u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 \u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 \u5185\u5b58\u67b6\u6784 \u6587\u4ef6\u67b6\u6784 \u7ebf\u7a0b\u67b6\u6784 \u4e3b\u8981\u7279\u6027\u4ecb\u7ecd Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 \u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 \u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0 \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff080.75\u5929\uff09 \u5b89\u88c5\u73af\u5883\u8981\u6c42 \u5b89\u88c5\u89c4\u5212 \u5b89\u88c5\u73af\u5883\u51c6\u5907 \u6570\u636e\u5e93\u5b89\u88c5 \u670d\u52a1\u7aef\u5b89\u88c5 \u5ba2\u6237\u7aef\u5b89\u88c5 \u6570\u636e\u5e93\u5de5\u5177 \u5de5\u5177\u6982\u8ff0 \u5ba2\u6237\u7aef\u5de5\u5177 DS zsql \u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 \u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM \u6570\u636e\u5e93\u5347\u7ea7 \u521b\u5efa\u6570\u636e\u5e93 \u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0 SQL\u9ad8\u7ea7\u7279\u6027\uff080.5\u5929\uff09 \u6570\u636e\u7c7b\u578b SQL\u9ad8\u7ea7\u8bed\u6cd5 \u8868\u8fbe\u5f0f \u6761\u4ef6 \u8fd0\u7b97\u7b26 \u901a\u914d\u7b26 \u5e38\u91cf \u683c\u5f0f\u5316 \u51fd\u6570 PLSQL \u7b2c\u56db\u7ae0 \u6570\u636e\u5e93\u7ba1\u7406\uff083.5\u5929\uff09 \u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 \u6982\u8ff0 \u6570\u636e\u5e93\u53c2\u6570 \u6570\u636e\u5e93\u542f\u52a8 \u6570\u636e\u5e93\u5173\u95ed \u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b \u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h \u6570\u636e\u5e93\u76d1\u542c \u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 \u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f \u9a71\u52a8 \u5ba2\u6237\u7aef \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd \u4f1a\u8bdd\u7ba1\u7406 \u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 \u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 \u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 \u9884\u7f6e\u8868\u7a7a\u95f4 \u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 \u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe \u6587\u4ef6\u7ba1\u7406\uff081h\uff09 \u53c2\u6570\u6587\u4ef6 \u63a7\u5236\u6587\u4ef6 Redo\u65e5\u5fd7\u6587\u4ef6 \u5728\u7ebf\u65e5\u5fd7 \u5f52\u6863\u65e5\u5fd7 \u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 \u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 \u6982\u5ff5\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd \u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd \u81ea\u5b9a\u4e49\u7528\u6237 \u81ea\u5b9a\u4e49\u89d2\u8272 \u76f8\u5173\u89c6\u56fe \u6743\u9650\u7ba1\u7406 \u7cfb\u7edf\u6743\u9650 \u5bf9\u8c61\u6743\u9650 \u6388\u6743 \u6536\u56de Profile Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f \u7cfb\u7edf\u9ed8\u8ba4Profile \u81ea\u5b9a\u4e49Profile \u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 \u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 \u5bf9\u8c61\u7ba1\u7406 Table Index \u5206\u533a View Sequence \u5b58\u50a8\u8fc7\u7a0b \u81ea\u5b9a\u4e49\u51fd\u6570 \u540c\u4e49\u8bcd \u89e6\u53d1\u5668 \u5927\u5bf9\u8c61 \u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe \u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 \u5e76\u53d1\u6982\u8ff0 \u4ec0\u4e48\u662f\u5e76\u53d1 \u4e8b\u52a1 \u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 \u5e38\u89c1\u5e76\u53d1\u573a\u666f \u5e76\u53d1\u673a\u5236 \u56de\u6eda\u6bb5 MVCC\u673a\u5236 \u9501/\u6b7b\u9501 \u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0 \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff080.5\u5929\uff09 \u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 \u8bbf\u95ee\u63a7\u5236 \u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e \u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 \u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 \u4f7f\u7528SSL\u8fde\u63a5 \u7528\u6237\u6743\u9650\u7ba1\u7406 \u5b89\u5168\u5ba1\u8ba1 \u5ba1\u8ba1\u5f00\u5173 \u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 \u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0 \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff083.5\u5929\uff09 \u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 \u7cfb\u7edf\u76d1\u63a7\u6307\u6807 \u76d1\u63a7\u544a\u8b66 \u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 \u76d1\u63a7\u65e5\u5fd7 \u76d1\u63a7\u76f8\u5173\u89c6\u56fe \u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 \u5907\u4efd\u6062\u590d\u6982\u8ff0 \u5907\u4efd \u5168\u91cf\u5907\u4efd \u589e\u91cf\u5907\u4efd \u6062\u590d \u5168\u91cf\u6062\u590d PITR \u6570\u636e\u5bfc\u5165\u5bfc\u51fa exp imp dump load \u56de\u6536\u7ad9 \u95ea\u56de \u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 \u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 \u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 \u7cfb\u7edf\u8c03\u4f18 \u5185\u5b58\u7ba1\u7406\u65b9\u5f0f \u7b49\u5f85\u4e8b\u4ef6 WSR\u62a5\u544a\u8be6\u89e3 SQL\u8c03\u4f18 \u6267\u884c\u8ba1\u5212\u4ecb\u7ecd \u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb RBO/CBO\u673a\u5236 \u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 SQL\u6027\u80fd\u5b9a\u4f4d SQL\u8c03\u4f18\u624b\u6bb5 Hint\u4ecb\u7ecd \u6027\u80fd\u76f8\u5173\u89c6\u56fe \u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 \u5e38\u89c1\u6545\u969c\u573a\u666f \u6545\u969c\u5904\u7406\u6d41\u7a0b \u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 \u5e94\u6025\u5904\u7406\u624b\u6bb5 \u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0 \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027 \uff080.5\u5929\uff09 \u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd \u4e3b\u5907HA \u4e3b\u5907HA\u642d\u5efa HA\u4fee\u590d \u4e3b\u5907\u5207\u6362 \u4e3b\u5907\u72b6\u6001\u67e5\u8be2 \u6570\u636e\u5bf9\u6bd4 \u5e38\u89c1\u6545\u969c\u5904\u7406 \u903b\u8f91\u590d\u5236 \u903b\u8f91\u590d\u5236\u539f\u7406 \u5e94\u7528\u573a\u666f \u903b\u8f91\u590d\u5236\u914d\u7f6e \u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0 \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding \uff081.5\u5929\uff09 \u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 \u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb \u5b89\u88c5\u90e8\u7f72 \u5347\u7ea7 \u5378\u8f7d \u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 \u96c6\u7fa4\u7ba1\u7406 \u542f\u505c\u96c6\u7fa4 \u53c2\u6570\u4fee\u6539 \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5fd7\u5206\u7c7b \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5e38\u76d1\u63a7 \u544a\u8b66 \u72b6\u6001\u67e5\u8be2 \u65e5\u5fd7 \u5b89\u5168\u7ba1\u7406 \u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 \u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 \u4e3b\u5907 Paxos \u6545\u969c\u5904\u7406\uff081h\uff09 \u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 \u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 \u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 \u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0 \u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 \u5b89\u88c5\uff08\u5355\u673a\uff09 \u5907\u4efd\u6062\u590d \u521b\u5efa\u6570\u636e\u5e93 \u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 \u67e5\u8be2SQL\u8c03\u4f18 \u5355\u673a\u6269\u6210\u4e3b\u5907","title":"\u8bfe\u7a0b\u5185\u5bb9"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP \u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#_3","text":"\u7406\u8bba\u6388\u8bfe\u3001\u4e0a\u673a\u5b9e\u4e60","title":"\u57f9\u8bad\u65b9\u5f0f"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2/","text":"_HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2 _\u6700\u540e\u66f4\u65b0\u65f6\u95f4:2019-10-30_17:26:15 1_\u534e\u4e3a\u8ba4\u8bc1HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5 HCIP-GaussDB-OLTP_V1.0\u8ba4\u8bc1\u7b14\u8bd5\u8003\u8bd5\uff08H13-921\uff09\u9884\u7ea6\u7f51\u5740:_https://www.pearsonvue.com.cn/Huawei \u672c\u6587\u4e3b\u8981\u4ecb\u7ecdHCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2\uff0c\u5176\u5b83\u8ba4\u8bc1\u9879\u76ee\u7684\u8003\u8bd5\u5927\u7eb2\u53ef\u53c2\u8003\u76f8\u5e94\u7684\u57f9\u8bad\u6559\u6750\u6216\u901a\u8fc7\u534e\u4e3a\u516c\u53f8\u7f51\u7ad9_https://support.huawei.com/learning\u83b7\u53d6\u3002 \u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0\u9879\u76ee\u5bf9\u5e94\u7684\u8003\u8bd5\u3001\u8003\u8bd5\u4ee3\u7801\u3001\u8003\u8bd5\u540d\u79f0\u3001\u8003\u8bd5\u65f6\u957f\u4fe1\u606f\u5982\u4e0b\u8868\u6240\u793a\uff1a | \u8ba4\u8bc1\u540d\u79f0 _ | \u8003\u8bd5\u4ee3\u7801 | \u8003\u8bd5\u540d\u79f0 _ __| \u8003\u8bd5\u8bed\u8a00 | \u8003\u8bd5\u65f6\u957f | \u901a\u8fc7\u5206\u6570 */ *\u603b\u5206 | | ----------------- | ------------ | ---------------------- | ------------ | ------------ | ------------------------- | |_HCIP-GaussDB-OLTP | H13-921 _ |_HCIP-GaussDB-OLTP_V1.0 |_\u4e2d\u6587 _ |_90min _ |_600/1000 _ _ ____| 2_HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2 2.1_\u8003\u8bd5\u5185\u5bb9 \u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u8986\u76d6\uff1a OLTP\u4f53\u7cfb\u7ed3\u6784_2%\uff1b \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa_7%\uff1b SQL\u9ad8\u7ea7\u7279\u6027_5%\uff1b \u6570\u636e\u5e93\u7ba1\u7406\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\u3001\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\u3001\u6570\u636e\u5e93\u6587\u4ef6\u7ba1\u7406\u3001\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\u3001\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff09_32%\uff1b \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406_5%\uff1b \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u76d1\u63a7\u3001\u5907\u4efd\u6062\u590d\u7ba1\u7406\u3001\u6027\u80fd\u8c03\u4f18\u3001\u6545\u969c\u5904\u7406\uff09_30%\uff1b \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027_5%\uff1b \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding\uff08\u5305\u62ec\uff1a\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\u3001\u65e5\u5e38\u8fd0\u7ef4\u3001\u9ad8\u53ef\u7528\u3001\u6545\u969c\u5904\u7406\u3001\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff09_14%\u3002 2.2_\u77e5\u8bc6\u70b9 \u7b2c\u4e00\u7ae0_GaussDB_OLTP\u4f53\u7cfb\u7ed3\u6784\uff082%\uff09 -__\u4ea7\u54c1\u7b80\u4ecb -_\u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 -_\u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 -_\u5185\u5b58\u67b6\u6784 -_\u6587\u4ef6\u67b6\u6784 -_\u7ebf\u7a0b\u67b6\u6784 -_\u4e3b\u8981\u7279\u6027\u4ecb\u7ecd __1._Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 __2._\u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 __3._\u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0_\u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff087%\uff09 -_\u5b89\u88c5\u73af\u5883\u8981\u6c42 -_\u5b89\u88c5\u89c4\u5212 -_\u5b89\u88c5\u73af\u5883\u51c6\u5907 -_\u6570\u636e\u5e93\u5b89\u88c5 __1._\u670d\u52a1\u7aef\u5b89\u88c5 __2._\u5ba2\u6237\u7aef\u5b89\u88c5 -_\u6570\u636e\u5e93\u5de5\u5177 __1._\u5de5\u5177\u6982\u8ff0 __2._\u5ba2\u6237\u7aef\u5de5\u5177 __3._DS __4._zsql __5._\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 __6._\u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM -_\u6570\u636e\u5e93\u5347\u7ea7 -_\u521b\u5efa\u6570\u636e\u5e93 -_\u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0_SQL\u9ad8\u7ea7\u7279\u6027\uff085%\uff09 -_\u6570\u636e\u7c7b\u578b -_SQL\u9ad8\u7ea7\u8bed\u6cd5 -_\u8868\u8fbe\u5f0f __1._\u6761\u4ef6 __2._\u8fd0\u7b97\u7b26 __3._\u901a\u914d\u7b26 __4._\u5e38\u91cf __5._\u683c\u5f0f\u5316 -_\u51fd\u6570 -_PLSQL \u7b2c\u56db\u7ae0_\u6570\u636e\u5e93\u7ba1\u7406\uff0832%\uff09 -__\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 __1. \u6982\u8ff0 __2._\u6570\u636e\u5e93\u53c2\u6570 __3._\u6570\u636e\u5e93\u542f\u52a8 __4._\u6570\u636e\u5e93\u5173\u95ed __5._\u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b __6._\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h ) __1. \u6570\u636e\u5e93\u76d1\u542c __2._\u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 __3._\u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f __4._\u9a71\u52a8 __5._\u5ba2\u6237\u7aef __6._\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd __7._\u4f1a\u8bdd\u7ba1\u7406 -_\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 __1._\u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 __2._\u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 __3._\u9884\u7f6e\u8868\u7a7a\u95f4 __4._\u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 __5._\u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe -_\u6587\u4ef6\u7ba1\u7406\uff081h\uff09 __1._\u53c2\u6570\u6587\u4ef6 __2._\u63a7\u5236\u6587\u4ef6 __3._Redo\u65e5\u5fd7\u6587\u4ef6 __4._\u5728\u7ebf\u65e5\u5fd7 __5._\u5f52\u6863\u65e5\u5fd7 -_\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 __1._\u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 __2._\u6982\u5ff5\u4ecb\u7ecd __3._\u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd __4._\u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd __5._\u81ea\u5b9a\u4e49\u7528\u6237 __6._\u81ea\u5b9a\u4e49\u89d2\u8272 __7._\u76f8\u5173\u89c6\u56fe __8._\u6743\u9650\u7ba1\u7406 __9._\u7cfb\u7edf\u6743\u9650 __10._\u5bf9\u8c61\u6743\u9650 __11._\u6388\u6743 __12._\u6536\u56de __13._Profile __14._Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f __15._\u7cfb\u7edf\u9ed8\u8ba4Profile __16._\u81ea\u5b9a\u4e49Profile -__\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 __1._\u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 __2._\u5bf9\u8c61\u7ba1\u7406 __3._Table __4._Index __5._\u5206\u533a __6._View __7._Sequence __8._\u5b58\u50a8\u8fc7\u7a0b __9._\u81ea\u5b9a\u4e49\u51fd\u6570 __10._\u540c\u4e49\u8bcd __11._\u89e6\u53d1\u5668 __12._\u5927\u5bf9\u8c61 __13._\u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 __1._\u5e76\u53d1\u6982\u8ff0 __2._\u4ec0\u4e48\u662f\u5e76\u53d1 __3._\u4e8b\u52a1 __4._\u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 __5._\u5e38\u89c1\u5e76\u53d1\u573a\u666f __6._\u5e76\u53d1\u673a\u5236 __7._\u56de\u6eda\u6bb5 __8._MVCC\u673a\u5236 __9._\u9501/\u6b7b\u9501 __10._\u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0_\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff085%\uff09 -_\u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 -_\u8bbf\u95ee\u63a7\u5236 __1._\u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e __2._\u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 __3._\u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 __4._\u4f7f\u7528SSL\u8fde\u63a5 -_\u7528\u6237\u6743\u9650\u7ba1\u7406 -_\u5b89\u5168\u5ba1\u8ba1 __1._\u5ba1\u8ba1\u5f00\u5173 __2._\u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 __3._\u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0_\u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff0830%\uff09 -_\u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 __1._\u7cfb\u7edf\u76d1\u63a7\u6307\u6807 __2._\u76d1\u63a7\u544a\u8b66 __3._\u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 __4._\u76d1\u63a7\u65e5\u5fd7 __5._\u76d1\u63a7\u76f8\u5173\u89c6\u56fe -_\u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 __1._\u5907\u4efd\u6062\u590d\u6982\u8ff0 __2._\u5907\u4efd __3._\u5168\u91cf\u5907\u4efd __4._\u589e\u91cf\u5907\u4efd __5._\u6062\u590d __6._\u5168\u91cf\u6062\u590d __7._PITR __8._\u6570\u636e\u5bfc\u5165\u5bfc\u51fa __9._exp __10._imp __11._dump __12._load __13._\u56de\u6536\u7ad9 __14._\u95ea\u56de -_\u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 __1._\u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 __2._\u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 __3._\u7cfb\u7edf\u8c03\u4f18 __4._\u5185\u5b58\u7ba1\u7406\u65b9\u5f0f __5._\u7b49\u5f85\u4e8b\u4ef6 __6._WSR\u62a5\u544a\u8be6\u89e3 __7._SQL\u8c03\u4f18 __8._\u6267\u884c\u8ba1\u5212\u4ecb\u7ecd __9._\u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb __10._RBO/CBO\u673a\u5236 __11._\u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 __12._SQL\u6027\u80fd\u5b9a\u4f4d __13._SQL\u8c03\u4f18\u624b\u6bb5 __14._Hint\u4ecb\u7ecd __15._\u6027\u80fd\u76f8\u5173\u89c6\u56fe -_\u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 __1._\u5e38\u89c1\u6545\u969c\u573a\u666f __2._\u6545\u969c\u5904\u7406\u6d41\u7a0b __3._\u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 __4._\u5e94\u6025\u5904\u7406\u624b\u6bb5 __5._\u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0_\u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027_\uff085%\uff09 -__\u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd -_\u4e3b\u5907HA __1._\u4e3b\u5907HA\u642d\u5efa __2._HA\u4fee\u590d __3._\u4e3b\u5907\u5207\u6362 __4._\u4e3b\u5907\u72b6\u6001\u67e5\u8be2 __5._\u6570\u636e\u5bf9\u6bd4 __6._\u5e38\u89c1\u6545\u969c\u5904\u7406 -_\u903b\u8f91\u590d\u5236 __1._\u903b\u8f91\u590d\u5236\u539f\u7406 __2._\u5e94\u7528\u573a\u666f __3._\u903b\u8f91\u590d\u5236\u914d\u7f6e __4._\u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0_\u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding_\uff0814%\uff09 -__\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 __1._\u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb __2._\u5b89\u88c5\u90e8\u7f72 __3._\u5347\u7ea7 __4._\u5378\u8f7d -_\u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 __1._\u96c6\u7fa4\u7ba1\u7406 __2._\u542f\u505c\u96c6\u7fa4 __3._\u53c2\u6570\u4fee\u6539 __4._\u65e5\u5fd7\u7ba1\u7406 __5._\u65e5\u5fd7\u5206\u7c7b __6._\u65e5\u5fd7\u7ba1\u7406 __7._\u65e5\u5e38\u76d1\u63a7 __8._\u544a\u8b66 __9._\u72b6\u6001\u67e5\u8be2 __10._\u65e5\u5fd7 __11._\u5b89\u5168\u7ba1\u7406 __12._\u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 -_\u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 __1._\u4e3b\u5907 __2._Paxos -_\u6545\u969c\u5904\u7406\uff081h\uff09 -_\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 __1._\u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 __2._\u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 __3._\u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0_\u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 -_\u5b89\u88c5\uff08\u5355\u673a\uff09 -_\u5907\u4efd\u6062\u590d __1._\u521b\u5efa\u6570\u636e\u5e93 __2._\u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 -_\u67e5\u8be2SQL\u8c03\u4f18 -_\u5355\u673a\u6269\u6210\u4e3b\u5907 \u8bf7\u6ce8\u610f\uff1a \u672c\u6587\u63d0\u5230\u7684\u8003\u8bd5\u5185\u5bb9\u4ec5\u4e3a\u8003\u751f\u63d0\u4f9b\u4e00\u4e2a\u901a\u7528\u7684\u8003\u8bd5\u6307\u5f15\uff0c\u672c\u6587\u672a\u63d0\u5230\u7684\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\u5728\u8003\u8bd5\u4e2d\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u3002 2.3_\u53c2\u8003\u8d44\u6599 \u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0_\u8bfe\u7a0b \u534e\u4e3a\u4e91EI\uff08https://www.huaweicloud.com/ei\uff09\u5404\u670d\u52a1\u7684\u6587\u6863 2.4_\u63a8\u8350\u57f9\u8bad __\u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0\u57f9\u8bad\u3002","title":"HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2/#_hcip-gaussdb-oltp_v10","text":"","title":"_HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2/#_2019-10-30_172615","text":"1_\u534e\u4e3a\u8ba4\u8bc1HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5 HCIP-GaussDB-OLTP_V1.0\u8ba4\u8bc1\u7b14\u8bd5\u8003\u8bd5\uff08H13-921\uff09\u9884\u7ea6\u7f51\u5740:_https://www.pearsonvue.com.cn/Huawei \u672c\u6587\u4e3b\u8981\u4ecb\u7ecdHCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2\uff0c\u5176\u5b83\u8ba4\u8bc1\u9879\u76ee\u7684\u8003\u8bd5\u5927\u7eb2\u53ef\u53c2\u8003\u76f8\u5e94\u7684\u57f9\u8bad\u6559\u6750\u6216\u901a\u8fc7\u534e\u4e3a\u516c\u53f8\u7f51\u7ad9_https://support.huawei.com/learning\u83b7\u53d6\u3002 \u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0\u9879\u76ee\u5bf9\u5e94\u7684\u8003\u8bd5\u3001\u8003\u8bd5\u4ee3\u7801\u3001\u8003\u8bd5\u540d\u79f0\u3001\u8003\u8bd5\u65f6\u957f\u4fe1\u606f\u5982\u4e0b\u8868\u6240\u793a\uff1a | \u8ba4\u8bc1\u540d\u79f0 _ | \u8003\u8bd5\u4ee3\u7801 | \u8003\u8bd5\u540d\u79f0 _ __| \u8003\u8bd5\u8bed\u8a00 | \u8003\u8bd5\u65f6\u957f | \u901a\u8fc7\u5206\u6570 */ *\u603b\u5206 | | ----------------- | ------------ | ---------------------- | ------------ | ------------ | ------------------------- | |_HCIP-GaussDB-OLTP | H13-921 _ |_HCIP-GaussDB-OLTP_V1.0 |_\u4e2d\u6587 _ |_90min _ |_600/1000 _ _ ____| 2_HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u5927\u7eb2 2.1_\u8003\u8bd5\u5185\u5bb9 \u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0\u8003\u8bd5\u8986\u76d6\uff1a OLTP\u4f53\u7cfb\u7ed3\u6784_2%\uff1b \u6570\u636e\u5e93\u73af\u5883\u642d\u5efa_7%\uff1b SQL\u9ad8\u7ea7\u7279\u6027_5%\uff1b \u6570\u636e\u5e93\u7ba1\u7406\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\u3001\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\u3001\u6570\u636e\u5e93\u6587\u4ef6\u7ba1\u7406\u3001\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\u3001\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\u3001\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff09_32%\uff1b \u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406_5%\uff1b \u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff08\u5305\u62ec\uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u76d1\u63a7\u3001\u5907\u4efd\u6062\u590d\u7ba1\u7406\u3001\u6027\u80fd\u8c03\u4f18\u3001\u6545\u969c\u5904\u7406\uff09_30%\uff1b \u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027_5%\uff1b \u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding\uff08\u5305\u62ec\uff1a\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\u3001\u65e5\u5e38\u8fd0\u7ef4\u3001\u9ad8\u53ef\u7528\u3001\u6545\u969c\u5904\u7406\u3001\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff09_14%\u3002 2.2_\u77e5\u8bc6\u70b9 \u7b2c\u4e00\u7ae0_GaussDB_OLTP\u4f53\u7cfb\u7ed3\u6784\uff082%\uff09 -__\u4ea7\u54c1\u7b80\u4ecb -_\u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 -_\u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 -_\u5185\u5b58\u67b6\u6784 -_\u6587\u4ef6\u67b6\u6784 -_\u7ebf\u7a0b\u67b6\u6784 -_\u4e3b\u8981\u7279\u6027\u4ecb\u7ecd __1._Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 __2._\u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 __3._\u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0_\u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff087%\uff09 -_\u5b89\u88c5\u73af\u5883\u8981\u6c42 -_\u5b89\u88c5\u89c4\u5212 -_\u5b89\u88c5\u73af\u5883\u51c6\u5907 -_\u6570\u636e\u5e93\u5b89\u88c5 __1._\u670d\u52a1\u7aef\u5b89\u88c5 __2._\u5ba2\u6237\u7aef\u5b89\u88c5 -_\u6570\u636e\u5e93\u5de5\u5177 __1._\u5de5\u5177\u6982\u8ff0 __2._\u5ba2\u6237\u7aef\u5de5\u5177 __3._DS __4._zsql __5._\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 __6._\u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM -_\u6570\u636e\u5e93\u5347\u7ea7 -_\u521b\u5efa\u6570\u636e\u5e93 -_\u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0_SQL\u9ad8\u7ea7\u7279\u6027\uff085%\uff09 -_\u6570\u636e\u7c7b\u578b -_SQL\u9ad8\u7ea7\u8bed\u6cd5 -_\u8868\u8fbe\u5f0f __1._\u6761\u4ef6 __2._\u8fd0\u7b97\u7b26 __3._\u901a\u914d\u7b26 __4._\u5e38\u91cf __5._\u683c\u5f0f\u5316 -_\u51fd\u6570 -_PLSQL \u7b2c\u56db\u7ae0_\u6570\u636e\u5e93\u7ba1\u7406\uff0832%\uff09 -__\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 __1. \u6982\u8ff0 __2._\u6570\u636e\u5e93\u53c2\u6570 __3._\u6570\u636e\u5e93\u542f\u52a8 __4._\u6570\u636e\u5e93\u5173\u95ed __5._\u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b __6._\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h ) __1. \u6570\u636e\u5e93\u76d1\u542c __2._\u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 __3._\u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f __4._\u9a71\u52a8 __5._\u5ba2\u6237\u7aef __6._\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd __7._\u4f1a\u8bdd\u7ba1\u7406 -_\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 __1._\u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 __2._\u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 __3._\u9884\u7f6e\u8868\u7a7a\u95f4 __4._\u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 __5._\u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe -_\u6587\u4ef6\u7ba1\u7406\uff081h\uff09 __1._\u53c2\u6570\u6587\u4ef6 __2._\u63a7\u5236\u6587\u4ef6 __3._Redo\u65e5\u5fd7\u6587\u4ef6 __4._\u5728\u7ebf\u65e5\u5fd7 __5._\u5f52\u6863\u65e5\u5fd7 -_\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 __1._\u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 __2._\u6982\u5ff5\u4ecb\u7ecd __3._\u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd __4._\u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd __5._\u81ea\u5b9a\u4e49\u7528\u6237 __6._\u81ea\u5b9a\u4e49\u89d2\u8272 __7._\u76f8\u5173\u89c6\u56fe __8._\u6743\u9650\u7ba1\u7406 __9._\u7cfb\u7edf\u6743\u9650 __10._\u5bf9\u8c61\u6743\u9650 __11._\u6388\u6743 __12._\u6536\u56de __13._Profile __14._Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f __15._\u7cfb\u7edf\u9ed8\u8ba4Profile __16._\u81ea\u5b9a\u4e49Profile -__\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 __1._\u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 __2._\u5bf9\u8c61\u7ba1\u7406 __3._Table __4._Index __5._\u5206\u533a __6._View __7._Sequence __8._\u5b58\u50a8\u8fc7\u7a0b __9._\u81ea\u5b9a\u4e49\u51fd\u6570 __10._\u540c\u4e49\u8bcd __11._\u89e6\u53d1\u5668 __12._\u5927\u5bf9\u8c61 __13._\u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 __1._\u5e76\u53d1\u6982\u8ff0 __2._\u4ec0\u4e48\u662f\u5e76\u53d1 __3._\u4e8b\u52a1 __4._\u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 __5._\u5e38\u89c1\u5e76\u53d1\u573a\u666f __6._\u5e76\u53d1\u673a\u5236 __7._\u56de\u6eda\u6bb5 __8._MVCC\u673a\u5236 __9._\u9501/\u6b7b\u9501 __10._\u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0_\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff085%\uff09 -_\u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 -_\u8bbf\u95ee\u63a7\u5236 __1._\u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e __2._\u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 __3._\u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 __4._\u4f7f\u7528SSL\u8fde\u63a5 -_\u7528\u6237\u6743\u9650\u7ba1\u7406 -_\u5b89\u5168\u5ba1\u8ba1 __1._\u5ba1\u8ba1\u5f00\u5173 __2._\u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 __3._\u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0_\u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff0830%\uff09 -_\u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 __1._\u7cfb\u7edf\u76d1\u63a7\u6307\u6807 __2._\u76d1\u63a7\u544a\u8b66 __3._\u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 __4._\u76d1\u63a7\u65e5\u5fd7 __5._\u76d1\u63a7\u76f8\u5173\u89c6\u56fe -_\u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 __1._\u5907\u4efd\u6062\u590d\u6982\u8ff0 __2._\u5907\u4efd __3._\u5168\u91cf\u5907\u4efd __4._\u589e\u91cf\u5907\u4efd __5._\u6062\u590d __6._\u5168\u91cf\u6062\u590d __7._PITR __8._\u6570\u636e\u5bfc\u5165\u5bfc\u51fa __9._exp __10._imp __11._dump __12._load __13._\u56de\u6536\u7ad9 __14._\u95ea\u56de -_\u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 __1._\u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 __2._\u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 __3._\u7cfb\u7edf\u8c03\u4f18 __4._\u5185\u5b58\u7ba1\u7406\u65b9\u5f0f __5._\u7b49\u5f85\u4e8b\u4ef6 __6._WSR\u62a5\u544a\u8be6\u89e3 __7._SQL\u8c03\u4f18 __8._\u6267\u884c\u8ba1\u5212\u4ecb\u7ecd __9._\u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb __10._RBO/CBO\u673a\u5236 __11._\u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 __12._SQL\u6027\u80fd\u5b9a\u4f4d __13._SQL\u8c03\u4f18\u624b\u6bb5 __14._Hint\u4ecb\u7ecd __15._\u6027\u80fd\u76f8\u5173\u89c6\u56fe -_\u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 __1._\u5e38\u89c1\u6545\u969c\u573a\u666f __2._\u6545\u969c\u5904\u7406\u6d41\u7a0b __3._\u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 __4._\u5e94\u6025\u5904\u7406\u624b\u6bb5 __5._\u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0_\u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027_\uff085%\uff09 -__\u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd -_\u4e3b\u5907HA __1._\u4e3b\u5907HA\u642d\u5efa __2._HA\u4fee\u590d __3._\u4e3b\u5907\u5207\u6362 __4._\u4e3b\u5907\u72b6\u6001\u67e5\u8be2 __5._\u6570\u636e\u5bf9\u6bd4 __6._\u5e38\u89c1\u6545\u969c\u5904\u7406 -_\u903b\u8f91\u590d\u5236 __1._\u903b\u8f91\u590d\u5236\u539f\u7406 __2._\u5e94\u7528\u573a\u666f __3._\u903b\u8f91\u590d\u5236\u914d\u7f6e __4._\u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0_\u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding_\uff0814%\uff09 -__\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 __1._\u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb __2._\u5b89\u88c5\u90e8\u7f72 __3._\u5347\u7ea7 __4._\u5378\u8f7d -_\u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 __1._\u96c6\u7fa4\u7ba1\u7406 __2._\u542f\u505c\u96c6\u7fa4 __3._\u53c2\u6570\u4fee\u6539 __4._\u65e5\u5fd7\u7ba1\u7406 __5._\u65e5\u5fd7\u5206\u7c7b __6._\u65e5\u5fd7\u7ba1\u7406 __7._\u65e5\u5e38\u76d1\u63a7 __8._\u544a\u8b66 __9._\u72b6\u6001\u67e5\u8be2 __10._\u65e5\u5fd7 __11._\u5b89\u5168\u7ba1\u7406 __12._\u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 -_\u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 __1._\u4e3b\u5907 __2._Paxos -_\u6545\u969c\u5904\u7406\uff081h\uff09 -_\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 __1._\u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 __2._\u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 __3._\u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0_\u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 -_\u5b89\u88c5\uff08\u5355\u673a\uff09 -_\u5907\u4efd\u6062\u590d __1._\u521b\u5efa\u6570\u636e\u5e93 __2._\u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 -_\u67e5\u8be2SQL\u8c03\u4f18 -_\u5355\u673a\u6269\u6210\u4e3b\u5907 \u8bf7\u6ce8\u610f\uff1a \u672c\u6587\u63d0\u5230\u7684\u8003\u8bd5\u5185\u5bb9\u4ec5\u4e3a\u8003\u751f\u63d0\u4f9b\u4e00\u4e2a\u901a\u7528\u7684\u8003\u8bd5\u6307\u5f15\uff0c\u672c\u6587\u672a\u63d0\u5230\u7684\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\u5728\u8003\u8bd5\u4e2d\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u3002 2.3_\u53c2\u8003\u8d44\u6599 \u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0_\u8bfe\u7a0b \u534e\u4e3a\u4e91EI\uff08https://www.huaweicloud.com/ei\uff09\u5404\u670d\u52a1\u7684\u6587\u6863 2.4_\u63a8\u8350\u57f9\u8bad __\u534e\u4e3a\u8ba4\u8bc1GaussDB_OLTP\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08HCIP-GaussDB-OLTP_V1.0\u57f9\u8bad\u3002","title":"_\u6700\u540e\u66f4\u65b0\u65f6\u95f4:2019-10-30_17:26:15"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/","text":"_HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad _\u57f9\u8bad\u65f6\u957f -_12\u5de5\u4f5c\u65e5 _\u8bfe\u7a0b\u5185\u5bb9 \u7b2c\u4e00\u7ae0_GaussDB_OLTP\u4f53\u7cfb\u7ed3\u6784\uff080.25\u5929\uff09 -__\u4ea7\u54c1\u7b80\u4ecb -_\u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 -_\u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 -_\u5185\u5b58\u67b6\u6784 -_\u6587\u4ef6\u67b6\u6784 -_\u7ebf\u7a0b\u67b6\u6784 -_\u4e3b\u8981\u7279\u6027\u4ecb\u7ecd __1._Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 __2._\u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 __3._\u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0_\u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff080.75\u5929\uff09 -_\u5b89\u88c5\u73af\u5883\u8981\u6c42 -_\u5b89\u88c5\u89c4\u5212 -_\u5b89\u88c5\u73af\u5883\u51c6\u5907 -_\u6570\u636e\u5e93\u5b89\u88c5 __1._\u670d\u52a1\u7aef\u5b89\u88c5 __2._\u5ba2\u6237\u7aef\u5b89\u88c5 -_\u6570\u636e\u5e93\u5de5\u5177 __1._\u5de5\u5177\u6982\u8ff0 __2._\u5ba2\u6237\u7aef\u5de5\u5177 __3._DS __4._zsql __5._\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 __6._\u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM -_\u6570\u636e\u5e93\u5347\u7ea7 -_\u521b\u5efa\u6570\u636e\u5e93 -_\u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0_SQL\u9ad8\u7ea7\u7279\u6027\uff080.5\u5929\uff09 -_\u6570\u636e\u7c7b\u578b -_SQL\u9ad8\u7ea7\u8bed\u6cd5 -_\u8868\u8fbe\u5f0f __1._\u6761\u4ef6 __2._\u8fd0\u7b97\u7b26 __3._\u901a\u914d\u7b26 __4._\u5e38\u91cf __5._\u683c\u5f0f\u5316 -_\u51fd\u6570 -_PLSQL \u7b2c\u56db\u7ae0_\u6570\u636e\u5e93\u7ba1\u7406\uff083.5\u5929\uff09 -__\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 __1. \u6982\u8ff0 __2._\u6570\u636e\u5e93\u53c2\u6570 __3._\u6570\u636e\u5e93\u542f\u52a8 __4._\u6570\u636e\u5e93\u5173\u95ed __5._\u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b __6._\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h __1._\u6570\u636e\u5e93\u76d1\u542c __2._\u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 __3._\u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f __4._\u9a71\u52a8 __5._\u5ba2\u6237\u7aef __6._\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd __7._\u4f1a\u8bdd\u7ba1\u7406 -_\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 __1._\u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 __2._\u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 __3._\u9884\u7f6e\u8868\u7a7a\u95f4 __4._\u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 __5._\u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe -_\u6587\u4ef6\u7ba1\u7406\uff081h\uff09 __1._\u53c2\u6570\u6587\u4ef6 __2._\u63a7\u5236\u6587\u4ef6 __3._Redo\u65e5\u5fd7\u6587\u4ef6 __4._\u5728\u7ebf\u65e5\u5fd7 __5._\u5f52\u6863\u65e5\u5fd7 -_\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 __1._\u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 __2._\u6982\u5ff5\u4ecb\u7ecd __3._\u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd __4._\u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd __5._\u81ea\u5b9a\u4e49\u7528\u6237 __6._\u81ea\u5b9a\u4e49\u89d2\u8272 __7._\u76f8\u5173\u89c6\u56fe __8._\u6743\u9650\u7ba1\u7406 __9._\u7cfb\u7edf\u6743\u9650 __10._\u5bf9\u8c61\u6743\u9650 __11._\u6388\u6743 __12._\u6536\u56de __13._Profile __14._Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f __15._\u7cfb\u7edf\u9ed8\u8ba4Profile __16._\u81ea\u5b9a\u4e49Profile -__\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 __1._\u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 __2._\u5bf9\u8c61\u7ba1\u7406 __3._Table __4._Index __5._\u5206\u533a __6._View __7._Sequence __8._\u5b58\u50a8\u8fc7\u7a0b __9._\u81ea\u5b9a\u4e49\u51fd\u6570 __10._\u540c\u4e49\u8bcd __11._\u89e6\u53d1\u5668 __12._\u5927\u5bf9\u8c61 __13._\u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 __1._\u5e76\u53d1\u6982\u8ff0 __2._\u4ec0\u4e48\u662f\u5e76\u53d1 __3._\u4e8b\u52a1 __4._\u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 __5._\u5e38\u89c1\u5e76\u53d1\u573a\u666f __6._\u5e76\u53d1\u673a\u5236 __7._\u56de\u6eda\u6bb5 __8._MVCC\u673a\u5236 __9._\u9501/\u6b7b\u9501 __10._\u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0_\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff080.5\u5929\uff09 -_\u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 -_\u8bbf\u95ee\u63a7\u5236 __1._\u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e __2._\u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 __3._\u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 __4._\u4f7f\u7528SSL\u8fde\u63a5 -_\u7528\u6237\u6743\u9650\u7ba1\u7406 -_\u5b89\u5168\u5ba1\u8ba1 __1._\u5ba1\u8ba1\u5f00\u5173 __2._\u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 __3._\u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0_\u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff083.5\u5929\uff09 -_\u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 __1._\u7cfb\u7edf\u76d1\u63a7\u6307\u6807 __2._\u76d1\u63a7\u544a\u8b66 __3._\u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 __4._\u76d1\u63a7\u65e5\u5fd7 __5._\u76d1\u63a7\u76f8\u5173\u89c6\u56fe -_\u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 __1._\u5907\u4efd\u6062\u590d\u6982\u8ff0 __2._\u5907\u4efd __3._\u5168\u91cf\u5907\u4efd __4._\u589e\u91cf\u5907\u4efd __5._\u6062\u590d __6._\u5168\u91cf\u6062\u590d __7._PITR __8._\u6570\u636e\u5bfc\u5165\u5bfc\u51fa __9._exp __10._imp __11._dump __12._load __13._\u56de\u6536\u7ad9 __14._\u95ea\u56de -_\u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 __1._\u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 __2._\u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 __3._\u7cfb\u7edf\u8c03\u4f18 __4._\u5185\u5b58\u7ba1\u7406\u65b9\u5f0f __5._\u7b49\u5f85\u4e8b\u4ef6 __6._WSR\u62a5\u544a\u8be6\u89e3 __7._SQL\u8c03\u4f18 __8._\u6267\u884c\u8ba1\u5212\u4ecb\u7ecd __9._\u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb __10._RBO/CBO\u673a\u5236 __11._\u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 __12._SQL\u6027\u80fd\u5b9a\u4f4d __13._SQL\u8c03\u4f18\u624b\u6bb5 __14._Hint\u4ecb\u7ecd __15._\u6027\u80fd\u76f8\u5173\u89c6\u56fe -_\u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 __1._\u5e38\u89c1\u6545\u969c\u573a\u666f __2._\u6545\u969c\u5904\u7406\u6d41\u7a0b __3._\u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 __4._\u5e94\u6025\u5904\u7406\u624b\u6bb5 __5._\u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0_\u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027_\uff080.5\u5929\uff09 -__\u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd -_\u4e3b\u5907HA __1._\u4e3b\u5907HA\u642d\u5efa __2._HA\u4fee\u590d __3._\u4e3b\u5907\u5207\u6362 __4._\u4e3b\u5907\u72b6\u6001\u67e5\u8be2 __5._\u6570\u636e\u5bf9\u6bd4 __6._\u5e38\u89c1\u6545\u969c\u5904\u7406 -_\u903b\u8f91\u590d\u5236 __1._\u903b\u8f91\u590d\u5236\u539f\u7406 __2._\u5e94\u7528\u573a\u666f __3._\u903b\u8f91\u590d\u5236\u914d\u7f6e __4._\u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0_\u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding_\uff081.5\u5929\uff09 -__\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 __1._\u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb __2._\u5b89\u88c5\u90e8\u7f72 __3._\u5347\u7ea7 __4._\u5378\u8f7d -_\u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 __1._\u96c6\u7fa4\u7ba1\u7406 __2._\u542f\u505c\u96c6\u7fa4 __3._\u53c2\u6570\u4fee\u6539 __4._\u65e5\u5fd7\u7ba1\u7406 __5._\u65e5\u5fd7\u5206\u7c7b __6._\u65e5\u5fd7\u7ba1\u7406 __7._\u65e5\u5e38\u76d1\u63a7 __8._\u544a\u8b66 __9._\u72b6\u6001\u67e5\u8be2 __10._\u65e5\u5fd7 __11._\u5b89\u5168\u7ba1\u7406 __12._\u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 -_\u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 __1._\u4e3b\u5907 __2._Paxos -_\u6545\u969c\u5904\u7406\uff081h\uff09 -_\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 __1._\u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 __2._\u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 __3._\u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0_\u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 -_\u5b89\u88c5\uff08\u5355\u673a\uff09 -_\u5907\u4efd\u6062\u590d __1._\u521b\u5efa\u6570\u636e\u5e93 __2._\u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 -_\u67e5\u8be2SQL\u8c03\u4f18 -_\u5355\u673a\u6269\u6210\u4e3b\u5907 _\u57f9\u8bad\u65b9\u5f0f -_\u7406\u8bba\u6388\u8bfe\u3001\u4e0a\u673a\u5b9e\u4e60","title":"HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#_hcip-gaussdb-oltp_","text":"","title":"_HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#_","text":"-_12\u5de5\u4f5c\u65e5","title":"_\u57f9\u8bad\u65f6\u957f"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#__1","text":"\u7b2c\u4e00\u7ae0_GaussDB_OLTP\u4f53\u7cfb\u7ed3\u6784\uff080.25\u5929\uff09 -__\u4ea7\u54c1\u7b80\u4ecb -_\u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784 -_\u652f\u6301\u7684\u90e8\u7f72\u5f62\u6001 -_\u5185\u5b58\u67b6\u6784 -_\u6587\u4ef6\u67b6\u6784 -_\u7ebf\u7a0b\u67b6\u6784 -_\u4e3b\u8981\u7279\u6027\u4ecb\u7ecd __1._Paxos\u4e24\u5730\u4e09\u4e2d\u5fc3\u9ad8\u53ef\u7528 __2._\u5206\u5e03\u5f0f\u9ad8\u6269\u5c55 __3._\u5206\u5e03\u5f0f\u4e8b\u52a1\u5f3a\u4e00\u81f4 \u7b2c\u4e8c\u7ae0_\u6570\u636e\u5e93\u73af\u5883\u642d\u5efa\uff080.75\u5929\uff09 -_\u5b89\u88c5\u73af\u5883\u8981\u6c42 -_\u5b89\u88c5\u89c4\u5212 -_\u5b89\u88c5\u73af\u5883\u51c6\u5907 -_\u6570\u636e\u5e93\u5b89\u88c5 __1._\u670d\u52a1\u7aef\u5b89\u88c5 __2._\u5ba2\u6237\u7aef\u5b89\u88c5 -_\u6570\u636e\u5e93\u5de5\u5177 __1._\u5de5\u5177\u6982\u8ff0 __2._\u5ba2\u6237\u7aef\u5de5\u5177 __3._DS __4._zsql __5._\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177 __6._\u56fe\u5f62\u5316\u8fd0\u7ef4\u5de5\u5177DM -_\u6570\u636e\u5e93\u5347\u7ea7 -_\u521b\u5efa\u6570\u636e\u5e93 -_\u6570\u636e\u5e93\u8fc1\u79fb \u7b2c\u4e09\u7ae0_SQL\u9ad8\u7ea7\u7279\u6027\uff080.5\u5929\uff09 -_\u6570\u636e\u7c7b\u578b -_SQL\u9ad8\u7ea7\u8bed\u6cd5 -_\u8868\u8fbe\u5f0f __1._\u6761\u4ef6 __2._\u8fd0\u7b97\u7b26 __3._\u901a\u914d\u7b26 __4._\u5e38\u91cf __5._\u683c\u5f0f\u5316 -_\u51fd\u6570 -_PLSQL \u7b2c\u56db\u7ae0_\u6570\u636e\u5e93\u7ba1\u7406\uff083.5\u5929\uff09 -__\u6570\u636e\u5e93\u5b9e\u4f8b\u7ba1\u7406\uff082h\uff09 __1. \u6982\u8ff0 __2._\u6570\u636e\u5e93\u53c2\u6570 __3._\u6570\u636e\u5e93\u542f\u52a8 __4._\u6570\u636e\u5e93\u5173\u95ed __5._\u7cfb\u7edf\u65e5\u5fd7\u67e5\u770b __6._\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\uff081h __1._\u6570\u636e\u5e93\u76d1\u542c __2._\u6570\u636e\u5e93\u8fde\u63a5\u673a\u5236 __3._\u6570\u636e\u5e93\u8fde\u63a5\u65b9\u5f0f __4._\u9a71\u52a8 __5._\u5ba2\u6237\u7aef __6._\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u529f\u80fd __7._\u4f1a\u8bdd\u7ba1\u7406 -_\u6570\u636e\u5e93\u5b58\u50a8\u7ba1\u7406\uff080.5\u5929\uff09 __1._\u6570\u636e\u5e93\u5b58\u50a8\u7ed3\u6784 __2._\u8868\u7a7a\u95f4\u548c\u6570\u636e\u6587\u4ef6\u7269\u7406\u7ed3\u6784 __3._\u9884\u7f6e\u8868\u7a7a\u95f4 __4._\u81ea\u5b9a\u4e49\u8868\u7a7a\u95f4\u53ca\u7ba1\u7406 __5._\u8868\u7a7a\u95f4\u76f8\u5173\u89c6\u56fe -_\u6587\u4ef6\u7ba1\u7406\uff081h\uff09 __1._\u53c2\u6570\u6587\u4ef6 __2._\u63a7\u5236\u6587\u4ef6 __3._Redo\u65e5\u5fd7\u6587\u4ef6 __4._\u5728\u7ebf\u65e5\u5fd7 __5._\u5f52\u6863\u65e5\u5fd7 -_\u6570\u636e\u5e93\u7528\u6237\u7ba1\u7406\uff084h\uff09 __1._\u6570\u636e\u5e93\u7528\u6237\u3001\u89d2\u8272\u3001\u6743\u9650 __2._\u6982\u5ff5\u4ecb\u7ecd __3._\u7cfb\u7edf\u9884\u7f6e\u7528\u6237\u4ecb\u7ecd __4._\u7cfb\u7edf\u9884\u7f6e\u89d2\u8272\u4ecb\u7ecd __5._\u81ea\u5b9a\u4e49\u7528\u6237 __6._\u81ea\u5b9a\u4e49\u89d2\u8272 __7._\u76f8\u5173\u89c6\u56fe __8._\u6743\u9650\u7ba1\u7406 __9._\u7cfb\u7edf\u6743\u9650 __10._\u5bf9\u8c61\u6743\u9650 __11._\u6388\u6743 __12._\u6536\u56de __13._Profile __14._Profile\u5b9a\u4e49\u548c\u4f7f\u7528\u573a\u666f __15._\u7cfb\u7edf\u9ed8\u8ba4Profile __16._\u81ea\u5b9a\u4e49Profile -__\u6570\u636e\u5e93\u5bf9\u8c61\u7ba1\u7406\uff084h\uff09 __1._\u652f\u6301\u7684\u6570\u636e\u5e93\u5bf9\u8c61 __2._\u5bf9\u8c61\u7ba1\u7406 __3._Table __4._Index __5._\u5206\u533a __6._View __7._Sequence __8._\u5b58\u50a8\u8fc7\u7a0b __9._\u81ea\u5b9a\u4e49\u51fd\u6570 __10._\u540c\u4e49\u8bcd __11._\u89e6\u53d1\u5668 __12._\u5927\u5bf9\u8c61 __13._\u6570\u636e\u5e93\u5bf9\u8c61\u76f8\u5173\u89c6\u56fe -_\u6570\u636e\u5e76\u53d1\u7ba1\u7406\uff081\u5929\uff09 __1._\u5e76\u53d1\u6982\u8ff0 __2._\u4ec0\u4e48\u662f\u5e76\u53d1 __3._\u4e8b\u52a1 __4._\u4e3a\u4ec0\u4e48\u8981\u505a\u5e76\u53d1\u7ba1\u7406 __5._\u5e38\u89c1\u5e76\u53d1\u573a\u666f __6._\u5e76\u53d1\u673a\u5236 __7._\u56de\u6eda\u6bb5 __8._MVCC\u673a\u5236 __9._\u9501/\u6b7b\u9501 __10._\u76f8\u5173\u89c6\u56fe \u7b2c\u4e94\u7ae0_\u6570\u636e\u5e93\u5b89\u5168\u7ba1\u7406\uff080.5\u5929\uff09 -_\u6570\u636e\u5e93\u5b89\u5168\u529f\u80fd\u603b\u89c8 -_\u8bbf\u95ee\u63a7\u5236 __1._\u670d\u52a1\u5668\u8fde\u63a5\u914d\u7f6e __2._\u5ba2\u6237\u7aef\u8fde\u63a5\u65b9\u6cd5 __3._\u8fde\u63a5\u5b89\u5168\u8ba4\u8bc1 __4._\u4f7f\u7528SSL\u8fde\u63a5 -_\u7528\u6237\u6743\u9650\u7ba1\u7406 -_\u5b89\u5168\u5ba1\u8ba1 __1._\u5ba1\u8ba1\u5f00\u5173 __2._\u67e5\u770b\u3001\u5220\u9664\u5ba1\u8ba1\u65e5\u5fd7 __3._\u63a8\u8350\u5ba1\u8ba1\u65e5\u5fd7\u914d\u7f6e \u7b2c\u516d\u7ae0_\u6570\u636e\u5e93\u8fd0\u7ef4\u4e0e\u8c03\u4f18\uff083.5\u5929\uff09 -_\u7cfb\u7edf\u76d1\u63a7\uff080.5\u5929\uff09 __1._\u7cfb\u7edf\u76d1\u63a7\u6307\u6807 __2._\u76d1\u63a7\u544a\u8b66 __3._\u76d1\u63a7\u6570\u636e\u5e93\u72b6\u6001 __4._\u76d1\u63a7\u65e5\u5fd7 __5._\u76d1\u63a7\u76f8\u5173\u89c6\u56fe -_\u5907\u4efd\u6062\u590d\u7ba1\u7406\uff081\u5929\uff09 __1._\u5907\u4efd\u6062\u590d\u6982\u8ff0 __2._\u5907\u4efd __3._\u5168\u91cf\u5907\u4efd __4._\u589e\u91cf\u5907\u4efd __5._\u6062\u590d __6._\u5168\u91cf\u6062\u590d __7._PITR __8._\u6570\u636e\u5bfc\u5165\u5bfc\u51fa __9._exp __10._imp __11._dump __12._load __13._\u56de\u6536\u7ad9 __14._\u95ea\u56de -_\u6027\u80fd\u8c03\u4f18\uff081.5\u5929\uff09 __1._\u6027\u80fd\u74f6\u9888\u5206\u7c7b\u6982\u89c8 __2._\u6027\u80fd\u8bca\u65ad\u65b9\u5f0f\u6982\u89c8 __3._\u7cfb\u7edf\u8c03\u4f18 __4._\u5185\u5b58\u7ba1\u7406\u65b9\u5f0f __5._\u7b49\u5f85\u4e8b\u4ef6 __6._WSR\u62a5\u544a\u8be6\u89e3 __7._SQL\u8c03\u4f18 __8._\u6267\u884c\u8ba1\u5212\u4ecb\u7ecd __9._\u6267\u884c\u8ba1\u5212\u67e5\u770b\u4e0e\u89e3\u8bfb __10._RBO/CBO\u673a\u5236 __11._\u7edf\u8ba1\u4fe1\u606f\u7ba1\u7406 __12._SQL\u6027\u80fd\u5b9a\u4f4d __13._SQL\u8c03\u4f18\u624b\u6bb5 __14._Hint\u4ecb\u7ecd __15._\u6027\u80fd\u76f8\u5173\u89c6\u56fe -_\u6545\u969c\u5904\u7406\uff080.5\u5929\uff09 __1._\u5e38\u89c1\u6545\u969c\u573a\u666f __2._\u6545\u969c\u5904\u7406\u6d41\u7a0b __3._\u6545\u969c\u5b9a\u4f4d/\u4fe1\u606f\u6536\u96c6 __4._\u5e94\u6025\u5904\u7406\u624b\u6bb5 __5._\u5e38\u89c1\u6545\u969c\u6848\u4f8b \u7b2c\u4e03\u7ae0_\u6570\u636e\u5e93\u9ad8\u53ef\u7528\u7279\u6027_\uff080.5\u5929\uff09 -__\u9ad8\u53ef\u7528\u529f\u80fd\u4ecb\u7ecd -_\u4e3b\u5907HA __1._\u4e3b\u5907HA\u642d\u5efa __2._HA\u4fee\u590d __3._\u4e3b\u5907\u5207\u6362 __4._\u4e3b\u5907\u72b6\u6001\u67e5\u8be2 __5._\u6570\u636e\u5bf9\u6bd4 __6._\u5e38\u89c1\u6545\u969c\u5904\u7406 -_\u903b\u8f91\u590d\u5236 __1._\u903b\u8f91\u590d\u5236\u539f\u7406 __2._\u5e94\u7528\u573a\u666f __3._\u903b\u8f91\u590d\u5236\u914d\u7f6e __4._\u5e38\u89c1\u6545\u969c\u5904\u7406 \u7b2c\u516b\u7ae0_\u6570\u636e\u5e93\u5206\u5e03\u5f0fSharding_\uff081.5\u5929\uff09 -__\u5206\u5e03\u5f0f\u96c6\u7fa4\u5b89\u88c5\u90e8\u7f72\uff082h\uff09 __1._\u5206\u5e03\u5f0f\u67b6\u6784\u7b80\u4ecb __2._\u5b89\u88c5\u90e8\u7f72 __3._\u5347\u7ea7 __4._\u5378\u8f7d -_\u65e5\u5e38\u8fd0\u7ef4\uff082h\uff09 __1._\u96c6\u7fa4\u7ba1\u7406 __2._\u542f\u505c\u96c6\u7fa4 __3._\u53c2\u6570\u4fee\u6539 __4._\u65e5\u5fd7\u7ba1\u7406 __5._\u65e5\u5fd7\u5206\u7c7b __6._\u65e5\u5fd7\u7ba1\u7406 __7._\u65e5\u5e38\u76d1\u63a7 __8._\u544a\u8b66 __9._\u72b6\u6001\u67e5\u8be2 __10._\u65e5\u5fd7 __11._\u5b89\u5168\u7ba1\u7406 __12._\u5206\u5e03\u5f0f\u5b89\u5168\u7ba1\u7406\u4e0e\u5355\u673a\u5dee\u5f02 -_\u96c6\u7fa4\u9ad8\u53ef\u7528\uff082h\uff09 __1._\u4e3b\u5907 __2._Paxos -_\u6545\u969c\u5904\u7406\uff081h\uff09 -_\u6027\u80fd\u8c03\u4f18 \u8bbe\u8ba1\u7406\u5ff5\uff081.5h\uff09 __1._\u5206\u5e03\u5f0f\u8bbe\u8ba1\u7406\u5ff5 __2._\u96c6\u7fa4\u4e0e\u5355\u673a\u8bed\u6cd5\u5dee\u5f02 __3._\u6027\u80fd\u8c03\u4f18 \u7b2c\u4e5d\u7ae0_\u7efc\u5408\u5b9e\u9a8c\uff081\u5929\uff09 -_\u5b89\u88c5\uff08\u5355\u673a\uff09 -_\u5907\u4efd\u6062\u590d __1._\u521b\u5efa\u6570\u636e\u5e93 __2._\u63d0\u4f9b\u5907\u4efd\u96c6\u4f9b\u5b66\u5458\u5c06\u6570\u636e\u6062\u590d\u81f3\u81ea\u5df1\u521b\u5efa\u7684\u5e93 -_\u67e5\u8be2SQL\u8c03\u4f18 -_\u5355\u673a\u6269\u6210\u4e3b\u5907","title":"_\u8bfe\u7a0b\u5185\u5bb9"},{"location":"Database/GaussDB/HCIP-GaussDB-OLTP_\u534e\u4e3a\u6570\u636e\u5e93\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u8ba4\u8bc1\u57f9\u8bad/#__2","text":"-_\u7406\u8bba\u6388\u8bfe\u3001\u4e0a\u673a\u5b9e\u4e60","title":"_\u57f9\u8bad\u65b9\u5f0f"},{"location":"Database/GaussDB/\u6a21\u62df\u8bd5\u5377/","text":"1.\uff08\u591a\u9009\uff09 GaussDB 100\u7684\u4e3b\u8981\u7279\u70b9\u6709\u54ea\u4e9b\uff1f A. \u6781\u81f4\u6027\u80fd B. \u5b89\u5168\u53ef\u9760 C. \u7b80\u5355\u6613\u7528 D. \u662fNoSQL\u6570\u636e\u5e93 2.\uff08\u5355\u9009\uff09 GaussDB 100\u652f\u6301\u4eceOracle\u8fdb\u884c\u6570\u636e\u8fc1\u79fb\u3002 A. TRUE B. FALSE 3.\uff08\u591a\u9009\uff09 \u4e0b\u9762\u54ea\u4e9b\u5c5e\u4e8eGaussDB 100\u6570\u636e\u5e93\u53ef\u914d\u7f6e\u7684\u78c1\u76d8\u7a7a\u95f4\uff1f A. binary CONTROLFILE B. LOGFILE C. system tablespace DATAFILE D. undo tablespace DATAFILE E. default tablespace DATAFILE 4.\uff08\u5355\u9009\uff09 DataSync\u6570\u636e\u8fc1\u79fb\u5de5\u5177\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u54ea\u4e2a\u6e90\u6570\u636e\u5e93\uff1f A. Sybase B. SQL Server C. Oracle D. \u4ee5\u4e0a\u5168\u90fd\u6b63\u786e 5.\uff08\u5355\u9009\uff09 \u5047\u8bbe\u6709\u56db\u4e2a\u7528\u6237gaussdba,omm,sys,cheng\uff0c\u9ed8\u8ba4\u54ea\u4e2a\u7528\u6237\u6709\u6743\u9650\u6267\u884cWSR\u64cd\u4f5c\uff1f A. gaussdba B. omm C. sys D. cheng 6.\uff08\u5355\u9009\uff09 \u67d0\u7528\u6237\u60f3\u4ece\u8868A\u9009\u62e9\u884c\u5bf9\u8868B\u7684\u6570\u636e\u8fdb\u884c\u66f4\u65b0\u6216\u63d2\u5165\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u54ea\u79cd\u8bed\u6cd5\uff1f A. PURGE B. WITH AS C. MERGE D. REPLACE 7.\uff08\u5355\u9009\uff09 \u4e1a\u52a1\u8fd0\u884c\u9636\u6bb5\uff0c\u6709\u5927\u91cf\u4f1a\u8bdd\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u6b64\u65f6\u5982\u679c\u9700\u8981\u5feb\u901f\u505c\u6b62\u6570\u636e\u5e93\uff0c\u5e94\u5f53\u4f7f\u7528shutdown\uff08normal\u6a21\u5f0f\uff09\u547d\u4ee4\u6765\u5173\u95ed\u6570\u636e\u5e93\u3002 A. TRUE B. FALSE 8.\uff08\u591a\u9009\uff09 \u4ee5root\u7528\u6237\u8eab\u4efd\u767b\u5f55GaussDB 100\u6240\u5728\u670d\u52a1\u5668\uff0c\u4fee\u6539\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u5bc6\u94a5\u7684\u6743\u9650\u3002\u9700\u8981\u5c06\u54ea\u4e9b\u8bc1\u4e66\u62f7\u8d1d\u5230/home/gaussdba/app\u76ee\u5f55\u4e0b\uff1f A. server.crt B. server.key C. cacert.key D. cacert.pem 9.\uff08\u591a\u9009\uff09 \u4ee5\u4e0b\u5c5e\u4e8e\u5b9e\u4f8b\u542f\u52a8\u6a21\u5f0f\u7684\u6709\uff1f A. nomount B. mount C. open D. load 10.\uff08\u5355\u9009\uff09 A\u7528\u6237\u9700\u8981\u5c06\u83b7\u5f97\u7684\u5bf9\u8c61\u6743\u9650\u518d\u6b21\u6388\u4e88\u5176\u4ed6\u7528\u6237\uff0c\u90a3\u4e48\u5f53\u6570\u636e\u5e93\u7ba1\u7406\u5458\u5728\u7ed9A\u7528\u6237\u8d4b\u6743\u65f6\u5e94\u6dfb\u52a0\u4e0b\u5217\u54ea\u4e2a\u5c5e\u6027\uff1f A. WITH GRANT OPTION B. WITH ADMIN OPTION C. WITH OBJECT OPTION D. WITH TRANSMIT OPTION 11.\uff08\u591a\u9009\uff09 \u67d0\u6570\u636e\u5e93\u60f3\u5bf9\u6743\u9650\u8fdb\u884c\u89c4\u5212\uff0c\u90a3\u4e48\u4ee5\u4e0b\u5efa\u8bae\u4e2d\uff0c\u6b63\u786e\u7684\u6709\uff1f A. \u7cfb\u7edf\u6743\u9650\u53ef\u4ee5\u4efb\u610f\u8d4b\u4e88\u7ed9\u7528\u6237\u3002 B. \u4ece\u5b89\u5168\u6027\u8003\u8651\uff0c\u7cfb\u7edf\u6743\u9650\u5e94\u8be5\u5206\u522b\u8d4b\u4e88\u53ef\u4fe1\u8d56\u7684\u7528\u6237\u3002 C. \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u7528\u6237\u5177\u6709\u76f8\u540c\u7684\u5bf9\u8c61\u6743\u9650\uff0c\u5219\u5efa\u8bae\u5c06\u8fd9\u51e0\u4e2a\u7528\u6237\u89c4\u5212\u4e3a\u4e00\u4e2a\u89d2\u8272\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6743\u9650\u8d4b\u4e88\u6b64\u89d2\u8272\u3002 D. \u7cfb\u7edf\u7ba1\u7406\u5458\u53ef\u4ee5\u5c06\u67d0\u4e9b\u6570\u636e\u5e93\u5bf9\u8c61\u7684\u6240\u6709\u6743\u9650\u8d4b\u4e88\u67d0\u4e2a\u7528\u6237\uff0c\u4e5f\u53ef\u4ee5\u5c06\u67d0\u4e9b\u6570\u636e\u5e93\u5bf9\u8c61\u7684\u90e8\u5206\u6743\u9650\u5206\u522b\u8d4b\u4e88\u4e0d\u540c\u7684\u7528\u6237\u3002 12.\uff08\u5355\u9009\uff09 \u5efa\u8bae\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u666e\u901a\u7528\u6237\u90fd\u8981\u5b9a\u671f\u4fee\u6539\u81ea\u5df1\u7684\u5e10\u6237\u5bc6\u7801\u7684\u5bc6\u7801\u5b89\u5168\u7b56\u7565\u4e3a\uff1f A. \u5bc6\u7801\u91cd\u7528 B. \u5bc6\u7801\u590d\u6742\u5ea6 C. \u5bc6\u7801\u6709\u6548\u671f\u9650 D. \u5bc6\u7801\u4fee\u6539 13.\uff08\u5355\u9009\uff09 \u7269\u7406\u6062\u590d\u7684\u6b63\u786e\u6d41\u7a0b\u5305\u542b\u4ee5\u4e0b\u56db\u6b65\uff0c\u6062\u590d\u4e00\u4e2a\u4e3b\u673a\u7684\u6b63\u786e\u6d41\u7a0b\u662f 1.RECOVER DATABASE \u2026\u2026 2.RESTORE DATABASE \u2026\u2026 3.ALTER DATABASE OPEN 4.ALTER DATABASE CONVERT TO PHYSICAL STANDBY MOUNT A. 1- 2- 3- 4 B. 2- 1- 4- 3 C. 2- 1- 3 D. 1- 2- 4- 3 14.\uff08\u5355\u9009\uff09 \u5f53SQL\u9700\u8981\u8bbf\u95ee\u7684\u6570\u636e\u5757\u6b63\u5728\u88ab\u53e6\u4e00\u4e2a\u4f1a\u8bdd\u4ece\u78c1\u76d8\u8bfb\u5230\u5185\u5b58\u4e2d\u5c06\u4f1a\u5bfc\u81f4\u4ee5\u4e0b\u54ea\u4e00\u4e2a\u7b49\u5f85\u4e8b\u4ef6\u7684\u53d1\u751f\uff1f A. db file sequential read B. log file sync C. read by other session D. buffer busy wait 15.\uff08\u591a\u9009\uff09 \u6570\u636e\u5e93\u62a5\u5982\u4e0b\u9519\u8bef\uff1a\"archive command failed with exit code 1\",\u5f15\u8d77\u8fd9\u4e2a\u9519\u8bef\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b\uff1f A. \u5f52\u6863\u65e5\u5fd7\u4e0d\u5b58\u5728 B. \u5f52\u6863\u65e5\u5fd7\u7684\u6743\u9650\u88ab\u6539\u53d8\uff0c\u4e0d\u6ee1\u8db3\u6743\u9650\u8981\u6c42 C. \u5f52\u6863\u65e5\u5fd7\u7684\u76ee\u5f55\u88ab\u9519\u8bef\u4fee\u6539 D. \u5f52\u6863\u65e5\u5fd7\u592a\u591a 16.\uff08\u5355\u9009\uff09 GaussDB 100\u4e3b\u5907HA\u4e2d\uff0c\u5982\u679c\u53d1\u751f\u5f02\u5e38\uff0c\u53ef\u4ee5\u901a\u8fc7\"ALTER DATABASE FAILOVER\"\u547d\u4ee4\u6765\u8ba9\u5907\u673a\u5347\u4e3b\u3002 A. TRUE B. FALSE 17.\uff08\u591a\u9009\uff09 \u903b\u8f91\u590d\u5236\u5de5\u5177\u76ee\u524d\u901a\u8fc7jdbc\u7684\u56de\u653esql\u7684\u65b9\u5f0f\u652f\u6301\u5411\u54ea\u4e9b\u6570\u636e\u5e93\u590d\u5236\u6570\u636e\uff1f A. GaussDB B. MySQL C. Oracle D. SQL Server 18.\uff08\u5355\u9009\uff09 \u544a\u8b66\u7b49\u7ea7\u5305\u62ec\u201c\u9ad8\u201d\u3001\u201c\u4e2d\u201d\u3001\u201c\u4f4e\u201d\u3001\u201c\u4fe1\u606f\u201d\u3002 A. TRUE B. FALSE 19.\uff08\u5355\u9009\uff09 Z-Paxos\u590d\u5236\u534f\u8bae\u5177\u6709\u4f18\u5148\u7ea7\u81ea\u4ef2\u88c1\u80fd\u529b\uff0c\u5176\u4e0d\u5305\u542b\u4ee5\u4e0b\u54ea\u79cd\u4ef2\u88c1\u80fd\u529b\uff1f A. \u5916\u90e8\u4ef2\u88c1 B. \u968f\u673a\u4ef2\u88c1 C. \u52a8\u6001\u4f18\u5148\u7ea7\u4ef2\u88c1 D. \u89d2\u8272\u4ef2\u88c1 20.\uff08\u5355\u9009\uff09 \u4e0b\u5217\u5173\u4e8e\u534f\u540c\u8c03\u5ea6\u8282\u70b9CN(Coordinator Node)\u7684\u63cf\u8ff0\uff0c\u54ea\u4e00\u9879\u662f\u4e0d\u6b63\u786e\u7684\uff1f A. \u8d1f\u8d23\u63a5\u6536\u6765\u81ea\u5e94\u7528\u7684\u8bbf\u95ee\u8bf7\u6c42\uff0c\u5e76\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u6267\u884c\u7ed3\u679c\u3002 B. \u751f\u6210\u6700\u4f18\u7684\u6267\u884c\u8ba1\u5212\uff0c\u5e76\u5c06\u7b97\u5b50\u4efb\u52a1\u8c03\u5ea6\u5230\u5404\u4e2aDN\u8282\u70b9\u4e0a\u6267\u884c\u3002 C. \u5f53\u5ba2\u6237\u7aef\u8fde\u5230CN\u521b\u5efa\u8868\u65f6\uff0c\u5efa\u8868\u8bed\u53e5\u4e2d\u5fc5\u987b\u5e26\u6709\u5206\u7247\u4fe1\u606f\u3002 D. \u8003\u8651\u9ad8\u53ef\u7528\uff0cCN\u7684\u4e3b\u548c\u5907\u9700\u8981\u5206\u6563\u90e8\u7f72\u5728\u4e0d\u540c\u7684\u7269\u7406\u8282\u70b9\u4e0a\u3002 \u7b54\u6848\uff1a / 1 ABC / 2 A / 3 ABCDE / 4 D / 5 C / 6 C / 7 B / 8 ABD / 9 ABC / 10 A / 11 BCD / 12 D / 13 C / 14 C / 15 ABC / 16 A / 17 AC / 18 A / 19 D / 20 D","title":"\u6a21\u62df\u8bd5\u5377"},{"location":"Database/Mysql/Mysql/","text":"This is Mysql database ! Show Your Code!!","title":"Mysql"},{"location":"Database/Mysql/Mysql_OCP/","text":"\u5b89\u88c5MySQL \u5b89\u88c5MySQL \u8bc6\u522b\u5df2\u5b89\u88c5\u7684\u6587\u4ef6\u548c\u76ee\u5f55 \u4e86\u89e3\u521d\u59cb\u914d\u7f6e \u542f\u52a8\u548c\u505c\u6b62MySQL \u914d\u7f6eMySQL \u4e86\u89e3\u670d\u52a1\u5668\u9009\u9879\uff0c\u53d8\u91cf\u548c\u547d\u4ee4\u884c \u5b9a\u4e49\u9009\u9879\u6587\u4ef6 \u4f7f\u7528\u7cfb\u7edf\u53d8\u91cf \u7528\u6237\u7ba1\u7406 \u8bc6\u522bMySQL\u7279\u6743\u7cfb\u7edf \u521b\u5efa\u548c\u4fee\u6539\u7528\u6237\u5e10\u6237 \u914d\u7f6e\u5bc6\u7801\u548c\u5e10\u6237\u8fc7\u671f \u4e86\u89e3\u8eab\u4efd\u9a8c\u8bc1\u63d2\u4ef6 \u6388\u4e88\u6743\u9650 \u91cd\u7f6e\u5fd8\u8bb0\u7684root\u5bc6\u7801 \u7ef4\u6301\u7a33\u5b9a\u7684\u7cfb\u7edf \u5b9a\u4e49\u7a33\u5b9a\u6027 \u4f7f\u7528\u80fd\u529b\u8ba1\u5212 \u7591\u96be\u6392\u89e3 \u786e\u5b9a\u670d\u52a1\u5668\u901f\u5ea6\u964d\u4f4e\u7684\u539f\u56e0 \u63cf\u8ff0InnoDB\u6062\u590d \u5907\u4efd\u7b56\u7565 \u4e86\u89e3\u5907\u4efd \u521b\u5efa\u5907\u4efd\u7b56\u7565 \u4f7f\u7528MySQL\u5907\u4efd\u5de5\u5177 \u5b9a\u4e49\u539f\u59cb\u5907\u4efd\u65b9\u6cd5 \u89e3\u91ca\u4f7f\u7528\u4e8c\u8fdb\u5236\u65e5\u5fd7\u7684\u6280\u672f MySQL\u67b6\u6784 \u4e86\u89e3MySQL\u5982\u4f55\u5904\u7406\u8bf7\u6c42 \u89e3\u91caMySQL\u5982\u4f55\u5b58\u50a8\u6570\u636e \u4f7f\u7528\u8868\u7a7a\u95f4 \u8bc6\u522b\u91cd\u505a\u548c\u64a4\u6d88\u65e5\u5fd7 \u5b9a\u4e49MySQL\u5982\u4f55\u4f7f\u7528\u5185\u5b58 \u76d1\u63a7MySQL \u4f7f\u7528\u65e5\u5fd7\u6587\u4ef6\u76d1\u63a7MySQL \u4f7f\u7528\u72b6\u6001\u53d8\u91cf\u76d1\u89c6MySQL \u4f7f\u7528\u6027\u80fd\u6a21\u5f0f\u76d1\u89c6MySQL MySQL\u5b89\u5168\u6027 \u8bc6\u522b\u5b89\u5168\u98ce\u9669 \u4e86\u89e3\u7f51\u7edc\u5b89\u5168 \u4f7f\u7528\u5bc6\u7801\u5b89\u5168\u6027 \u89e3\u91ca\u64cd\u4f5c\u7cfb\u7edf\u5b89\u5168\u6027 \u9632\u6b62SQL\u6ce8\u5165 \u4f18\u5316\u67e5\u8be2\u6027\u80fd \u8bc6\u522b\u6162\u67e5\u8be2 \u4e86\u89e3EXPLAIN\u8bed\u53e5 \u4f7f\u7528\u7d22\u5f15 \u4f7f\u7528\u7d22\u5f15\u7edf\u8ba1 \u914d\u7f6e\u590d\u5236\u62d3\u6251 \u590d\u5236\u51b2\u7a81 \u89e3\u91ca\u590d\u5236 \u914d\u7f6e\u590d\u5236 \u4f7f\u7528MySQL\u5b9e\u7528\u5de5\u5177 \u8bc6\u522b\u590d\u5236\u7ebf\u7a0b \u76d1\u63a7\u590d\u5236 \u590d\u5236\u7591\u96be\u89e3\u7b54","title":"Mysql_OCP"},{"location":"Database/Mysql/Mysql_OCP/#mysql","text":"\u5b89\u88c5MySQL \u8bc6\u522b\u5df2\u5b89\u88c5\u7684\u6587\u4ef6\u548c\u76ee\u5f55 \u4e86\u89e3\u521d\u59cb\u914d\u7f6e \u542f\u52a8\u548c\u505c\u6b62MySQL","title":"\u5b89\u88c5MySQL"},{"location":"Database/Mysql/Mysql_OCP/#mysql_1","text":"\u4e86\u89e3\u670d\u52a1\u5668\u9009\u9879\uff0c\u53d8\u91cf\u548c\u547d\u4ee4\u884c \u5b9a\u4e49\u9009\u9879\u6587\u4ef6 \u4f7f\u7528\u7cfb\u7edf\u53d8\u91cf","title":"\u914d\u7f6eMySQL"},{"location":"Database/Mysql/Mysql_OCP/#_1","text":"\u8bc6\u522bMySQL\u7279\u6743\u7cfb\u7edf \u521b\u5efa\u548c\u4fee\u6539\u7528\u6237\u5e10\u6237 \u914d\u7f6e\u5bc6\u7801\u548c\u5e10\u6237\u8fc7\u671f \u4e86\u89e3\u8eab\u4efd\u9a8c\u8bc1\u63d2\u4ef6 \u6388\u4e88\u6743\u9650 \u91cd\u7f6e\u5fd8\u8bb0\u7684root\u5bc6\u7801","title":"\u7528\u6237\u7ba1\u7406"},{"location":"Database/Mysql/Mysql_OCP/#_2","text":"\u5b9a\u4e49\u7a33\u5b9a\u6027 \u4f7f\u7528\u80fd\u529b\u8ba1\u5212 \u7591\u96be\u6392\u89e3 \u786e\u5b9a\u670d\u52a1\u5668\u901f\u5ea6\u964d\u4f4e\u7684\u539f\u56e0 \u63cf\u8ff0InnoDB\u6062\u590d","title":"\u7ef4\u6301\u7a33\u5b9a\u7684\u7cfb\u7edf"},{"location":"Database/Mysql/Mysql_OCP/#_3","text":"\u4e86\u89e3\u5907\u4efd \u521b\u5efa\u5907\u4efd\u7b56\u7565 \u4f7f\u7528MySQL\u5907\u4efd\u5de5\u5177 \u5b9a\u4e49\u539f\u59cb\u5907\u4efd\u65b9\u6cd5 \u89e3\u91ca\u4f7f\u7528\u4e8c\u8fdb\u5236\u65e5\u5fd7\u7684\u6280\u672f","title":"\u5907\u4efd\u7b56\u7565"},{"location":"Database/Mysql/Mysql_OCP/#mysql_2","text":"\u4e86\u89e3MySQL\u5982\u4f55\u5904\u7406\u8bf7\u6c42 \u89e3\u91caMySQL\u5982\u4f55\u5b58\u50a8\u6570\u636e \u4f7f\u7528\u8868\u7a7a\u95f4 \u8bc6\u522b\u91cd\u505a\u548c\u64a4\u6d88\u65e5\u5fd7 \u5b9a\u4e49MySQL\u5982\u4f55\u4f7f\u7528\u5185\u5b58","title":"MySQL\u67b6\u6784"},{"location":"Database/Mysql/Mysql_OCP/#mysql_3","text":"\u4f7f\u7528\u65e5\u5fd7\u6587\u4ef6\u76d1\u63a7MySQL \u4f7f\u7528\u72b6\u6001\u53d8\u91cf\u76d1\u89c6MySQL \u4f7f\u7528\u6027\u80fd\u6a21\u5f0f\u76d1\u89c6MySQL","title":"\u76d1\u63a7MySQL"},{"location":"Database/Mysql/Mysql_OCP/#mysql_4","text":"\u8bc6\u522b\u5b89\u5168\u98ce\u9669 \u4e86\u89e3\u7f51\u7edc\u5b89\u5168 \u4f7f\u7528\u5bc6\u7801\u5b89\u5168\u6027 \u89e3\u91ca\u64cd\u4f5c\u7cfb\u7edf\u5b89\u5168\u6027 \u9632\u6b62SQL\u6ce8\u5165","title":"MySQL\u5b89\u5168\u6027"},{"location":"Database/Mysql/Mysql_OCP/#_4","text":"\u8bc6\u522b\u6162\u67e5\u8be2 \u4e86\u89e3EXPLAIN\u8bed\u53e5 \u4f7f\u7528\u7d22\u5f15 \u4f7f\u7528\u7d22\u5f15\u7edf\u8ba1","title":"\u4f18\u5316\u67e5\u8be2\u6027\u80fd"},{"location":"Database/Mysql/Mysql_OCP/#_5","text":"\u590d\u5236\u51b2\u7a81 \u89e3\u91ca\u590d\u5236 \u914d\u7f6e\u590d\u5236 \u4f7f\u7528MySQL\u5b9e\u7528\u5de5\u5177 \u8bc6\u522b\u590d\u5236\u7ebf\u7a0b \u76d1\u63a7\u590d\u5236 \u590d\u5236\u7591\u96be\u89e3\u7b54","title":"\u914d\u7f6e\u590d\u5236\u62d3\u6251"},{"location":"Database/Mysql/basic/","text":"1234","title":"Home"},{"location":"Database/Mysql/basic/Select/","text":"[toc] Select Syntax 13.2.10 SELECT Syntax SELECT [ALL | DISTINCT | DISTINCTROW ] [HIGH_PRIORITY] [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT] SQL_NO_CACHE [SQL_CALC_FOUND_ROWS] select_expr [, select_expr ...] [FROM table_references [PARTITION partition_list] [WHERE where_condition] [GROUP BY {col_name | expr | position}, ... [WITH ROLLUP]] [HAVING where_condition] [WINDOW window_name AS (window_spec) [, window_name AS (window_spec)] ...] [ORDER BY {col_name | expr | position} [ASC | DESC], ... [WITH ROLLUP]] [LIMIT {[offset,] row_count | row_count OFFSET offset}] [INTO OUTFILE 'file_name' [CHARACTER SET charset_name] export_options | INTO DUMPFILE 'file_name' | INTO var_name [, var_name]] [FOR {UPDATE | SHARE} [OF tbl_name [, tbl_name] ...] [NOWAIT | SKIP LOCKED] | LOCK IN SHARE MODE]] select count(*),id ... group by id ; count(*) group by id ; \u6392\u5217\u7684\u5b57\u6bb5\u53ef\u6bd4group by \u7684\u5c11\uff0c\u4e0d\u53ef\u591a\u3002 having group by ... having count(*) {num}; order by \uff1a\u5217\u6392\u5e8f\u7684\u65b9\u5f0f order by a asc,b; order by a ,b asc; inner join ... on ... group by ... \u5206\u7ec4 limit \u524d\u51e0\u6761 \u7b2c\u51e0\u6761\u7684\u540e\u9762\u5f00\u59cb\u8bfb\u53d6\uff0cdao\u51e0\u51e0\u6761 \u5305\u62ec0\uff0c\u5f00\u59cb\uff0c\u4ece\u6570\u5b57\u540e\u9762\u5f00\u59cb\u8bfb\u3002 distinct \u53bb\u91cd\u3002 select ... into ... from ... \u5c06\u7ed3\u679c\u5199\u5230\u6587\u4ef6\u91cc\u9762\u53bb\u3002 SELECT colum_name ,... INTO OUTFILE '/local/path/file' FROM table_name,... where ...; \u524d\u63d0\uff1amy.cnf\uff1asecure_file_priv='/local/path/' SELECT sid,sname,sex INTO OUTFILE '/tmp/students.txt' FIELDS TERMINATED BY ',' -- \u5b57\u6bb5\u7684\u5206\u9694\u7b26 OPTIONALLY ENCLOSED BY ' ' -- LINES TERMINATED BY '\\n' -- \u884c\u7ed3\u675f\u7b26 FROM students; inner join ... on union [ all ] union all \u4e0d\u53bb\u91cd column_name \u5b57\u6bb5\u540d\u5b57\u53ef\u4ee5\u4e0d\u4e00\u6837\uff0c\u4f46\u8981\u6709\u610f\u4e49\u3002","title":"Select"},{"location":"Database/Mysql/basic/Select/#select","text":"","title":"Select"},{"location":"Database/Mysql/basic/Select/#syntax","text":"13.2.10 SELECT Syntax SELECT [ALL | DISTINCT | DISTINCTROW ] [HIGH_PRIORITY] [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT] SQL_NO_CACHE [SQL_CALC_FOUND_ROWS] select_expr [, select_expr ...] [FROM table_references [PARTITION partition_list] [WHERE where_condition] [GROUP BY {col_name | expr | position}, ... [WITH ROLLUP]] [HAVING where_condition] [WINDOW window_name AS (window_spec) [, window_name AS (window_spec)] ...] [ORDER BY {col_name | expr | position} [ASC | DESC], ... [WITH ROLLUP]] [LIMIT {[offset,] row_count | row_count OFFSET offset}] [INTO OUTFILE 'file_name' [CHARACTER SET charset_name] export_options | INTO DUMPFILE 'file_name' | INTO var_name [, var_name]] [FOR {UPDATE | SHARE} [OF tbl_name [, tbl_name] ...] [NOWAIT | SKIP LOCKED] | LOCK IN SHARE MODE]] select count(*),id ... group by id ; count(*) group by id ; \u6392\u5217\u7684\u5b57\u6bb5\u53ef\u6bd4group by \u7684\u5c11\uff0c\u4e0d\u53ef\u591a\u3002","title":"Syntax"},{"location":"Database/Mysql/basic/Select/#having","text":"group by ... having count(*) {num};","title":"having"},{"location":"Database/Mysql/basic/Select/#order-by","text":"order by a asc,b; order by a ,b asc; inner join ... on ...","title":"order by  \uff1a\u5217\u6392\u5e8f\u7684\u65b9\u5f0f"},{"location":"Database/Mysql/basic/Select/#group-by","text":"\u5206\u7ec4","title":"group by ..."},{"location":"Database/Mysql/basic/Select/#limit","text":"\u524d\u51e0\u6761 \u7b2c\u51e0\u6761\u7684\u540e\u9762\u5f00\u59cb\u8bfb\u53d6\uff0cdao\u51e0\u51e0\u6761 \u5305\u62ec0\uff0c\u5f00\u59cb\uff0c\u4ece\u6570\u5b57\u540e\u9762\u5f00\u59cb\u8bfb\u3002","title":"limit"},{"location":"Database/Mysql/basic/Select/#distinct","text":"\u53bb\u91cd\u3002","title":"distinct"},{"location":"Database/Mysql/basic/Select/#select-into-from","text":"\u5c06\u7ed3\u679c\u5199\u5230\u6587\u4ef6\u91cc\u9762\u53bb\u3002 SELECT colum_name ,... INTO OUTFILE '/local/path/file' FROM table_name,... where ...; \u524d\u63d0\uff1amy.cnf\uff1asecure_file_priv='/local/path/' SELECT sid,sname,sex INTO OUTFILE '/tmp/students.txt' FIELDS TERMINATED BY ',' -- \u5b57\u6bb5\u7684\u5206\u9694\u7b26 OPTIONALLY ENCLOSED BY ' ' -- LINES TERMINATED BY '\\n' -- \u884c\u7ed3\u675f\u7b26 FROM students;","title":"select ... into ... from ..."},{"location":"Database/Mysql/basic/Select/#inner-join-on","text":"","title":"inner join  ... on"},{"location":"Database/Mysql/basic/Select/#union-all","text":"union all \u4e0d\u53bb\u91cd column_name \u5b57\u6bb5\u540d\u5b57\u53ef\u4ee5\u4e0d\u4e00\u6837\uff0c\u4f46\u8981\u6709\u610f\u4e49\u3002","title":"union [ all ]"},{"location":"Database/Mysql/basic/InndbArchitecture/Untitled/","text":"[toc] Innodb 5.5\u4e4b\u540e\u7684\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\uff0c\u5c31\u662f\u9ed8\u8ba4\u7684\u8868\u4f1a\u4f7f\u7528\u6b64\u5b58\u50a8\u5f15\u64ce\uff08 \u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u8868\u65f6\u52a0\u5165 engine= \u6765\u66f4\u6539\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce \uff09 \u5c5e\u6027\uff08\u4f18\u70b9\uff09\uff1a (ACID\u9501\u591a\u5916\u81f4) \u652f\u6301ACID\u7279\u6027\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u652f\u6301\u4e8b\u52a1 \u6570\u636e\u884c\u9501 \u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236(MVCC)\uff0c\u9ad8\u5e76\u53d1 \u5916\u952e \u4e00\u81f4\u8bfb ACID\uff1a \u5173\u7cfb\u578b\u6570\u636e\u5e93\u666e\u904d\u652f\u6301\u7684 \u4e8b\u52a1\u6a21\u578b \uff0c\u7528\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002 A: (atomicity) \u539f\u5b50\u6027 \uff1a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u518d\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e0d\u53ef\u518d\u5206\u3002\u4e8b\u52a1\u4e2d\u542b\u6709N\u4e2a \u64cd\u4f5c \uff0c\u4f46\u4e0d\u53ef\u518d\u5206\u5272\u3002 C:(Consistency) \u4e00\u81f4\u6027 \uff1a \u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u540c\u8fdb\u540c\u9000 \u3002\u6570\u636e\u5fc5\u987b\u4e00\u81f4\uff0c\u4e8b\u52a1\u7684\u903b\u8f91\u7ed3\u679c\u4e0e\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u7ed3\u679c\u5fc5\u987b\u4e00\u81f4( \u6570\u636e\u76f8\u5e94\u4e00\u81f4 \uff09\u3002 I :(Isolation) \u72ec\u7acb\u6027 \uff1a\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u8bbf\u95ee\uff0c \u4e8b\u52a1\u4e4b\u95f4\u72ec\u7acb \u4e92\u76f8\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002\u5982\u4fee\u6539\u540c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u4f1a\u6709\u9501\u4e89\u7528\u95ee\u9898\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002 D:(durability) \u6301\u7eed\u6027 \uff1a\u4e8b\u52a1\u5b8c\u6210\u540e\uff0c\u6570\u636e\u4f1a\u4fdd\u5b58\u5230\u5e93\u91cc\uff0c \u4e0d\u4f1a\u4e22\u5931 \u3002 MVCC (multiversion concurrency control) Internally, InnoDB adds three fields to each row stored in the database. A 6-byte DB_TRX_ID field indicates the transaction identifier for the last transaction that inserted or updated the row. Also, a deletion is treated internally as an update where a special bit in the row is set to mark it as deleted. Each row also contains a 7-byte DB_ROLL_PTR field called the roll pointer. The roll pointer points to an undo log record written to the rollback segment. If the row was updated, the undo log record contains the information necessary to rebuild the content of the row before it was updated. A 6-byte DB_ROW_ID field contains a row ID that increases monotonically as new rows are inserted. If InnoDB generates a clustered index automatically, the index contains row ID values. Otherwise, the DB_ROW_ID column does not appear in any index.","title":"Untitled"},{"location":"Database/Mysql/basic/InndbArchitecture/Untitled/#innodb","text":"5.5\u4e4b\u540e\u7684\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\uff0c\u5c31\u662f\u9ed8\u8ba4\u7684\u8868\u4f1a\u4f7f\u7528\u6b64\u5b58\u50a8\u5f15\u64ce\uff08 \u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u8868\u65f6\u52a0\u5165 engine= \u6765\u66f4\u6539\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce \uff09 \u5c5e\u6027\uff08\u4f18\u70b9\uff09\uff1a (ACID\u9501\u591a\u5916\u81f4) \u652f\u6301ACID\u7279\u6027\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u652f\u6301\u4e8b\u52a1 \u6570\u636e\u884c\u9501 \u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236(MVCC)\uff0c\u9ad8\u5e76\u53d1 \u5916\u952e \u4e00\u81f4\u8bfb ACID\uff1a \u5173\u7cfb\u578b\u6570\u636e\u5e93\u666e\u904d\u652f\u6301\u7684 \u4e8b\u52a1\u6a21\u578b \uff0c\u7528\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002 A: (atomicity) \u539f\u5b50\u6027 \uff1a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u518d\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e0d\u53ef\u518d\u5206\u3002\u4e8b\u52a1\u4e2d\u542b\u6709N\u4e2a \u64cd\u4f5c \uff0c\u4f46\u4e0d\u53ef\u518d\u5206\u5272\u3002 C:(Consistency) \u4e00\u81f4\u6027 \uff1a \u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u540c\u8fdb\u540c\u9000 \u3002\u6570\u636e\u5fc5\u987b\u4e00\u81f4\uff0c\u4e8b\u52a1\u7684\u903b\u8f91\u7ed3\u679c\u4e0e\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u7ed3\u679c\u5fc5\u987b\u4e00\u81f4( \u6570\u636e\u76f8\u5e94\u4e00\u81f4 \uff09\u3002 I :(Isolation) \u72ec\u7acb\u6027 \uff1a\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u8bbf\u95ee\uff0c \u4e8b\u52a1\u4e4b\u95f4\u72ec\u7acb \u4e92\u76f8\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002\u5982\u4fee\u6539\u540c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u4f1a\u6709\u9501\u4e89\u7528\u95ee\u9898\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002 D:(durability) \u6301\u7eed\u6027 \uff1a\u4e8b\u52a1\u5b8c\u6210\u540e\uff0c\u6570\u636e\u4f1a\u4fdd\u5b58\u5230\u5e93\u91cc\uff0c \u4e0d\u4f1a\u4e22\u5931 \u3002 MVCC (multiversion concurrency control) Internally, InnoDB adds three fields to each row stored in the database. A 6-byte DB_TRX_ID field indicates the transaction identifier for the last transaction that inserted or updated the row. Also, a deletion is treated internally as an update where a special bit in the row is set to mark it as deleted. Each row also contains a 7-byte DB_ROLL_PTR field called the roll pointer. The roll pointer points to an undo log record written to the rollback segment. If the row was updated, the undo log record contains the information necessary to rebuild the content of the row before it was updated. A 6-byte DB_ROW_ID field contains a row ID that increases monotonically as new rows are inserted. If InnoDB generates a clustered index automatically, the index contains row ID values. Otherwise, the DB_ROW_ID column does not appear in any index.","title":"Innodb"},{"location":"Database/Mysql/basic/SQL/Alter Database/","text":"","title":"Alter Database"},{"location":"Database/Mysql/basic/SQL/Alter View/","text":"","title":"Alter View"},{"location":"Database/Mysql/basic/SQL/Alter_Database/","text":"","title":"Alter_Database"},{"location":"Database/Mysql/basic/SQL/Alter_View/","text":"","title":"Alter_View"},{"location":"Database/Mysql/basic/SQL/Create Table 2/","text":"[toc] CREATE TABLE 2 LIKE mysql create table stu (id int(11),name varchar(20),gender int(11)); Query OK, 0 rows affected (0.03 sec) mysql desc stu; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | YES | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.00 sec) mysql create table stu_c like stu; Query OK, 0 rows affected (0.05 sec) mysql create database fortest; Query OK, 1 row affected (0.08 sec) mysql create table fortest.stu_c like stu; Query OK, 0 rows affected (0.05 sec) mysql desc stu_c; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | YES | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+------ ---+-------+ 3 rows in set (0.01 sec) mysql desc fortest.stu_c; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | YES | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.00 sec) Not null / Null Query OK, 0 rows affected (0.20 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql desc stu - ; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | NO | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.01 sec) mysql insert into stu (name,gender) values('b',2); ERROR 1364 (HY000): Field 'id' doesn't have a default value \u6307\u5b9a\u975e\u7a7a\u65f6\uff0c\u4f1a\u62a5\u9519\u67d0\u5217\u4e0d\u5141\u8bb8\u4e3a\u7a7a\u3002 \u5982\u679c\u5b9a\u4e49\u5b57\u6bb5\u4e3a\u975e\u7a7a\u9047\u5230\u5df2\u5b58\u5728\u975e\u7a7a\u503c\u65f6\uff0c\u5c31\u4f1a\u62a5\u9519\u3002 Modify table \u4fee\u6539\u5217\u7684\u5c5e\u6027\uff0c\u975e\u7a7a\uff0c\u9ed8\u8ba4\u503c\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u6570\u636e\u7684\u957f\u5ea6and so on. \u8bed\u6cd5\uff1a ALTER TABLE tbl_name modify tbl_column_name DATA_TYPE(DATA_LENGTH) ... mysql alter table stu modify id int(11) not null default 11; Query OK, 0 rows affected (0.10 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql desc stu; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | NO | | 11 | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.00 sec) mysql alter table stu modify name varchar(20) not null default 'chenzhiqing'; Query OK, 0 rows affected (0.19 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql desc stu; +--------+-------------+------+-----+-------------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+-------------+-------+ | id | int(11) | NO | | 11 | | | name | varchar(20) | NO | | chenzhiqing | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+-------------+-------+ 3 rows in set (0.00 sec)","title":"Create Table 2"},{"location":"Database/Mysql/basic/SQL/Create Table 2/#create-table-2","text":"","title":"CREATE TABLE 2"},{"location":"Database/Mysql/basic/SQL/Create Table 2/#like","text":"mysql create table stu (id int(11),name varchar(20),gender int(11)); Query OK, 0 rows affected (0.03 sec) mysql desc stu; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | YES | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.00 sec) mysql create table stu_c like stu; Query OK, 0 rows affected (0.05 sec) mysql create database fortest; Query OK, 1 row affected (0.08 sec) mysql create table fortest.stu_c like stu; Query OK, 0 rows affected (0.05 sec) mysql desc stu_c; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | YES | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+------ ---+-------+ 3 rows in set (0.01 sec) mysql desc fortest.stu_c; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | YES | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.00 sec)","title":"LIKE"},{"location":"Database/Mysql/basic/SQL/Create Table 2/#not-null-null","text":"Query OK, 0 rows affected (0.20 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql desc stu - ; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | NO | | NULL | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.01 sec) mysql insert into stu (name,gender) values('b',2); ERROR 1364 (HY000): Field 'id' doesn't have a default value \u6307\u5b9a\u975e\u7a7a\u65f6\uff0c\u4f1a\u62a5\u9519\u67d0\u5217\u4e0d\u5141\u8bb8\u4e3a\u7a7a\u3002 \u5982\u679c\u5b9a\u4e49\u5b57\u6bb5\u4e3a\u975e\u7a7a\u9047\u5230\u5df2\u5b58\u5728\u975e\u7a7a\u503c\u65f6\uff0c\u5c31\u4f1a\u62a5\u9519\u3002","title":"Not null / Null"},{"location":"Database/Mysql/basic/SQL/Create Table 2/#modify-table","text":"\u4fee\u6539\u5217\u7684\u5c5e\u6027\uff0c\u975e\u7a7a\uff0c\u9ed8\u8ba4\u503c\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u6570\u636e\u7684\u957f\u5ea6and so on. \u8bed\u6cd5\uff1a ALTER TABLE tbl_name modify tbl_column_name DATA_TYPE(DATA_LENGTH) ... mysql alter table stu modify id int(11) not null default 11; Query OK, 0 rows affected (0.10 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql desc stu; +--------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+---------+-------+ | id | int(11) | NO | | 11 | | | name | varchar(20) | YES | | NULL | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+---------+-------+ 3 rows in set (0.00 sec) mysql alter table stu modify name varchar(20) not null default 'chenzhiqing'; Query OK, 0 rows affected (0.19 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql desc stu; +--------+-------------+------+-----+-------------+-------+ | Field | Type | Null | Key | Default | Extra | +--------+-------------+------+-----+-------------+-------+ | id | int(11) | NO | | 11 | | | name | varchar(20) | NO | | chenzhiqing | | | gender | int(11) | YES | | NULL | | +--------+-------------+------+-----+-------------+-------+ 3 rows in set (0.00 sec)","title":"Modify table"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/","text":"CreateDatabase [toc] CreateDatabase\u8bed\u53e5\u4f5c\u7528 \u5728MySQL\u5b9e\u4f8b\u4e0a\u521b\u5efa\u6307\u5b9a\u540d\u79f0\u7684\u6570\u636e\u5e93 CreateSchema\u7684\u8bed\u4e49\u4e00\u6837\u3002 CREATE {DASTABASE |SCHEMA} [IF NOT EXISTS] db_name [create_specification] ... create_specification: [DEFAULT] CHARACTER SET [=] charset_name | [DEFAULT] COLLATE [=] collation_name \u5f53\u88ab\u521b\u5efa\u7684\u6570\u636e\u5e93\u5b58\u5728\u4e14\u6ca1\u5199\u660e if not exists \u5b50\u53e5\u65f6\uff0c\u6267\u884c\u4f1a\u62a5\u9519\u3002\u7c7b\u4f3c\u60c5\u51b5\u5728 create table \u8bed\u53e5\u4e2d\u4e5f\u540c\u6837\u4f53\u73b0\u3002 create_specification \u6307\u660e\u6570\u636e\u7684\u5c5e\u6027\uff0c\u5e76\u5b58\u50a8\u5728\u6587\u4ef6db.opt\u4e2d\u3002 Character set n\u5c5e\u6027\u6307\u660e\u6b64\u5e93\u7684\u9ed8\u8ba4\u5b57\u7b26\u96c6 Collate \u6307\u660e\u9ed8\u8ba4\u7684\u6392\u5e8f\u89c4\u5219 \u521b\u5efa\u8bed\u53e5\u6267\u884c\u5b8c\u540e\uff0c\u4f1a\u5728datadir\u76ee\u5f55\u4e0b\u751f\u6210\u4ee5\u6570\u636e\u540d\u4e3a\u540d\u7684\u76ee\u5f55\uff0c\u76ee\u5f55\u4f1a\u5305\u542b\u540e\u7eed\u6240\u521b\u5efa\u7684\u8868\u7b49\u3002 \u4f46\u5728\u7248\u672c Server version: 8.0.13 MySQL Community Server \u4e0d\u6210\u529f\uff0c\u539f\u56e0\u5f85\u67e5#todolist mysql show create database test1; ERROR 1049 (42000): Unknown database 'test1' mysql show databases; +--------------------+ | Database | +--------------------+ | forlearn | | information_schema | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.00 sec) [root@mysql data]# ls -ld */ drwxr-x--- 2 mysql mysql 6 Feb 21 17:47 forlearn/ drwxr-x--- 2 mysql mysql 4096 Feb 21 21:31 #innodb_temp/ drwxr-x--- 2 mysql mysql 137 Feb 15 14:37 mysql/ drwxr-x--- 2 mysql mysql 4096 Feb 15 14:37 performance_schema/ drwxr-x--- 2 mysql mysql 27 Feb 15 14:37 sys/ drwxr-x--- 2 mysql mysql 6 Feb 21 21:31 test1/ \u5b9e\u4f8b \u521b\u5efa\u5e93 create database test3; \u5efa\u540c\u540d\u5e93 create database test3; \u5f3a\u5236\u521b\u5efa\u5e93 create database if not exists test3; mysql create database test3; Query OK, 1 row affected (0.08 sec) mysql create database test3; ERROR 1007 (HY000): Can't create database 'test3'; 'database exists mysql create database if not exists test3; Query OK, 1 row affected, 1 warning (0.00 sec)","title":"CreateDatabase"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#createdatabase","text":"[toc]","title":"CreateDatabase"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#createdatabase_1","text":"","title":"CreateDatabase\u8bed\u53e5\u4f5c\u7528"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#mysql","text":"","title":"\u5728MySQL\u5b9e\u4f8b\u4e0a\u521b\u5efa\u6307\u5b9a\u540d\u79f0\u7684\u6570\u636e\u5e93"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#createschema","text":"CREATE {DASTABASE |SCHEMA} [IF NOT EXISTS] db_name [create_specification] ... create_specification: [DEFAULT] CHARACTER SET [=] charset_name | [DEFAULT] COLLATE [=] collation_name \u5f53\u88ab\u521b\u5efa\u7684\u6570\u636e\u5e93\u5b58\u5728\u4e14\u6ca1\u5199\u660e if not exists \u5b50\u53e5\u65f6\uff0c\u6267\u884c\u4f1a\u62a5\u9519\u3002\u7c7b\u4f3c\u60c5\u51b5\u5728 create table \u8bed\u53e5\u4e2d\u4e5f\u540c\u6837\u4f53\u73b0\u3002 create_specification \u6307\u660e\u6570\u636e\u7684\u5c5e\u6027\uff0c\u5e76\u5b58\u50a8\u5728\u6587\u4ef6db.opt\u4e2d\u3002 Character set n\u5c5e\u6027\u6307\u660e\u6b64\u5e93\u7684\u9ed8\u8ba4\u5b57\u7b26\u96c6 Collate \u6307\u660e\u9ed8\u8ba4\u7684\u6392\u5e8f\u89c4\u5219 \u521b\u5efa\u8bed\u53e5\u6267\u884c\u5b8c\u540e\uff0c\u4f1a\u5728datadir\u76ee\u5f55\u4e0b\u751f\u6210\u4ee5\u6570\u636e\u540d\u4e3a\u540d\u7684\u76ee\u5f55\uff0c\u76ee\u5f55\u4f1a\u5305\u542b\u540e\u7eed\u6240\u521b\u5efa\u7684\u8868\u7b49\u3002 \u4f46\u5728\u7248\u672c Server version: 8.0.13 MySQL Community Server \u4e0d\u6210\u529f\uff0c\u539f\u56e0\u5f85\u67e5#todolist mysql show create database test1; ERROR 1049 (42000): Unknown database 'test1' mysql show databases; +--------------------+ | Database | +--------------------+ | forlearn | | information_schema | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.00 sec) [root@mysql data]# ls -ld */ drwxr-x--- 2 mysql mysql 6 Feb 21 17:47 forlearn/ drwxr-x--- 2 mysql mysql 4096 Feb 21 21:31 #innodb_temp/ drwxr-x--- 2 mysql mysql 137 Feb 15 14:37 mysql/ drwxr-x--- 2 mysql mysql 4096 Feb 15 14:37 performance_schema/ drwxr-x--- 2 mysql mysql 27 Feb 15 14:37 sys/ drwxr-x--- 2 mysql mysql 6 Feb 21 21:31 test1/","title":"CreateSchema\u7684\u8bed\u4e49\u4e00\u6837\u3002"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#_1","text":"","title":"\u5b9e\u4f8b"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#_2","text":"create database test3;","title":"\u521b\u5efa\u5e93"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#_3","text":"create database test3;","title":"\u5efa\u540c\u540d\u5e93"},{"location":"Database/Mysql/basic/SQL/CreateDatabase/#_4","text":"create database if not exists test3; mysql create database test3; Query OK, 1 row affected (0.08 sec) mysql create database test3; ERROR 1007 (HY000): Can't create database 'test3'; 'database exists mysql create database if not exists test3; Query OK, 1 row affected, 1 warning (0.00 sec)","title":"\u5f3a\u5236\u521b\u5efa\u5e93"},{"location":"Database/Mysql/basic/SQL/CreateIndex/","text":"111 show parameter google === \u2013","title":"CreateIndex"},{"location":"Database/Mysql/basic/SQL/CreateIndex/#111","text":"show parameter","title":"111"},{"location":"Database/Mysql/basic/SQL/CreateIndex/#google","text":"","title":"google"},{"location":"Database/Mysql/basic/SQL/CreateIndex/#_1","text":"\u2013","title":"==="},{"location":"Database/Mysql/basic/SQL/CreateTable/","text":"[toc] \u542b\u4e49\u662f\u521b\u5efa\u4e00\u4e2a\u8868 \u5b98\u6863 CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name (create_definition,...) [table_options] [partition_options] CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name [(create_definition,...)] [table_options] [partition_options] [IGNORE | REPLACE] [AS] query_expression CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name { LIKE old_tbl_name | (LIKE old_tbl_name) } create_definition: col_name column_definition | [CONSTRAINT [symbol]] PRIMARY KEY [index_type] (key_part,...) [index_option] ... | {INDEX|KEY} [index_name] [index_type] (key_part,...) [index_option] ... | [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (key_part,...) [index_option] ... | {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name] (key_part,...) [index_option] ... | [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (col_name,...) reference_definition | CHECK (expr) column_definition: data_type [NOT NULL | NULL] [DEFAULT {literal | (expr)} ] [AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY] [COMMENT 'string'] [COLUMN_FORMAT {FIXED|DYNAMIC|DEFAULT}] [STORAGE {DISK|MEMORY|DEFAULT}] [reference_definition] | data_type [GENERATED ALWAYS] AS (expression) [VIRTUAL | STORED] [NOT NULL | NULL] [UNIQUE [KEY]] [[PRIMARY] KEY] [COMMENT 'string'] data_type: (see Chapter 11, Data Types) key_part: {col_name [(length)] | (expr)} [ASC | DESC] index_type: USING {BTREE | HASH} index_option: KEY_BLOCK_SIZE [=] value | index_type | WITH PARSER parser_name | COMMENT 'string' | {VISIBLE | INVISIBLE} reference_definition: REFERENCES tbl_name (key_part,...) [MATCH FULL | MATCH PARTIAL | MATCH SIMPLE] [ON DELETE reference_option] [ON UPDATE reference_option] reference_option: RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT table_options: table_option [[,] table_option] ... table_option: AUTO_INCREMENT [=] value | AVG_ROW_LENGTH [=] value | [DEFAULT] CHARACTER SET [=] charset_name | CHECKSUM [=] {0 | 1} | [DEFAULT] COLLATE [=] collation_name | COMMENT [=] 'string' | COMPRESSION [=] {'ZLIB'|'LZ4'|'NONE'} | CONNECTION [=] 'connect_string' | {DATA|INDEX} DIRECTORY [=] 'absolute path to directory' | DELAY_KEY_WRITE [=] {0 | 1} | ENCRYPTION [=] {'Y' | 'N'} | ENGINE [=] engine_name | INSERT_METHOD [=] { NO | FIRST | LAST } | KEY_BLOCK_SIZE [=] value | MAX_ROWS [=] value | MIN_ROWS [=] value | PACK_KEYS [=] {0 | 1 | DEFAULT} | PASSWORD [=] 'string' | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT} | STATS_AUTO_RECALC [=] {DEFAULT|0|1} | STATS_PERSISTENT [=] {DEFAULT|0|1} | STATS_SAMPLE_PAGES [=] value | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY|DEFAULT}] | UNION [=] (tbl_name[,tbl_name]...) partition_options: PARTITION BY { [LINEAR] HASH(expr) | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) | RANGE{(expr) | COLUMNS(column_list)} | LIST{(expr) | COLUMNS(column_list)} } [PARTITIONS num] [SUBPARTITION BY { [LINEAR] HASH(expr) | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) } [SUBPARTITIONS num] ] [(partition_definition [, partition_definition] ...)] partition_definition: PARTITION partition_name [VALUES {LESS THAN {(expr | value_list) | MAXVALUE} | IN (value_list)}] [[STORAGE] ENGINE [=] engine_name] [COMMENT [=] 'string' ] [DATA DIRECTORY [=] 'data_dir'] [INDEX DIRECTORY [=] 'index_dir'] [MAX_ROWS [=] max_number_of_rows] [MIN_ROWS [=] min_number_of_rows] [TABLESPACE [=] tablespace_name] [(subpartition_definition [, subpartition_definition] ...)] subpartition_definition: SUBPARTITION logical_name [[STORAGE] ENGINE [=] engine_name] [COMMENT [=] 'string' ] [DATA DIRECTORY [=] 'data_dir'] [INDEX DIRECTORY [=] 'index_dir'] [MAX_ROWS [=] max_number_of_rows] [MIN_ROWS [=] min_number_of_rows] [TABLESPACE [=] tablespace_name] query_expression: SELECT ... (Some valid select or union statement) \u8bf4\u660e\u57fa\u7840 \u524d\u63d0\u6761\u4ef6\uff1a\u8d26\u53f7\u9700\u8981\u6709the create privilege \u9ed8\u8ba4\u7684\u53c2\u6570\uff1a\u4f7f\u7528 InnoDB \u5b58\u50a8\u5f15\u64ce\uff0c\u521b\u5efa\u7684\u8868\u4f1a\u5f52\u5c5e\u5f53\u524d\u7684\u6240\u5728\u7684\u6570\u636e\u5e93\u6216\u8005\u6307\u5b9a\u7684\u6570\u636e\u5e93\u3002 \u5982\u679c\u5b58\u5728\u540c\u540d\u8868\uff0c\u6216\u8005\u6ca1\u6709\u5728\u9ed8\u8ba4\uff08\u5f53\u524d\uff09\u5e93\uff0c\u6216\u6ca1\u6709\u5e93\u4e0d\u5b58\u5728\u5f53\u51fa\u73b0\u62a5\u9519\u3002 Table_name db_name.table_name \u88ab\u6307\u5b9a\u7684\u8bdd\uff0c\u4f1a\u5ffd\u7565\u5f53\u524d\u6240\u5728\u7684\u5e93(\u9ed8\u8ba4\u5e93)\uff0c\u6240\u521b\u5efa\u7684\u8868\u4f1a\u5f52\u5c5e\u5230\u6307\u5b9a\u7684 db_name \u5e93.\u524d\u63d0\u6307\u5b9a\u7684\u5e93\u662f\u5b58\u5728\u7684. \u4f7f\u7528\"`\"\u6765\u5f15\u7528\u8868\u540d,\u9700\u8981\u5bf9\u8868\u540d,\u5e93\u540d\u6216\u4e24\u8005\u4e00\u8d77\u5f15\u7528. IF NOT EXISTS \u5982\u679c\u5b58\u5728\u8868,\u5219\u62a5\u9519.\u4f46\u4e0d\u6821\u9a8c\u8868\u7684\u7ed3\u6784\u662f\u5426\u76f8\u540c. Temporary Tables Temporary Table\u53ef\u5728create \u4e00\u4e2a\u8868\u7684\u65f6\u5019\u4f7f\u7528. \u5b83\u53ea\u5728\u5f53\u524d\u4f1a\u8bdd\u53ef\u89c1,\u751f\u6548,\u968f\u7740\u4f1a\u8bdd\u7ed3\u675f\u800c\u6d88\u5931. Cloning or Copying a Table LIKE \u4f7f\u7528 CREATE TABLE ... LIKE ... \u521b\u5efa\u4e00\u4e2a\u4e0e\u6e90\u8868\u4e00\u6837\u7ed3\u6784\u7684\u7a7a\u8868. \u6240\u6709\u7684\u5217\u5c5e\u6027,\u7d22\u5f15\u5b9a\u4e49\u90fd\u4e0e\u6e90\u8868\u4e00\u6837. \u8bed\u6cd5\uff1a CREATE TABLE new_tbl LIKE orig_tbl; [AS] quary_expression \u4ee5\u8868\u5efa\u8868\uff0c\u540c\u65f6\u589e\u52a0 SELECT \u8bed\u53e5\u5230 CREATE TABLE \u7ed3\u5c3e. Syntax: `CREATE TABLE new_tbl AS SELECT * FROM orgi_tbl; IGNORE|REPLACE \u6307\u660e\u5982\u4f55\u5904\u7406 select \u8bed\u53e5\u4e2d\u7684\u91cd\u590d\u552f\u4e00\u6027\u952e\u503c\u3002 IGNORE\uff1a\u5ffd\u7565\u8be5\u952e\u503c REPLACE:\u66ff\u4ee3\u73b0\u6709\u952e\u503c \u4e24\u8005\u90fd\u4e0d\u6307\u5b9a\uff0c\u5c06\u4f1a\u62a5\u9519\u51fa\u6765\u3002 Data_type \u5b9a\u4e49\u5217\u7684\u6570\u636e\u7c7b\u578b Null / Not null \u5b9a\u4e49\u5b57\u6bb5\u662f\u5426\u9700\u8981\u4e00\u5b9a\u8981\u6709\u503c\uff0c\u5426\u5219\u62a5\u9519\u3002 Default \u5b9a\u4e49\u5b57\u4f53\u7684\u9ed8\u8ba4\u503c Auto_increment \u5b9a\u4e49\u5b57\u6bb5\u4e3a\u6574\u6570\u6216\u8005\u6d6e\u70b9\u6570\u7c7b\u578b\u7684 value+1 \u9012\u589e\u503c\uff0cvalue\u4e3a\u5f53\u524d\u5b57\u6bb5\u7684\u6700\u5927\u503c \u9ed8\u8ba4\u4ece\u6570\u503c1\u5f00\u59cb\u9012\u589e\uff0c \u5b9a\u4e49\u7684\u5b57\u6bb5\u5fc5\u987b\u6709KEY\u5c5e\u6027\u503c\uff0c\u4f46\u552f\u4e00\u4e00\u4e2a\u5b57\u6bb5\u6709\u81ea\u589e\u5c5e\u6027 \u4e0d\u4e0eDefault\u5c5e\u6027\u4e00\u8d77\u7528 \u5f53\u63d2\u5165\u503c\u4e3a \u8d1f\u6570 \u65f6\uff0c\u63d2\u5165\u5230\u8868\u7684\u771f\u4e3a\u5f88\u5927\u6b63\u6570\u3002 Column_format \u5728NDB\u96c6\u7fa4\u4e2d\uff0cNDB\u7684\u8868\u5e38\u7528 column_format \u6765\u6307\u5b9a\u8868\u4e2d\u4e2a\u522b\u5217\u7684\u6570\u636e\u5b58\u50a8\u683c\u5f0f\u3002 \u5141\u8bb8\u7684\u503c\uff1aFIXED\uff0cDYNAMIC\uff0cDEFAULT FIXED \u56fa\u5b9a\u5bbd\u5ea6\u7684\u5b58\u50a8 DYNAMIC \u53ef\u53d8\u5bbd\u5ea6\u7684\u5b58\u50a8 DEFAULT \u7531\u5217\u7684\u6570\u636e\u7c7b\u578b\u51b3\u5b9aFIXED\u8fd8\u662fDYNAMIC\uff0c\u53ef\u80fd\u4f1a\u88abROW_FORMAT\u8986\u76d6\uff09 STORAGE \u663e\u793a\u521b\u5efaTable\u7684\u8bed\u53e5\uff1a show create table tablename;","title":"CreateTable"},{"location":"Database/Mysql/basic/SQL/CreateTable/#_1","text":"","title":"\u542b\u4e49\u662f\u521b\u5efa\u4e00\u4e2a\u8868"},{"location":"Database/Mysql/basic/SQL/CreateTable/#_2","text":"CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name (create_definition,...) [table_options] [partition_options] CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name [(create_definition,...)] [table_options] [partition_options] [IGNORE | REPLACE] [AS] query_expression CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name { LIKE old_tbl_name | (LIKE old_tbl_name) } create_definition: col_name column_definition | [CONSTRAINT [symbol]] PRIMARY KEY [index_type] (key_part,...) [index_option] ... | {INDEX|KEY} [index_name] [index_type] (key_part,...) [index_option] ... | [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (key_part,...) [index_option] ... | {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name] (key_part,...) [index_option] ... | [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (col_name,...) reference_definition | CHECK (expr) column_definition: data_type [NOT NULL | NULL] [DEFAULT {literal | (expr)} ] [AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY] [COMMENT 'string'] [COLUMN_FORMAT {FIXED|DYNAMIC|DEFAULT}] [STORAGE {DISK|MEMORY|DEFAULT}] [reference_definition] | data_type [GENERATED ALWAYS] AS (expression) [VIRTUAL | STORED] [NOT NULL | NULL] [UNIQUE [KEY]] [[PRIMARY] KEY] [COMMENT 'string'] data_type: (see Chapter 11, Data Types) key_part: {col_name [(length)] | (expr)} [ASC | DESC] index_type: USING {BTREE | HASH} index_option: KEY_BLOCK_SIZE [=] value | index_type | WITH PARSER parser_name | COMMENT 'string' | {VISIBLE | INVISIBLE} reference_definition: REFERENCES tbl_name (key_part,...) [MATCH FULL | MATCH PARTIAL | MATCH SIMPLE] [ON DELETE reference_option] [ON UPDATE reference_option] reference_option: RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT table_options: table_option [[,] table_option] ... table_option: AUTO_INCREMENT [=] value | AVG_ROW_LENGTH [=] value | [DEFAULT] CHARACTER SET [=] charset_name | CHECKSUM [=] {0 | 1} | [DEFAULT] COLLATE [=] collation_name | COMMENT [=] 'string' | COMPRESSION [=] {'ZLIB'|'LZ4'|'NONE'} | CONNECTION [=] 'connect_string' | {DATA|INDEX} DIRECTORY [=] 'absolute path to directory' | DELAY_KEY_WRITE [=] {0 | 1} | ENCRYPTION [=] {'Y' | 'N'} | ENGINE [=] engine_name | INSERT_METHOD [=] { NO | FIRST | LAST } | KEY_BLOCK_SIZE [=] value | MAX_ROWS [=] value | MIN_ROWS [=] value | PACK_KEYS [=] {0 | 1 | DEFAULT} | PASSWORD [=] 'string' | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT} | STATS_AUTO_RECALC [=] {DEFAULT|0|1} | STATS_PERSISTENT [=] {DEFAULT|0|1} | STATS_SAMPLE_PAGES [=] value | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY|DEFAULT}] | UNION [=] (tbl_name[,tbl_name]...) partition_options: PARTITION BY { [LINEAR] HASH(expr) | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) | RANGE{(expr) | COLUMNS(column_list)} | LIST{(expr) | COLUMNS(column_list)} } [PARTITIONS num] [SUBPARTITION BY { [LINEAR] HASH(expr) | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) } [SUBPARTITIONS num] ] [(partition_definition [, partition_definition] ...)] partition_definition: PARTITION partition_name [VALUES {LESS THAN {(expr | value_list) | MAXVALUE} | IN (value_list)}] [[STORAGE] ENGINE [=] engine_name] [COMMENT [=] 'string' ] [DATA DIRECTORY [=] 'data_dir'] [INDEX DIRECTORY [=] 'index_dir'] [MAX_ROWS [=] max_number_of_rows] [MIN_ROWS [=] min_number_of_rows] [TABLESPACE [=] tablespace_name] [(subpartition_definition [, subpartition_definition] ...)] subpartition_definition: SUBPARTITION logical_name [[STORAGE] ENGINE [=] engine_name] [COMMENT [=] 'string' ] [DATA DIRECTORY [=] 'data_dir'] [INDEX DIRECTORY [=] 'index_dir'] [MAX_ROWS [=] max_number_of_rows] [MIN_ROWS [=] min_number_of_rows] [TABLESPACE [=] tablespace_name] query_expression: SELECT ... (Some valid select or union statement)","title":"\u5b98\u6863"},{"location":"Database/Mysql/basic/SQL/CreateTable/#_3","text":"\u524d\u63d0\u6761\u4ef6\uff1a\u8d26\u53f7\u9700\u8981\u6709the create privilege \u9ed8\u8ba4\u7684\u53c2\u6570\uff1a\u4f7f\u7528 InnoDB \u5b58\u50a8\u5f15\u64ce\uff0c\u521b\u5efa\u7684\u8868\u4f1a\u5f52\u5c5e\u5f53\u524d\u7684\u6240\u5728\u7684\u6570\u636e\u5e93\u6216\u8005\u6307\u5b9a\u7684\u6570\u636e\u5e93\u3002 \u5982\u679c\u5b58\u5728\u540c\u540d\u8868\uff0c\u6216\u8005\u6ca1\u6709\u5728\u9ed8\u8ba4\uff08\u5f53\u524d\uff09\u5e93\uff0c\u6216\u6ca1\u6709\u5e93\u4e0d\u5b58\u5728\u5f53\u51fa\u73b0\u62a5\u9519\u3002","title":"\u8bf4\u660e\u57fa\u7840"},{"location":"Database/Mysql/basic/SQL/CreateTable/#table_name","text":"db_name.table_name \u88ab\u6307\u5b9a\u7684\u8bdd\uff0c\u4f1a\u5ffd\u7565\u5f53\u524d\u6240\u5728\u7684\u5e93(\u9ed8\u8ba4\u5e93)\uff0c\u6240\u521b\u5efa\u7684\u8868\u4f1a\u5f52\u5c5e\u5230\u6307\u5b9a\u7684 db_name \u5e93.\u524d\u63d0\u6307\u5b9a\u7684\u5e93\u662f\u5b58\u5728\u7684. \u4f7f\u7528\"`\"\u6765\u5f15\u7528\u8868\u540d,\u9700\u8981\u5bf9\u8868\u540d,\u5e93\u540d\u6216\u4e24\u8005\u4e00\u8d77\u5f15\u7528. IF NOT EXISTS \u5982\u679c\u5b58\u5728\u8868,\u5219\u62a5\u9519.\u4f46\u4e0d\u6821\u9a8c\u8868\u7684\u7ed3\u6784\u662f\u5426\u76f8\u540c.","title":"Table_name"},{"location":"Database/Mysql/basic/SQL/CreateTable/#temporary-tables","text":"Temporary Table\u53ef\u5728create \u4e00\u4e2a\u8868\u7684\u65f6\u5019\u4f7f\u7528. \u5b83\u53ea\u5728\u5f53\u524d\u4f1a\u8bdd\u53ef\u89c1,\u751f\u6548,\u968f\u7740\u4f1a\u8bdd\u7ed3\u675f\u800c\u6d88\u5931.","title":"Temporary Tables"},{"location":"Database/Mysql/basic/SQL/CreateTable/#cloning-or-copying-a-table","text":"LIKE \u4f7f\u7528 CREATE TABLE ... LIKE ... \u521b\u5efa\u4e00\u4e2a\u4e0e\u6e90\u8868\u4e00\u6837\u7ed3\u6784\u7684\u7a7a\u8868. \u6240\u6709\u7684\u5217\u5c5e\u6027,\u7d22\u5f15\u5b9a\u4e49\u90fd\u4e0e\u6e90\u8868\u4e00\u6837. \u8bed\u6cd5\uff1a CREATE TABLE new_tbl LIKE orig_tbl; [AS] quary_expression \u4ee5\u8868\u5efa\u8868\uff0c\u540c\u65f6\u589e\u52a0 SELECT \u8bed\u53e5\u5230 CREATE TABLE \u7ed3\u5c3e. Syntax: `CREATE TABLE new_tbl AS SELECT * FROM orgi_tbl; IGNORE|REPLACE \u6307\u660e\u5982\u4f55\u5904\u7406 select \u8bed\u53e5\u4e2d\u7684\u91cd\u590d\u552f\u4e00\u6027\u952e\u503c\u3002 IGNORE\uff1a\u5ffd\u7565\u8be5\u952e\u503c REPLACE:\u66ff\u4ee3\u73b0\u6709\u952e\u503c \u4e24\u8005\u90fd\u4e0d\u6307\u5b9a\uff0c\u5c06\u4f1a\u62a5\u9519\u51fa\u6765\u3002","title":"Cloning or Copying a Table"},{"location":"Database/Mysql/basic/SQL/CreateTable/#data_type","text":"\u5b9a\u4e49\u5217\u7684\u6570\u636e\u7c7b\u578b","title":"Data_type"},{"location":"Database/Mysql/basic/SQL/CreateTable/#null-not-null","text":"\u5b9a\u4e49\u5b57\u6bb5\u662f\u5426\u9700\u8981\u4e00\u5b9a\u8981\u6709\u503c\uff0c\u5426\u5219\u62a5\u9519\u3002","title":"Null / Not null"},{"location":"Database/Mysql/basic/SQL/CreateTable/#default","text":"\u5b9a\u4e49\u5b57\u4f53\u7684\u9ed8\u8ba4\u503c","title":"Default"},{"location":"Database/Mysql/basic/SQL/CreateTable/#auto_increment","text":"\u5b9a\u4e49\u5b57\u6bb5\u4e3a\u6574\u6570\u6216\u8005\u6d6e\u70b9\u6570\u7c7b\u578b\u7684 value+1 \u9012\u589e\u503c\uff0cvalue\u4e3a\u5f53\u524d\u5b57\u6bb5\u7684\u6700\u5927\u503c \u9ed8\u8ba4\u4ece\u6570\u503c1\u5f00\u59cb\u9012\u589e\uff0c \u5b9a\u4e49\u7684\u5b57\u6bb5\u5fc5\u987b\u6709KEY\u5c5e\u6027\u503c\uff0c\u4f46\u552f\u4e00\u4e00\u4e2a\u5b57\u6bb5\u6709\u81ea\u589e\u5c5e\u6027 \u4e0d\u4e0eDefault\u5c5e\u6027\u4e00\u8d77\u7528 \u5f53\u63d2\u5165\u503c\u4e3a \u8d1f\u6570 \u65f6\uff0c\u63d2\u5165\u5230\u8868\u7684\u771f\u4e3a\u5f88\u5927\u6b63\u6570\u3002","title":"Auto_increment"},{"location":"Database/Mysql/basic/SQL/CreateTable/#column_format","text":"\u5728NDB\u96c6\u7fa4\u4e2d\uff0cNDB\u7684\u8868\u5e38\u7528 column_format \u6765\u6307\u5b9a\u8868\u4e2d\u4e2a\u522b\u5217\u7684\u6570\u636e\u5b58\u50a8\u683c\u5f0f\u3002 \u5141\u8bb8\u7684\u503c\uff1aFIXED\uff0cDYNAMIC\uff0cDEFAULT FIXED \u56fa\u5b9a\u5bbd\u5ea6\u7684\u5b58\u50a8 DYNAMIC \u53ef\u53d8\u5bbd\u5ea6\u7684\u5b58\u50a8 DEFAULT \u7531\u5217\u7684\u6570\u636e\u7c7b\u578b\u51b3\u5b9aFIXED\u8fd8\u662fDYNAMIC\uff0c\u53ef\u80fd\u4f1a\u88abROW_FORMAT\u8986\u76d6\uff09","title":"Column_format"},{"location":"Database/Mysql/basic/SQL/CreateTable/#storage","text":"\u663e\u793a\u521b\u5efaTable\u7684\u8bed\u53e5\uff1a show create table tablename;","title":"STORAGE"},{"location":"Database/Mysql/basic/SQL/CreateView/","text":"[toc] Create View 1.\u89c6\u56fe (\u865a\u62df\u7684\u8868) \u53ef\u4ee5DML view\u7684\u539f\u7406\u662f\u600e\u6837\u7684\u5462\uff1f","title":"CreateView"},{"location":"Database/Mysql/basic/SQL/CreateView/#create-view","text":"","title":"Create View"},{"location":"Database/Mysql/basic/SQL/CreateView/#1","text":"\u53ef\u4ee5DML view\u7684\u539f\u7406\u662f\u600e\u6837\u7684\u5462\uff1f","title":"1.\u89c6\u56fe (\u865a\u62df\u7684\u8868)"},{"location":"Database/Mysql/basic/SQL/Create_Table_2/","text":"[toc] _CREATE_TABLE_2 _LIKE mysql __create_table_stu_(id_int(11),name_varchar(20),gender_int(11)); Query_OK,_0_rows_affected_(0.03_sec) mysql _desc_stu; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_YES__|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.00_sec) mysql _create_table_stu_c_like_stu; Query_OK,_0_rows_affected_(0.05_sec) mysql _create_database_fortest; Query_OK,_1_row_affected_(0.08_sec) mysql _create_table_fortest.stu_c_like_stu; Query_OK,_0_rows_affected_(0.05_sec) mysql _desc_stu_c; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_YES__|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+------_---+-------+ 3_rows_in_set_(0.01_sec) mysql _desc_fortest.stu_c; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_YES__|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.00_sec) Not_null /_Null Query_OK,_0_rows_affected_(0.20_sec) Records:_0__Duplicates:_0__Warnings:_0 mysql _desc_stu ____- _; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_NO___|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.01_sec) mysql _insert_into_stu_(name,gender)_values('b',2); ERROR_1364_(HY000):_Field_'id'_doesn't_have_a_default_value - \u6307\u5b9a\u975e\u7a7a\u65f6\uff0c\u4f1a\u62a5\u9519\u67d0\u5217\u4e0d\u5141\u8bb8\u4e3a\u7a7a\u3002 -_\u5982\u679c\u5b9a\u4e49\u5b57\u6bb5\u4e3a\u975e\u7a7a\u9047\u5230\u5df2\u5b58\u5728\u975e\u7a7a\u503c\u65f6\uff0c\u5c31\u4f1a\u62a5\u9519\u3002 _Modify_table _\u4fee\u6539\u5217\u7684\u5c5e\u6027\uff0c\u975e\u7a7a\uff0c\u9ed8\u8ba4\u503c\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u6570\u636e\u7684\u957f\u5ea6and_so_on. _\u8bed\u6cd5\uff1a ALTER_TABLE_tbl_name_modify_tbl_column_name_DATA_TYPE(DATA_LENGTH)_... mysql _alter_table_stu_modify_id_int(11)_not_null_default_11; Query_OK,_0_rows_affected_(0.10_sec) Records:_0__Duplicates:_0__Warnings:_0_ mysql _desc_stu; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_NO___|_____|_11______|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.00_sec)_ mysql _alter_table_stu_modify_name_varchar(20)_not_null_default_'chenzhiqing'; Query_OK,_0_rows_affected_(0.19_sec) Records:_0__Duplicates:_0__Warnings:_0_ mysql _desc_stu; +--------+-------------+------+-----+-------------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_____|_Extra_| +--------+-------------+------+-----+-------------+-------+ |_id_____|_int(11)_____|_NO___|_____|_11__________|_______| |_name___|_varchar(20)_|_NO___|_____|_chenzhiqing_|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL________|_______| +--------+-------------+------+-----+-------------+-------+ 3_rows_in_set_(0.00_sec)_","title":"Create_Table_2"},{"location":"Database/Mysql/basic/SQL/Create_Table_2/#_create_table_2","text":"","title":"_CREATE_TABLE_2"},{"location":"Database/Mysql/basic/SQL/Create_Table_2/#_like","text":"mysql __create_table_stu_(id_int(11),name_varchar(20),gender_int(11)); Query_OK,_0_rows_affected_(0.03_sec) mysql _desc_stu; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_YES__|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.00_sec) mysql _create_table_stu_c_like_stu; Query_OK,_0_rows_affected_(0.05_sec) mysql _create_database_fortest; Query_OK,_1_row_affected_(0.08_sec) mysql _create_table_fortest.stu_c_like_stu; Query_OK,_0_rows_affected_(0.05_sec) mysql _desc_stu_c; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_YES__|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+------_---+-------+ 3_rows_in_set_(0.01_sec) mysql _desc_fortest.stu_c; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_YES__|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.00_sec)","title":"_LIKE"},{"location":"Database/Mysql/basic/SQL/Create_Table_2/#not_null_null","text":"Query_OK,_0_rows_affected_(0.20_sec) Records:_0__Duplicates:_0__Warnings:_0 mysql _desc_stu ____- _; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_NO___|_____|_NULL____|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.01_sec) mysql _insert_into_stu_(name,gender)_values('b',2); ERROR_1364_(HY000):_Field_'id'_doesn't_have_a_default_value - \u6307\u5b9a\u975e\u7a7a\u65f6\uff0c\u4f1a\u62a5\u9519\u67d0\u5217\u4e0d\u5141\u8bb8\u4e3a\u7a7a\u3002 -_\u5982\u679c\u5b9a\u4e49\u5b57\u6bb5\u4e3a\u975e\u7a7a\u9047\u5230\u5df2\u5b58\u5728\u975e\u7a7a\u503c\u65f6\uff0c\u5c31\u4f1a\u62a5\u9519\u3002","title":"Not_null/_Null"},{"location":"Database/Mysql/basic/SQL/Create_Table_2/#_modify_table","text":"_\u4fee\u6539\u5217\u7684\u5c5e\u6027\uff0c\u975e\u7a7a\uff0c\u9ed8\u8ba4\u503c\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u6570\u636e\u7684\u957f\u5ea6and_so_on. _\u8bed\u6cd5\uff1a ALTER_TABLE_tbl_name_modify_tbl_column_name_DATA_TYPE(DATA_LENGTH)_... mysql _alter_table_stu_modify_id_int(11)_not_null_default_11; Query_OK,_0_rows_affected_(0.10_sec) Records:_0__Duplicates:_0__Warnings:_0_ mysql _desc_stu; +--------+-------------+------+-----+---------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_|_Extra_| +--------+-------------+------+-----+---------+-------+ |_id_____|_int(11)_____|_NO___|_____|_11______|_______| |_name___|_varchar(20)_|_YES__|_____|_NULL____|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL____|_______| +--------+-------------+------+-----+---------+-------+ 3_rows_in_set_(0.00_sec)_ mysql _alter_table_stu_modify_name_varchar(20)_not_null_default_'chenzhiqing'; Query_OK,_0_rows_affected_(0.19_sec) Records:_0__Duplicates:_0__Warnings:_0_ mysql _desc_stu; +--------+-------------+------+-----+-------------+-------+ |_Field__|_Type________|_Null_|_Key_|_Default_____|_Extra_| +--------+-------------+------+-----+-------------+-------+ |_id_____|_int(11)_____|_NO___|_____|_11__________|_______| |_name___|_varchar(20)_|_NO___|_____|_chenzhiqing_|_______| |_gender_|_int(11)_____|_YES__|_____|_NULL________|_______| +--------+-------------+------+-----+-------------+-------+ 3_rows_in_set_(0.00_sec)_","title":"_Modify_table"},{"location":"Database/Mysql/basic/SQL/Cursor/","text":"[toc] Cursor 1.\u57fa\u7840\uff1a 1) \u542b\u4e49\uff1a\u6e38\u6807\uff0c\u58f0\u660e\u4e00\u4e2a\u6570\u91cf\u96c6 2)\u7528\u6cd5\uff1a declear continue handle for sqlstate \u20182300\u2019; \u2013","title":"Cursor"},{"location":"Database/Mysql/basic/SQL/Cursor/#cursor","text":"","title":"Cursor"},{"location":"Database/Mysql/basic/SQL/Cursor/#1","text":"","title":"1.\u57fa\u7840\uff1a"},{"location":"Database/Mysql/basic/SQL/Cursor/#1_1","text":"","title":"1) \u542b\u4e49\uff1a\u6e38\u6807\uff0c\u58f0\u660e\u4e00\u4e2a\u6570\u91cf\u96c6"},{"location":"Database/Mysql/basic/SQL/Cursor/#2","text":"declear continue handle for sqlstate \u20182300\u2019; \u2013","title":"2)\u7528\u6cd5\uff1a"},{"location":"Database/Mysql/basic/SQL/Delete/","text":"[toc] Delete Mutil-table DELETE [LOW_PRIORITY] [QUICK] [IGNORE] tbl_name[.*] [, tbl_name[.*]] ... FROM table_references [WHERE where_condition] DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM tbl_name[.*] [, tbl_name[.*]] ... USING table_references [WHERE where_condition]","title":"Delete"},{"location":"Database/Mysql/basic/SQL/Delete/#delete","text":"","title":"Delete"},{"location":"Database/Mysql/basic/SQL/Delete/#mutil-table","text":"DELETE [LOW_PRIORITY] [QUICK] [IGNORE] tbl_name[.*] [, tbl_name[.*]] ... FROM table_references [WHERE where_condition] DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM tbl_name[.*] [, tbl_name[.*]] ... USING table_references [WHERE where_condition]","title":"Mutil-table"},{"location":"Database/Mysql/basic/SQL/Funtion/","text":"[toc] DATA_ADD select data_add('2020-02-23 23:59:59',interval 1 seconds); select date_format(now(),'%Y%m%d');","title":"Funtion"},{"location":"Database/Mysql/basic/SQL/Funtion/#data_add","text":"select data_add('2020-02-23 23:59:59',interval 1 seconds); select date_format(now(),'%Y%m%d');","title":"DATA_ADD"},{"location":"Database/Mysql/basic/SQL/Instert&Update/","text":"Insert Update [toc] Insert Update Update techer set id =1+id order by id desc; -- \u9006\u5411\u6392\u5e8f\u540e\u9010\u4e2a\u66f4\u65b0id\u4e3aid+1 update a,b set a.id=b.id ,b.name=a.name where a.n=b.n; Autocommit \u662f\u5426\u81ea\u52a8\u63d0\u4ea4 \u8bed\u6cd5\uff1a set autocommit={on|off}; \u9ed8\u8ba4\uff1aon [toc]","title":"Instert&Update"},{"location":"Database/Mysql/basic/SQL/Instert&Update/#insert","text":"","title":"Insert"},{"location":"Database/Mysql/basic/SQL/Instert&Update/#update","text":"Update techer set id =1+id order by id desc; -- \u9006\u5411\u6392\u5e8f\u540e\u9010\u4e2a\u66f4\u65b0id\u4e3aid+1 update a,b set a.id=b.id ,b.name=a.name where a.n=b.n;","title":"Update"},{"location":"Database/Mysql/basic/SQL/Instert&Update/#autocommit","text":"\u662f\u5426\u81ea\u52a8\u63d0\u4ea4 \u8bed\u6cd5\uff1a set autocommit={on|off}; \u9ed8\u8ba4\uff1aon [toc]","title":"Autocommit"},{"location":"Database/Mysql/basic/SQL/MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5/","text":"Author:AIQ E-mail:byyelang@gmail.com [toc] 0.\u52a0\u5bc6\u5b89\u5168\u5ea6 caching_sha2_password sha256_password mysql_native_password The caching_sha2_password and sha256_password authentication plugins provide more secure password encryption than the mysql_native_password plugin, and caching_sha2_password provides better performance than sha256_password. 1.\u521b\u5efa\u7528\u6237 13.7.1.3 CREATE USER Syntax CREATE USER [IF NOT EXISTS] user [auth_option] [, user [auth_option]] ... DEFAULT ROLE role [, role ] ... [REQUIRE {NONE | tls_option [[AND] tls_option] ...}] [WITH resource_option [resource_option] ...] [password_option | lock_option] ... user: (see Section 6.2.4, \u201cSpecifying Account Names\u201d) auth_option: { IDENTIFIED BY 'auth_string' | IDENTIFIED WITH auth_plugin | IDENTIFIED WITH auth_plugin BY 'auth_string' | IDENTIFIED WITH auth_plugin AS 'hash_string' } tls_option: { SSL | X509 | CIPHER 'cipher' | ISSUER 'issuer' | SUBJECT 'subject' } resource_option: { MAX_QUERIES_PER_HOUR count | MAX_UPDATES_PER_HOUR count | MAX_CONNECTIONS_PER_HOUR count | MAX_USER_CONNECTIONS count } password_option: { PASSWORD EXPIRE [DEFAULT | NEVER | INTERVAL N DAY] | PASSWORD HISTORY {DEFAULT | N} | PASSWORD REUSE INTERVAL {DEFAULT | N DAY} | PASSWORD REQUIRE CURRENT [DEFAULT | OPTIONAL]Account Management Statements 2241 } lock_option: { ACCOUNT LOCK | ACCOUNT UNLOCK } The CREATE USER statement creates new MySQL accounts. It enables authentication, role, SSL/TLS, resource-limit, and password-management properties to be established for new accounts, and controls whether accounts are initially locked or unlocked. To use CREATE USER, you must have the global CREATE USER privilege, or the INSERT privilege for the mysql system database. When the read_only system variable is enabled, CREATE USER additionally requires the CONNECTION_ADMIN or SUPER privilege. CREATE USER either succeeds for all named users or rolls back and has no effect if any error occurs. By default, an error occurs if you try to create a user that already exists. If the IF NOT EXISTS clause is given, the statement produces a warning for each named user that already exists, rather than an error. Important Under some circumstances, CREATE USER may be recorded in server logs or on the client side in a history file such as ~/.mysql_history, which means that cleartext passwords may be read by anyone having read access to that information. For information about the conditions under which this occurs for the server logs and how to control it, see Section 6.1.2.3, \u201cPasswords and Logging\u201d. For similar information about client-side logging, see Section 4.5.1.3, \u201cmysql Logging\u201d. 1.1 \u4f8b\u5b50 CREATE USER 'jeffrey'@'localhost' IDENTIFIED WITH mysql_native_password BY 'new_password1', 'jeanne'@'localhost' IDENTIFIED WITH sha256_password BY 'new_password2' REQUIRE X509 WITH MAX_QUERIES_PER_HOUR 60 PASSWORD HISTORY 5 ACCOUNT LOCK; 2.\u4fee\u6539\u7528\u6237 13.7.1.1 ALTER USER Syntax ALTER USER [IF EXISTS] user [auth_option] [, user [auth_option]] ... [REQUIRE {NONE | tls_option [[AND] tls_option] ...}] [WITH resource_option [resource_option] ...] [password_option | lock_option] ...Account Management Statements 2230 ALTER USER [IF EXISTS] USER() IDENTIFIED BY 'auth_string' [REPLACE 'current_auth_string'] ALTER USER [IF EXISTS] user DEFAULT ROLE {NONE | ALL | role [, role ] ...} user: (see Section 6.2.4, \u201cSpecifying Account Names\u201d) auth_option: { IDENTIFIED BY 'auth_string' [REPLACE 'current_auth_string'] | IDENTIFIED WITH auth_plugin | IDENTIFIED WITH auth_plugin BY 'auth_string' [REPLACE 'current_auth_string'] | IDENTIFIED WITH auth_plugin AS 'hash_string' } tls_option: { SSL | X509 | CIPHER 'cipher' | ISSUER 'issuer' | SUBJECT 'subject' } resource_option: { MAX_QUERIES_PER_HOUR count | MAX_UPDATES_PER_HOUR count | MAX_CONNECTIONS_PER_HOUR count | MAX_USER_CONNECTIONS count } password_option: { PASSWORD EXPIRE [DEFAULT | NEVER | INTERVAL N DAY] | PASSWORD HISTORY {DEFAULT | N} | PASSWORD REUSE INTERVAL {DEFAULT | N DAY} | PASSWORD REQUIRE CURRENT [DEFAULT | OPTIONAL] } lock_option: { ACCOUNT LOCK | ACCOUNT UNLOCK } The ALTER USER statement modifies MySQL accounts. It enables authentication, role, SSL/TLS, resource-limit, and password-management properties to be modified for existing accounts, and enables account locking and unlocking. In most cases, ALTER USER requires the global CREATE USER privilege, or the UPDATE privilege for the mysql system database. The exceptions are: \u2022 Any client who connects to the server using a nonanonymous account can change the password for that account. (In particular, you can change your own password.) To see which account the server authenticated you as, invoke the CURRENT_USER() function: SELECT CURRENT_USER(); \u2022 For DEFAULT ROLE syntax, ALTER USER requires these privileges: \u2022 Setting the default roles for another user requires the global CREATE USER privilege, or the UPDATE privilege for the mysql.default_roles system table. \u2022 Setting the default roles for yourself requires no special privileges, as long as the roles you want as the default have been granted to you. When the read_only system variable is enabled, ALTER USER additionally requires the CONNECTION_ADMIN or SUPER privilege.Account Management Statements 2231 By default, an error occurs if you try to modify a user that does not exist. If the IF EXISTS clause is given, the statement produces a warning for each named user that does not exist, rather than an error. Important Under some circumstances, ALTER USER may be recorded in server logs or on the client side in a history file such as ~/.mysql_history, which means that cleartext passwords may be read by anyone having read access to that information. For information about the conditions under which this occurs for the server logs and how to control it, see Section 6.1.2.3, \u201cPasswords and Logging\u201d. For similar information about client-side logging, see Section 4.5.1.3, \u201cmysql Logging\u201d. 2.1 \u4f8b\u5b50 Example: Modify an account to use the sha256_password authentication plugin and the given password. Require that a new password be chosen every 180 days: ALTER USER 'jeffrey'@'localhost' IDENTIFIED WITH sha256_password BY 'new_password' PASSWORD EXPIRE INTERVAL 180 DAY; [toc]","title":"MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5"},{"location":"Database/Mysql/basic/SQL/MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5/#0","text":"","title":"0.\u52a0\u5bc6\u5b89\u5168\u5ea6"},{"location":"Database/Mysql/basic/SQL/MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5/#caching_sha2_password-sha256_password-mysql_native_password","text":"The caching_sha2_password and sha256_password authentication plugins provide more secure password encryption than the mysql_native_password plugin, and caching_sha2_password provides better performance than sha256_password.","title":"caching_sha2_password &gt; sha256_password &gt; mysql_native_password"},{"location":"Database/Mysql/basic/SQL/MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5/#1","text":"13.7.1.3 CREATE USER Syntax CREATE USER [IF NOT EXISTS] user [auth_option] [, user [auth_option]] ... DEFAULT ROLE role [, role ] ... [REQUIRE {NONE | tls_option [[AND] tls_option] ...}] [WITH resource_option [resource_option] ...] [password_option | lock_option] ... user: (see Section 6.2.4, \u201cSpecifying Account Names\u201d) auth_option: { IDENTIFIED BY 'auth_string' | IDENTIFIED WITH auth_plugin | IDENTIFIED WITH auth_plugin BY 'auth_string' | IDENTIFIED WITH auth_plugin AS 'hash_string' } tls_option: { SSL | X509 | CIPHER 'cipher' | ISSUER 'issuer' | SUBJECT 'subject' } resource_option: { MAX_QUERIES_PER_HOUR count | MAX_UPDATES_PER_HOUR count | MAX_CONNECTIONS_PER_HOUR count | MAX_USER_CONNECTIONS count } password_option: { PASSWORD EXPIRE [DEFAULT | NEVER | INTERVAL N DAY] | PASSWORD HISTORY {DEFAULT | N} | PASSWORD REUSE INTERVAL {DEFAULT | N DAY} | PASSWORD REQUIRE CURRENT [DEFAULT | OPTIONAL]Account Management Statements 2241 } lock_option: { ACCOUNT LOCK | ACCOUNT UNLOCK } The CREATE USER statement creates new MySQL accounts. It enables authentication, role, SSL/TLS, resource-limit, and password-management properties to be established for new accounts, and controls whether accounts are initially locked or unlocked. To use CREATE USER, you must have the global CREATE USER privilege, or the INSERT privilege for the mysql system database. When the read_only system variable is enabled, CREATE USER additionally requires the CONNECTION_ADMIN or SUPER privilege. CREATE USER either succeeds for all named users or rolls back and has no effect if any error occurs. By default, an error occurs if you try to create a user that already exists. If the IF NOT EXISTS clause is given, the statement produces a warning for each named user that already exists, rather than an error. Important Under some circumstances, CREATE USER may be recorded in server logs or on the client side in a history file such as ~/.mysql_history, which means that cleartext passwords may be read by anyone having read access to that information. For information about the conditions under which this occurs for the server logs and how to control it, see Section 6.1.2.3, \u201cPasswords and Logging\u201d. For similar information about client-side logging, see Section 4.5.1.3, \u201cmysql Logging\u201d.","title":"1.\u521b\u5efa\u7528\u6237"},{"location":"Database/Mysql/basic/SQL/MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5/#11","text":"CREATE USER 'jeffrey'@'localhost' IDENTIFIED WITH mysql_native_password BY 'new_password1', 'jeanne'@'localhost' IDENTIFIED WITH sha256_password BY 'new_password2' REQUIRE X509 WITH MAX_QUERIES_PER_HOUR 60 PASSWORD HISTORY 5 ACCOUNT LOCK;","title":"1.1 \u4f8b\u5b50"},{"location":"Database/Mysql/basic/SQL/MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5/#2","text":"13.7.1.1 ALTER USER Syntax ALTER USER [IF EXISTS] user [auth_option] [, user [auth_option]] ... [REQUIRE {NONE | tls_option [[AND] tls_option] ...}] [WITH resource_option [resource_option] ...] [password_option | lock_option] ...Account Management Statements 2230 ALTER USER [IF EXISTS] USER() IDENTIFIED BY 'auth_string' [REPLACE 'current_auth_string'] ALTER USER [IF EXISTS] user DEFAULT ROLE {NONE | ALL | role [, role ] ...} user: (see Section 6.2.4, \u201cSpecifying Account Names\u201d) auth_option: { IDENTIFIED BY 'auth_string' [REPLACE 'current_auth_string'] | IDENTIFIED WITH auth_plugin | IDENTIFIED WITH auth_plugin BY 'auth_string' [REPLACE 'current_auth_string'] | IDENTIFIED WITH auth_plugin AS 'hash_string' } tls_option: { SSL | X509 | CIPHER 'cipher' | ISSUER 'issuer' | SUBJECT 'subject' } resource_option: { MAX_QUERIES_PER_HOUR count | MAX_UPDATES_PER_HOUR count | MAX_CONNECTIONS_PER_HOUR count | MAX_USER_CONNECTIONS count } password_option: { PASSWORD EXPIRE [DEFAULT | NEVER | INTERVAL N DAY] | PASSWORD HISTORY {DEFAULT | N} | PASSWORD REUSE INTERVAL {DEFAULT | N DAY} | PASSWORD REQUIRE CURRENT [DEFAULT | OPTIONAL] } lock_option: { ACCOUNT LOCK | ACCOUNT UNLOCK } The ALTER USER statement modifies MySQL accounts. It enables authentication, role, SSL/TLS, resource-limit, and password-management properties to be modified for existing accounts, and enables account locking and unlocking. In most cases, ALTER USER requires the global CREATE USER privilege, or the UPDATE privilege for the mysql system database. The exceptions are: \u2022 Any client who connects to the server using a nonanonymous account can change the password for that account. (In particular, you can change your own password.) To see which account the server authenticated you as, invoke the CURRENT_USER() function: SELECT CURRENT_USER(); \u2022 For DEFAULT ROLE syntax, ALTER USER requires these privileges: \u2022 Setting the default roles for another user requires the global CREATE USER privilege, or the UPDATE privilege for the mysql.default_roles system table. \u2022 Setting the default roles for yourself requires no special privileges, as long as the roles you want as the default have been granted to you. When the read_only system variable is enabled, ALTER USER additionally requires the CONNECTION_ADMIN or SUPER privilege.Account Management Statements 2231 By default, an error occurs if you try to modify a user that does not exist. If the IF EXISTS clause is given, the statement produces a warning for each named user that does not exist, rather than an error. Important Under some circumstances, ALTER USER may be recorded in server logs or on the client side in a history file such as ~/.mysql_history, which means that cleartext passwords may be read by anyone having read access to that information. For information about the conditions under which this occurs for the server logs and how to control it, see Section 6.1.2.3, \u201cPasswords and Logging\u201d. For similar information about client-side logging, see Section 4.5.1.3, \u201cmysql Logging\u201d.","title":"2.\u4fee\u6539\u7528\u6237"},{"location":"Database/Mysql/basic/SQL/MySQL\u6307\u5b9a\u8d26\u53f7\u52a0\u5bc6\u65b9\u5f0f\u7684\u65b9\u6cd5/#21","text":"Example: Modify an account to use the sha256_password authentication plugin and the given password. Require that a new password be chosen every 180 days: ALTER USER 'jeffrey'@'localhost' IDENTIFIED WITH sha256_password BY 'new_password' PASSWORD EXPIRE INTERVAL 180 DAY; [toc]","title":"2.1 \u4f8b\u5b50"},{"location":"Database/Mysql/basic/SQL/Select/","text":"[toc] Select Syntax 13.2.10 SELECT Syntax SELECT [ALL | DISTINCT | DISTINCTROW ] [HIGH_PRIORITY] [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT] SQL_NO_CACHE [SQL_CALC_FOUND_ROWS] select_expr [, select_expr ...] [FROM table_references [PARTITION partition_list] [WHERE where_condition] [GROUP BY {col_name | expr | position}, ... [WITH ROLLUP]] [HAVING where_condition] [WINDOW window_name AS (window_spec) [, window_name AS (window_spec)] ...] [ORDER BY {col_name | expr | position} [ASC | DESC], ... [WITH ROLLUP]] [LIMIT {[offset,] row_count | row_count OFFSET offset}] [INTO OUTFILE 'file_name' [CHARACTER SET charset_name] export_options | INTO DUMPFILE 'file_name' | INTO var_name [, var_name]] [FOR {UPDATE | SHARE} [OF tbl_name [, tbl_name] ...] [NOWAIT | SKIP LOCKED] | LOCK IN SHARE MODE]] select count(*),id ... group by id ; count(*) group by id ; \u6392\u5217\u7684\u5b57\u6bb5\u53ef\u6bd4group by \u7684\u5c11\uff0c\u4e0d\u53ef\u591a\u3002 having group by ... having count(*) {num}; order by \uff1a\u5217\u6392\u5e8f\u7684\u65b9\u5f0f order by a asc,b; order by a ,b asc; inner join ... on ... group by ... \u5206\u7ec4 limit \u524d\u51e0\u6761 \u7b2c\u51e0\u6761\u7684\u540e\u9762\u5f00\u59cb\u8bfb\u53d6\uff0cdao\u51e0\u51e0\u6761 \u5305\u62ec0\uff0c\u5f00\u59cb\uff0c\u4ece\u6570\u5b57\u540e\u9762\u5f00\u59cb\u8bfb\u3002 distinct \u53bb\u91cd\u3002 select ... into ... from ... \u5c06\u7ed3\u679c\u5199\u5230\u6587\u4ef6\u91cc\u9762\u53bb\u3002 SELECT colum_name ,... INTO OUTFILE '/local/path/file' FROM table_name,... where ...; \u524d\u63d0\uff1amy.cnf\uff1asecure_file_priv='/local/path/' SELECT sid,sname,sex INTO OUTFILE '/tmp/students.txt' FIELDS TERMINATED BY ',' -- \u5b57\u6bb5\u7684\u5206\u9694\u7b26 OPTIONALLY ENCLOSED BY ' ' -- LINES TERMINATED BY '\\n' -- \u884c\u7ed3\u675f\u7b26 FROM students; inner join ... on union [ all ] union all \u4e0d\u53bb\u91cd column_name \u5b57\u6bb5\u540d\u5b57\u53ef\u4ee5\u4e0d\u4e00\u6837\uff0c\u4f46\u8981\u6709\u610f\u4e49\u3002","title":"Select"},{"location":"Database/Mysql/basic/SQL/Select/#select","text":"","title":"Select"},{"location":"Database/Mysql/basic/SQL/Select/#syntax","text":"13.2.10 SELECT Syntax SELECT [ALL | DISTINCT | DISTINCTROW ] [HIGH_PRIORITY] [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT] SQL_NO_CACHE [SQL_CALC_FOUND_ROWS] select_expr [, select_expr ...] [FROM table_references [PARTITION partition_list] [WHERE where_condition] [GROUP BY {col_name | expr | position}, ... [WITH ROLLUP]] [HAVING where_condition] [WINDOW window_name AS (window_spec) [, window_name AS (window_spec)] ...] [ORDER BY {col_name | expr | position} [ASC | DESC], ... [WITH ROLLUP]] [LIMIT {[offset,] row_count | row_count OFFSET offset}] [INTO OUTFILE 'file_name' [CHARACTER SET charset_name] export_options | INTO DUMPFILE 'file_name' | INTO var_name [, var_name]] [FOR {UPDATE | SHARE} [OF tbl_name [, tbl_name] ...] [NOWAIT | SKIP LOCKED] | LOCK IN SHARE MODE]] select count(*),id ... group by id ; count(*) group by id ; \u6392\u5217\u7684\u5b57\u6bb5\u53ef\u6bd4group by \u7684\u5c11\uff0c\u4e0d\u53ef\u591a\u3002","title":"Syntax"},{"location":"Database/Mysql/basic/SQL/Select/#having","text":"group by ... having count(*) {num};","title":"having"},{"location":"Database/Mysql/basic/SQL/Select/#order-by","text":"order by a asc,b; order by a ,b asc; inner join ... on ...","title":"order by  \uff1a\u5217\u6392\u5e8f\u7684\u65b9\u5f0f"},{"location":"Database/Mysql/basic/SQL/Select/#group-by","text":"\u5206\u7ec4","title":"group by ..."},{"location":"Database/Mysql/basic/SQL/Select/#limit","text":"\u524d\u51e0\u6761 \u7b2c\u51e0\u6761\u7684\u540e\u9762\u5f00\u59cb\u8bfb\u53d6\uff0cdao\u51e0\u51e0\u6761 \u5305\u62ec0\uff0c\u5f00\u59cb\uff0c\u4ece\u6570\u5b57\u540e\u9762\u5f00\u59cb\u8bfb\u3002","title":"limit"},{"location":"Database/Mysql/basic/SQL/Select/#distinct","text":"\u53bb\u91cd\u3002","title":"distinct"},{"location":"Database/Mysql/basic/SQL/Select/#select-into-from","text":"\u5c06\u7ed3\u679c\u5199\u5230\u6587\u4ef6\u91cc\u9762\u53bb\u3002 SELECT colum_name ,... INTO OUTFILE '/local/path/file' FROM table_name,... where ...; \u524d\u63d0\uff1amy.cnf\uff1asecure_file_priv='/local/path/' SELECT sid,sname,sex INTO OUTFILE '/tmp/students.txt' FIELDS TERMINATED BY ',' -- \u5b57\u6bb5\u7684\u5206\u9694\u7b26 OPTIONALLY ENCLOSED BY ' ' -- LINES TERMINATED BY '\\n' -- \u884c\u7ed3\u675f\u7b26 FROM students;","title":"select ... into ... from ..."},{"location":"Database/Mysql/basic/SQL/Select/#inner-join-on","text":"","title":"inner join  ... on"},{"location":"Database/Mysql/basic/SQL/Select/#union-all","text":"union all \u4e0d\u53bb\u91cd column_name \u5b57\u6bb5\u540d\u5b57\u53ef\u4ee5\u4e0d\u4e00\u6837\uff0c\u4f46\u8981\u6709\u610f\u4e49\u3002","title":"union [ all ]"},{"location":"Database/Mysql/basic/SQL/Untitled/","text":"rename table a to b ; - \u4f1a\u8ddf\u7740\u4fee\u6539\u5176\u4ed6\u8868\u5916\u952e\u5f15\u7528\u7684\u5c5e\u6027\u3002","title":"Untitled"},{"location":"Database/Mysql/basic/SQL/Untitled/#-","text":"","title":"- \u4f1a\u8ddf\u7740\u4fee\u6539\u5176\u4ed6\u8868\u5916\u952e\u5f15\u7528\u7684\u5c5e\u6027\u3002"},{"location":"Database/Oracle/Database Architacture/","text":"Database Architacture 2.\u57fa\u672c\u5185\u5b58\u7ed3\u6784 \u7cfb\u7edf\u5168\u5c40\u533a\uff08SGA) \u7a0b\u5e8f\u5168\u5c40\u533a\uff08PGA) \u7528\u6237\u5168\u5c40\u533a\uff08UGA) \u8f6f\u4ef6\u4ee3\u7801\u533a 3. System Global Area\uff08SGA\uff09\u7cfb\u7edf\u5168\u5c40\u533a 2.Backgroup Processes \u540e\u53f0\u8fdb\u7a0b Database Architacture \u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u89c2\u5bdf\uff1a 2.\u57fa\u672c\u5185\u5b58\u7ed3\u6784 \u7cfb\u7edf\u5168\u5c40\u533a \uff08SGA) \u7a0b\u5e8f\u5168\u5c40\u533a \uff08PGA) \u7528\u6237\u5168\u5c40\u533a \uff08UGA) \u8f6f\u4ef6\u4ee3\u7801\u533a 3. System Global Area\uff08SGA\uff09\u7cfb\u7edf\u5168\u5c40\u533a Shared Pool Library Cache Shared SQL Area Private SQL Area (Shared Server Only) Data Dictionary Cache Server Result Cache Other Reserved Pool Large Pool Response Queue Request Queue Database Buffer Cache Redo Log Buffer Fixed SGA Java Pool Stream Pool 2.Backgroup Processes \u540e\u53f0\u8fdb\u7a0b PMON SMON RECO MMON MMNL Others","title":"Database Architacture"},{"location":"Database/Oracle/Database Architacture/#database-architacture","text":"\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u89c2\u5bdf\uff1a","title":"Database Architacture"},{"location":"Database/Oracle/Database Architacture/#2","text":"","title":"2.\u57fa\u672c\u5185\u5b58\u7ed3\u6784"},{"location":"Database/Oracle/Database Architacture/#sga","text":"","title":"\u7cfb\u7edf\u5168\u5c40\u533a\uff08SGA)"},{"location":"Database/Oracle/Database Architacture/#pga","text":"","title":"\u7a0b\u5e8f\u5168\u5c40\u533a\uff08PGA)"},{"location":"Database/Oracle/Database Architacture/#uga","text":"","title":"\u7528\u6237\u5168\u5c40\u533a\uff08UGA)"},{"location":"Database/Oracle/Database Architacture/#_1","text":"","title":"\u8f6f\u4ef6\u4ee3\u7801\u533a"},{"location":"Database/Oracle/Database Architacture/#3-system-global-areasga","text":"Shared Pool Library Cache Shared SQL Area Private SQL Area (Shared Server Only) Data Dictionary Cache Server Result Cache Other Reserved Pool Large Pool Response Queue Request Queue Database Buffer Cache Redo Log Buffer Fixed SGA Java Pool Stream Pool","title":"3. System Global Area\uff08SGA\uff09\u7cfb\u7edf\u5168\u5c40\u533a"},{"location":"Database/Oracle/Database Architacture/#2backgroup-processes","text":"PMON SMON RECO MMON MMNL Others","title":"2.Backgroup Processes \u540e\u53f0\u8fdb\u7a0b"},{"location":"Database/Oracle/Database_Architacture/","text":"_[TOC] _Database_Architacture \u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u89c2\u5bdf\uff1a _2.\u57fa\u672c\u5185\u5b58\u7ed3\u6784 1. ### \u7cfb\u7edf\u5168\u5c40\u533a \uff08SGA) 2. ### \u7a0b\u5e8f\u5168\u5c40\u533a \uff08PGA) 3. ### \u7528\u6237\u5168\u5c40\u533a \uff08UGA) 4. ### \u8f6f\u4ef6\u4ee3\u7801\u533a _3._System_Global_Area\uff08SGA\uff09\u7cfb\u7edf\u5168\u5c40\u533a 1. Shared_Pool 1. Library_Cache _1. Shared_SQL_Area _2. Private_SQL_Area_(Shared_Server_Only) _2. Data_Dictionary_Cache 3. Server_Result_Cache 4._Other 5. Reserved_Pool 2._Large_Pool _1._Response_Queue ___2._Request_Queue 3._Database_Buffer_Cache 4._Redo_Log_Buffer 5._Fixed_SGA 6._Java_Pool 7._Stream_Pool _2.Backgroup_Processes_\u540e\u53f0\u8fdb\u7a0b 1. PMON 2._SMON 3._RECO 4._MMON 5._MMNL 6._Others 7. _","title":"Database_Architacture"},{"location":"Database/Oracle/Database_Architacture/#_database_architacture","text":"\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u89c2\u5bdf\uff1a","title":"_Database_Architacture"},{"location":"Database/Oracle/Database_Architacture/#_2","text":"1. ### \u7cfb\u7edf\u5168\u5c40\u533a \uff08SGA) 2. ### \u7a0b\u5e8f\u5168\u5c40\u533a \uff08PGA) 3. ### \u7528\u6237\u5168\u5c40\u533a \uff08UGA) 4. ### \u8f6f\u4ef6\u4ee3\u7801\u533a","title":"_2.\u57fa\u672c\u5185\u5b58\u7ed3\u6784"},{"location":"Database/Oracle/Database_Architacture/#_3_system_global_areasga","text":"1. Shared_Pool 1. Library_Cache _1. Shared_SQL_Area _2. Private_SQL_Area_(Shared_Server_Only) _2. Data_Dictionary_Cache 3. Server_Result_Cache 4._Other 5. Reserved_Pool 2._Large_Pool _1._Response_Queue ___2._Request_Queue 3._Database_Buffer_Cache 4._Redo_Log_Buffer 5._Fixed_SGA 6._Java_Pool 7._Stream_Pool","title":"_3._System_Global_Area\uff08SGA\uff09\u7cfb\u7edf\u5168\u5c40\u533a"},{"location":"Database/Oracle/Database_Architacture/#_2backgroup_processes_","text":"1. PMON 2._SMON 3._RECO 4._MMON 5._MMNL 6._Others 7. _","title":"_2.Backgroup_Processes_\u540e\u53f0\u8fdb\u7a0b"},{"location":"Database/Oracle/Database_Architecture/","text":"_[TOC] _Database_Architacture \u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u89c2\u5bdf\uff1a _2.\u57fa\u672c\u5185\u5b58\u7ed3\u6784 1. ### \u7cfb\u7edf\u5168\u5c40\u533a \uff08SGA) 2. ### \u7a0b\u5e8f\u5168\u5c40\u533a \uff08PGA) 3. ### \u7528\u6237\u5168\u5c40\u533a \uff08UGA) 4. ### \u8f6f\u4ef6\u4ee3\u7801\u533a _3._System_Global_Area\uff08SGA\uff09\u7cfb\u7edf\u5168\u5c40\u533a 1. Shared_Pool 1. Library_Cache _1. Shared_SQL_Area _2. Private_SQL_Area_(Shared_Server_Only) _2. Data_Dictionary_Cache 3. Server_Result_Cache 4._Other 5. Reserved_Pool 2._Large_Pool _1._Response_Queue ___2._Request_Queue 3._Database_Buffer_Cache 4._Redo_Log_Buffer 5._Fixed_SGA 6._Java_Pool 7._Stream_Pool _2.Backgroup_Processes_\u540e\u53f0\u8fdb\u7a0b 1. PMON 2._SMON 3._RECO 4._MMON 5._MMNL 6._Others 7. _","title":"Database Architecture"},{"location":"Database/Oracle/Database_Architecture/#_database_architacture","text":"\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u89c2\u5bdf\uff1a","title":"_Database_Architacture"},{"location":"Database/Oracle/Database_Architecture/#_2","text":"1. ### \u7cfb\u7edf\u5168\u5c40\u533a \uff08SGA) 2. ### \u7a0b\u5e8f\u5168\u5c40\u533a \uff08PGA) 3. ### \u7528\u6237\u5168\u5c40\u533a \uff08UGA) 4. ### \u8f6f\u4ef6\u4ee3\u7801\u533a","title":"_2.\u57fa\u672c\u5185\u5b58\u7ed3\u6784"},{"location":"Database/Oracle/Database_Architecture/#_3_system_global_areasga","text":"1. Shared_Pool 1. Library_Cache _1. Shared_SQL_Area _2. Private_SQL_Area_(Shared_Server_Only) _2. Data_Dictionary_Cache 3. Server_Result_Cache 4._Other 5. Reserved_Pool 2._Large_Pool _1._Response_Queue ___2._Request_Queue 3._Database_Buffer_Cache 4._Redo_Log_Buffer 5._Fixed_SGA 6._Java_Pool 7._Stream_Pool","title":"_3._System_Global_Area\uff08SGA\uff09\u7cfb\u7edf\u5168\u5c40\u533a"},{"location":"Database/Oracle/Database_Architecture/#_2backgroup_processes_","text":"1. PMON 2._SMON 3._RECO 4._MMON 5._MMNL 6._Others 7. _","title":"_2.Backgroup_Processes_\u540e\u53f0\u8fdb\u7a0b"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/","text":"ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c(\u6700\u5168+\u6700\u5b9e\u7528) \u67e5\u770b\u6570\u636e\u5e93\u7248\u672c \u67e5\u770b\u6570\u636e\u5e93\u8bed\u8a00\u73af\u5883 \u67e5\u770bORACLE\u5b9e\u4f8b\u72b6\u6001 \u67e5\u770bORACLE\u76d1\u542c\u72b6\u6001 \u67e5\u770b\u6570\u636e\u5e93\u5f52\u6863\u6a21\u5f0f \u67e5\u770b\u56de\u6536\u7ad9\u4e2d\u5bf9\u8c61 \u6e05\u7a7a\u56de\u6536\u7ad9\u4e2d\u5bf9\u8c61 \u8fd8\u539f\u56de\u6536\u7ad9\u4e2d\u7684\u5bf9\u8c61 \u95ea\u56de\u8bef\u5220\u9664\u7684\u8868 \u95ea\u56de\u8868\u4e2d\u8bb0\u5f55\u5230\u67d0\u4e00\u65f6\u95f4\u70b9 \u67e5\u770bDDL\u9501 \u68c0\u67e5\u7b49\u5f85\u4e8b\u4ef6 \u68c0\u67e5\u6570\u636e\u6587\u4ef6\u72b6\u6001 \u68c0\u67e5\u8868\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5 \u6536\u7f29\u8868\u7a7a\u95f4 \u589e\u52a0\u8868\u7a7a\u95f4\u5927\u5c0f \u68c0\u67e5\u4e0d\u8d77\u4f5c\u7528\u7684\u7ea6\u675f \u68c0\u67e5\u53d1\u751f\u574f\u5757\u7684\u6570\u636e\u5e93\u5bf9\u8c61 \u68c0\u67e5\u65e0\u6548\u7684\u6570\u636e\u5e93\u5bf9\u8c61 \u67e5\u770b\u8bed\u53e5\u6267\u884c\u8fdb\u5ea6 \u68c0\u67e5\u788e\u7247\u7a0b\u5ea6\u9ad8\u7684\u8868 \u68c0\u67e5\u8868\u7a7a\u95f4\u7684 I/O \u6bd4\u4f8b \u68c0\u67e5\u788e\u7247\u7a0b\u5ea6\u9ad8\u7684\u8868 \u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u7684 I/O \u6bd4\u4f8b \u68c0\u67e5\u6d88\u8017CPU\u6700\u9ad8\u7684\u8fdb\u7a0b \u68c0\u67e5\u8fd0\u884c\u5f88\u4e45\u7684SQL \u7b49\u5f85\u65f6\u95f4\u6700\u591a\u76845\u4e2a\u7cfb\u7edf\u7b49\u5f85\u4e8b\u4ef6\u7684\u83b7\u53d6 \u67e5\u627e\u524d\u5341\u6761\u6027\u80fd\u5dee\u7684SQL \u68c0\u67e5\u6b7b\u9501 \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684JOB \u68c0\u67e5\u6570\u636e\u5e93JOB\u7684\u5b8c\u6210\u60c5\u51b5 \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684JOB\u5bf9\u5e94\u7684SID\u3001SERIAL#\u3001SPID \u901a\u8fc7SID\u67e5\u8be2 \u505c\u6b62\u4f1a\u8bdd \u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c(\u6700\u5168+\u6700\u5b9e\u7528) \u67e5\u770b\u6570\u636e\u5e93\u7248\u672c SELECT * FROM V$VERSION; \u67e5\u770b\u6570\u636e\u5e93\u8bed\u8a00\u73af\u5883 SELECT USERENV('LANGUAGE') FROM DUAL; \u67e5\u770bORACLE\u5b9e\u4f8b\u72b6\u6001 SELECT INSTANCE_NAME,HOST_NAME,STARTUP_TIME,STATUS,DATABASE_STATUS FROM V$INSTANCE; \u67e5\u770bORACLE\u76d1\u542c\u72b6\u6001 lsnrctl status \u67e5\u770b\u6570\u636e\u5e93\u5f52\u6863\u6a21\u5f0f SELECT NAME,LOG_MODE,OPEN_MODE FROM V$DATABASE; \u67e5\u770b\u56de\u6536\u7ad9\u4e2d\u5bf9\u8c61 SELECT OBJECT_NAME,ORIGINAL_NAME,TYPE FROM RECYCLEBIN; \u6e05\u7a7a\u56de\u6536\u7ad9\u4e2d\u5bf9\u8c61 PURGE RECYCLEBIN; \u8fd8\u539f\u56de\u6536\u7ad9\u4e2d\u7684\u5bf9\u8c61 FLASHBACK TABLE BIN$GOZUQZ6GS222JZDCCTFLHQ==$0 TO BEFORE DROP RENAME TO TEST; \u95ea\u56de\u8bef\u5220\u9664\u7684\u8868 FLASHBACK TABLE AAA TO BEFORE DROP; \u95ea\u56de\u8868\u4e2d\u8bb0\u5f55\u5230\u67d0\u4e00\u65f6\u95f4\u70b9 ALTER TABLE TEST ENABLE ROW MOVEMENT; FLASHBACK TABLE TEST TO_TIMESTAMP('2009-10-15 21:17:47','YYYY-MM-DD HH24:MI:SS'); \u200b``` \u67e5\u770b\u5f53\u524d\u4f1a\u8bdd \u200b```mysql SELECT SID,SERIAL#,USERNAME,PROGRAM,MACHINE,STATUS FROM V$SESSION; \u67e5\u770bDDL\u9501 SELECT * FROM DBA_DDL_LOCKS WHERE OWNER = 'FWYANG'; \u68c0\u67e5\u7b49\u5f85\u4e8b\u4ef6 SELECT SID, A.USERNAME, EVENT, WAIT_CLASS, T1.SQL_TEXT FROM V$SESSION A, V$SQLAREA T1 WHERE WAIT_CLASS 'Idle' AND A.SQL_ID = T1.SQL_ID; \u68c0\u67e5\u6570\u636e\u6587\u4ef6\u72b6\u6001 SELECT FILE_NAME,STATUS FROM DBA_DATA_FILES; \u68c0\u67e5\u8868\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5 SELECT UPPER(F.TABLESPACE_NAME) \u8868\u7a7a\u95f4\u540d , D.TOT_GROOTTE_MB \u8868\u7a7a\u95f4\u5927\u5c0f(M) , D.TOT_GROOTTE_MB - F.TOTAL_BYTES \u5df2\u4f7f\u7528\u7a7a\u95f4(M) , TO_CHAR(ROUND((D.TOT_GROOTTE_MB - F.TOTAL_BYTES) / D.TOT_GROOTTE_MB * 100,2),'990.99') \u4f7f\u7528\u6bd4 , F.TOTAL_BYTES \u7a7a\u95f2\u7a7a\u95f4(M) , F.MAX_BYTES \u6700\u5927\u5757(M) FROM (SELECT TABLESPACE_NAME, ROUND(SUM(BYTES) / (1024 * 1024), 2) TOTAL_BYTES, ROUND(MAX(BYTES) / (1024 * 1024), 2) MAX_BYTES FROM SYS.DBA_FREE_SPACE GROUP BY TABLESPACE_NAME) F, (SELECT DD.TABLESPACE_NAME, ROUND(SUM(DD.BYTES) / (10http://www.mianfeiwendang.com/doc/dba9a779825b68483416ac9624 * 1024), 2) TOT_GROOTTE_MB FROM SYS.DBA_DATA_FILES DD GROUP BY DD.TABLESPACE_NAME) D WHERE D.TABLESPACE_NAME = F.TABLESPACE_NAME ORDER BY 4 DESC; \u6536\u7f29\u8868\u7a7a\u95f4 ALTER TABLESPCE TS_AJ_DATA COALESCE; \u589e\u52a0\u8868\u7a7a\u95f4\u5927\u5c0f SELECT T.TABLESPACE_NAME, T.FILE_NAME, T.BYTES / 1024 / 1024 / 1024 FROM DBA_DATA_FILES T WHERE T.TABLESPACE_NAME = 'TS_AJ_DATA'; ALTER TABLESPACE TS_AJ_DATA ADD DATAFILE '/DATA/TS_AJ_DATA05_10G.DBF' SIZE 10000M AUTOEXTEND OFF; \u68c0\u67e5\u4e0d\u8d77\u4f5c\u7528\u7684\u7ea6\u675f SELECT OWNER, CONSTRAINT_NAME, TABLE_NAME, CONSTRAINT_TYPE, STATUS FROM DBA_CONSTRAINTS WHERE STATUS = 'DISABLE'; \u68c0\u67e5\u53d1\u751f\u574f\u5757\u7684\u6570\u636e\u5e93\u5bf9\u8c61 SELECT TABLESPACE_NAME, SEGMENT_TYPE, OWNER, SEGMENT_NAME FROM DBA_EXTENTS WHERE FILE_ID = AND BETWEEN BLOCK_ID AND BLOCK_ID BLOCKS - 1; \u68c0\u67e5\u65e0\u6548\u7684\u6570\u636e\u5e93\u5bf9\u8c61 SELECT OWNER,OBJECT_NAME,OBJECT_TYPE FROM DBA_OBJECTS WHERE STATUS ='INVALID'; \u67e5\u770b\u8bed\u53e5\u6267\u884c\u8fdb\u5ea6 SELECT SE.SID, OPNAME, TRUNC(SOFAR / TOTALWORK * 100, 2) || '%' AS PCT_WORK, ELAPSED_SECONDS ELAPSED, ROUND(ELAPSED_SECONDS * (TOTALWORK - SOFAR) / SOFAR) REMAIN_TIME, SQL_TEXT FROM V$SESSION_LONGOPS SL, V$SQLAREA SA, V$SESSION SE WHERE SL.SQL_HASH_VALUE = SA.HASH_VALUE AND SL.SID = SE.SID AND SOFAR != TOTALWORK ORDER BY START_TIME; \u68c0\u67e5\u788e\u7247\u7a0b\u5ea6\u9ad8\u7684\u8868 SELECT SEGMENT_NAME TABLE_NAME, COUNT(*) EXTENTS FROM DBA_SEGMENTS WHERE OWNER NOT IN ('SYS', 'SYSTEM') GROUP BY SEGMENT_NAME HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM DBA_SEGMENTS GROUP BY SEGMENT_NAME); \u68c0\u67e5\u8868\u7a7a\u95f4\u7684 I/O \u6bd4\u4f8b SELECT DF.TABLESPACE_NAME NAME, DF.FILE_NAME FILE , F.PHYRDS PYR, F.PHYBLKRD PBR, F.PHYWRTS PYW, F.PHYBLKWRT PBW FROM V$FILESTAT F, DBA_DATA_FILES DF WHERE F.FILE# = DF.FILE_ID ORDER BY DF.TABLESPACE_NAME; \u68c0\u67e5\u788e\u7247\u7a0b\u5ea6\u9ad8\u7684\u8868 SELECT segment_name table_name, COUNT(*) extents FROM dba_segments WHERE owner NOT IN ('SYS', 'SYSTEM') GROUP BY segment_name HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM dba_segments GROUP BY segment_name); \u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u7684 I/O \u6bd4\u4f8b SELECT SUBSTR(A.FILE#, 1, 2) # , SUBSTR(A.NAME, 1, 30) NAME , A.STATUS, A.BYTES, B.PHYRDS, B.PHYWRTS FROM V$DATAFILE A, V$FILESTAT B WHERE A.FILE# = B.FILE#; \u68c0\u67e5\u6d88\u8017CPU\u6700\u9ad8\u7684\u8fdb\u7a0b SELECT P.PID PID, S.SID SID, P.SPID SPID, S.USERNAME USERNAME, S.OSUSER OSNAME, P.SERIAL# S_#, P.TERMINAL, P.PROGRAM PROGRAM, P.BACKGROUND, S.STATUS, RTRIM(SUBSTR(A.SQL_TEXT, 1, 80)) SQLFROM FROM V$PROCESS P, V$SESSION S, V$SQLAREA A WHERE P.ADDR = S.PADDR AND S.SQL_ADDRESS = A.ADDRESS( ) AND P.SERIAL# '1'; \u68c0\u67e5\u8fd0\u884c\u5f88\u4e45\u7684SQL SELECT USERNAME, SID, OPNAME, ROUND(SOFAR * 100 / TOTALWORK, 0) || '%' AS PROGRESS, TIME_REMAINING, SQL_TEXT FROM V$SESSION_LONGOPS, V$SQL WHERE TIME_REMAINING 0 AND SQL_ADDRESS = ADDRESS AND SQL_HASH_VALUE = HASH_VALUE; \u7b49\u5f85\u65f6\u95f4\u6700\u591a\u76845\u4e2a\u7cfb\u7edf\u7b49\u5f85\u4e8b\u4ef6\u7684\u83b7\u53d6 SELECT * FROM (SELECT * FROM V$SYSTEM_EVENT WHERE EVENT NOT LIKE 'SQL%' ORDER BY TOTAL_WAITS DESC) WHERE ROWNUM 6; \u67e5\u627e\u524d\u5341\u6761\u6027\u80fd\u5dee\u7684SQL SELECT * FROM (SELECT PARSING_USER_ID EXECUTIONS, SORTS, COMMAND_TYPE, DISK_READS, SQL_TEXT FROM V$SQLAREA ORDER BY DISK_READS DESC) WHERE ROWNUM 11; \u68c0\u67e5\u6b7b\u9501 SELECT bs.username Blocking User , bs.username DB User , ws.username Waiting User , bs.SID SID , ws.SID WSID , bs.serial# Serial# , bs.sql_address address , bs.sql_hash_value Sql hash , bs.program Blocking App , ws.program Waiting App , bs.machine Blocking Machine , ws.machine Waiting Machine , bs.osuser Blocking OS User , ws.osuser Waiting OS User , bs.serial# Serial# , ws.serial# WSerial# , DECODE (wk.TYPE, 'MR', 'Media Recovery', 'RT', 'Redo Thread', 'UN', 'USER Name', 'TX', 'Transaction', 'TM', 'DML', 'UL', 'PL/SQL USER LOCK', 'DX', 'Distributed Xaction', 'CF', 'Control FILE', 'IS', 'Instance State', 'FS', 'FILE SET', 'IR', 'Instance Recovery', 'ST', 'Disk SPACE Transaction', 'TS', 'Temp Segment', 'IV', 'Library Cache Invalidation', 'LS', 'LOG START OR Switch', 'RW', 'ROW Wait', 'SQ', 'Sequence Number', 'TE', 'Extend TABLE', 'TT', 'Temp TABLE', wk.TYPE ) lock_type, DECODE (hk.lmode, 0, 'None', 1, 'NULL', 2, 'ROW-S (SS)', 3, 'ROW-X (SX)', 4, 'SHARE', 5, 'S/ROW-X (SSX)', 6, 'EXCLUSIVE', TO_CHAR (hk.lmode) ) mode_held, DECODE (wk.request, 0, 'None', 1, 'NULL', 2, 'ROW-S (SS)', 3, 'ROW-X (SX)', 4, 'SHARE', 5, 'S/ROW-X (SSX)', 6, 'EXCLUSIVE', TO_CHAR (wk.request) ) mode_requested, TO_CHAR (hk.id1) lock_id1, TO_CHAR (hk.id2) lock_id2, DECODE (hk.BLOCK,0, 'NOT Blocking', /* Not blocking any other processes */ 1, 'Blocking', /* This lock blocks other processes */ 2, 'Global', /* This lock is global, so we can't tell */ TO_CHAR (hk.BLOCK) ) blocking_others FROM v$lock hk, v$session bs, v$lock wk, v$session ws WHERE hk.BLOCK = 1 AND hk.lmode != 0 AND hk.lmode != 1 AND wk.request != 0 AND wk.TYPE( ) = hk.TYPE AND wk.id1( ) = hk.id1 AND wk.id2( ) = hk.id2 AND hk.SID = bs.SID( ) AND wk.SID = ws.SID( ) AND (bs.username IS NOT NULL) AND (bs.username 'SYSTEM') AND (bs.username 'SYS') ORDER BY 1; \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684JOB SELECT * FROM DBA_JOBS_RUNNING; \u68c0\u67e5\u6570\u636e\u5e93JOB\u7684\u5b8c\u6210\u60c5\u51b5 SELECT JOB, LOG_USER, LAST_DATE, NEXT_DATE, WHAT, FAILURES FROM DBA_JOBS; \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684JOB\u5bf9\u5e94\u7684SID\u3001SERIAL#\u3001SPID SELECT A.JOB, B.SID, B.SERIAL#, C.SPID FROM DBA_JOBS_RUNNING A, V$SESSION B, V$PROCESS C WHERE A.SID = B.SID AND B.PADDR = C.ADDR AND JOB = '21'; \u901a\u8fc7SID\u67e5\u8be2 SERIAL#\u3001SPID SELECT B.SID, B.SERIAL#, C.SPID FROM V$SESSION B, V$PROCESS C WHERE B.SID = '554' AND B.PADDR = C.ADDR; \u505c\u6b62\u4f1a\u8bdd --SID:554 SERIAL#:1134 SPID:23242 ORACLE\u7ea7\u522b ALTER SYSTEM KILL SESSION '554,1134'; \u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b kill -9 23242","title":"ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#oracle","text":"","title":"ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c(\u6700\u5168+\u6700\u5b9e\u7528)"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_1","text":"SELECT * FROM V$VERSION;","title":"\u67e5\u770b\u6570\u636e\u5e93\u7248\u672c"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_2","text":"SELECT USERENV('LANGUAGE') FROM DUAL;","title":"\u67e5\u770b\u6570\u636e\u5e93\u8bed\u8a00\u73af\u5883"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#oracle_1","text":"SELECT INSTANCE_NAME,HOST_NAME,STARTUP_TIME,STATUS,DATABASE_STATUS FROM V$INSTANCE;","title":"\u67e5\u770bORACLE\u5b9e\u4f8b\u72b6\u6001"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#oracle_2","text":"lsnrctl status","title":"\u67e5\u770bORACLE\u76d1\u542c\u72b6\u6001"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_3","text":"SELECT NAME,LOG_MODE,OPEN_MODE FROM V$DATABASE;","title":"\u67e5\u770b\u6570\u636e\u5e93\u5f52\u6863\u6a21\u5f0f"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_4","text":"SELECT OBJECT_NAME,ORIGINAL_NAME,TYPE FROM RECYCLEBIN;","title":"\u67e5\u770b\u56de\u6536\u7ad9\u4e2d\u5bf9\u8c61"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_5","text":"PURGE RECYCLEBIN;","title":"\u6e05\u7a7a\u56de\u6536\u7ad9\u4e2d\u5bf9\u8c61"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_6","text":"FLASHBACK TABLE BIN$GOZUQZ6GS222JZDCCTFLHQ==$0 TO BEFORE DROP RENAME TO TEST;","title":"\u8fd8\u539f\u56de\u6536\u7ad9\u4e2d\u7684\u5bf9\u8c61"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_7","text":"FLASHBACK TABLE AAA TO BEFORE DROP;","title":"\u95ea\u56de\u8bef\u5220\u9664\u7684\u8868"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_8","text":"ALTER TABLE TEST ENABLE ROW MOVEMENT; FLASHBACK TABLE TEST TO_TIMESTAMP('2009-10-15 21:17:47','YYYY-MM-DD HH24:MI:SS'); \u200b``` \u67e5\u770b\u5f53\u524d\u4f1a\u8bdd \u200b```mysql SELECT SID,SERIAL#,USERNAME,PROGRAM,MACHINE,STATUS FROM V$SESSION;","title":"\u95ea\u56de\u8868\u4e2d\u8bb0\u5f55\u5230\u67d0\u4e00\u65f6\u95f4\u70b9"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#ddl","text":"SELECT * FROM DBA_DDL_LOCKS WHERE OWNER = 'FWYANG';","title":"\u67e5\u770bDDL\u9501"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_9","text":"SELECT SID, A.USERNAME, EVENT, WAIT_CLASS, T1.SQL_TEXT FROM V$SESSION A, V$SQLAREA T1 WHERE WAIT_CLASS 'Idle' AND A.SQL_ID = T1.SQL_ID;","title":"\u68c0\u67e5\u7b49\u5f85\u4e8b\u4ef6"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_10","text":"SELECT FILE_NAME,STATUS FROM DBA_DATA_FILES;","title":"\u68c0\u67e5\u6570\u636e\u6587\u4ef6\u72b6\u6001"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_11","text":"SELECT UPPER(F.TABLESPACE_NAME) \u8868\u7a7a\u95f4\u540d , D.TOT_GROOTTE_MB \u8868\u7a7a\u95f4\u5927\u5c0f(M) , D.TOT_GROOTTE_MB - F.TOTAL_BYTES \u5df2\u4f7f\u7528\u7a7a\u95f4(M) , TO_CHAR(ROUND((D.TOT_GROOTTE_MB - F.TOTAL_BYTES) / D.TOT_GROOTTE_MB * 100,2),'990.99') \u4f7f\u7528\u6bd4 , F.TOTAL_BYTES \u7a7a\u95f2\u7a7a\u95f4(M) , F.MAX_BYTES \u6700\u5927\u5757(M) FROM (SELECT TABLESPACE_NAME, ROUND(SUM(BYTES) / (1024 * 1024), 2) TOTAL_BYTES, ROUND(MAX(BYTES) / (1024 * 1024), 2) MAX_BYTES FROM SYS.DBA_FREE_SPACE GROUP BY TABLESPACE_NAME) F, (SELECT DD.TABLESPACE_NAME, ROUND(SUM(DD.BYTES) / (10http://www.mianfeiwendang.com/doc/dba9a779825b68483416ac9624 * 1024), 2) TOT_GROOTTE_MB FROM SYS.DBA_DATA_FILES DD GROUP BY DD.TABLESPACE_NAME) D WHERE D.TABLESPACE_NAME = F.TABLESPACE_NAME ORDER BY 4 DESC;","title":"\u68c0\u67e5\u8868\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_12","text":"ALTER TABLESPCE TS_AJ_DATA COALESCE;","title":"\u6536\u7f29\u8868\u7a7a\u95f4"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_13","text":"SELECT T.TABLESPACE_NAME, T.FILE_NAME, T.BYTES / 1024 / 1024 / 1024 FROM DBA_DATA_FILES T WHERE T.TABLESPACE_NAME = 'TS_AJ_DATA'; ALTER TABLESPACE TS_AJ_DATA ADD DATAFILE '/DATA/TS_AJ_DATA05_10G.DBF' SIZE 10000M AUTOEXTEND OFF;","title":"\u589e\u52a0\u8868\u7a7a\u95f4\u5927\u5c0f"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_14","text":"SELECT OWNER, CONSTRAINT_NAME, TABLE_NAME, CONSTRAINT_TYPE, STATUS FROM DBA_CONSTRAINTS WHERE STATUS = 'DISABLE';","title":"\u68c0\u67e5\u4e0d\u8d77\u4f5c\u7528\u7684\u7ea6\u675f"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_15","text":"SELECT TABLESPACE_NAME, SEGMENT_TYPE, OWNER, SEGMENT_NAME FROM DBA_EXTENTS WHERE FILE_ID = AND BETWEEN BLOCK_ID AND BLOCK_ID BLOCKS - 1;","title":"\u68c0\u67e5\u53d1\u751f\u574f\u5757\u7684\u6570\u636e\u5e93\u5bf9\u8c61"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_16","text":"SELECT OWNER,OBJECT_NAME,OBJECT_TYPE FROM DBA_OBJECTS WHERE STATUS ='INVALID';","title":"\u68c0\u67e5\u65e0\u6548\u7684\u6570\u636e\u5e93\u5bf9\u8c61"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_17","text":"SELECT SE.SID, OPNAME, TRUNC(SOFAR / TOTALWORK * 100, 2) || '%' AS PCT_WORK, ELAPSED_SECONDS ELAPSED, ROUND(ELAPSED_SECONDS * (TOTALWORK - SOFAR) / SOFAR) REMAIN_TIME, SQL_TEXT FROM V$SESSION_LONGOPS SL, V$SQLAREA SA, V$SESSION SE WHERE SL.SQL_HASH_VALUE = SA.HASH_VALUE AND SL.SID = SE.SID AND SOFAR != TOTALWORK ORDER BY START_TIME;","title":"\u67e5\u770b\u8bed\u53e5\u6267\u884c\u8fdb\u5ea6"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_18","text":"SELECT SEGMENT_NAME TABLE_NAME, COUNT(*) EXTENTS FROM DBA_SEGMENTS WHERE OWNER NOT IN ('SYS', 'SYSTEM') GROUP BY SEGMENT_NAME HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM DBA_SEGMENTS GROUP BY SEGMENT_NAME);","title":"\u68c0\u67e5\u788e\u7247\u7a0b\u5ea6\u9ad8\u7684\u8868"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#io","text":"SELECT DF.TABLESPACE_NAME NAME, DF.FILE_NAME FILE , F.PHYRDS PYR, F.PHYBLKRD PBR, F.PHYWRTS PYW, F.PHYBLKWRT PBW FROM V$FILESTAT F, DBA_DATA_FILES DF WHERE F.FILE# = DF.FILE_ID ORDER BY DF.TABLESPACE_NAME;","title":"\u68c0\u67e5\u8868\u7a7a\u95f4\u7684 I/O \u6bd4\u4f8b"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_19","text":"SELECT segment_name table_name, COUNT(*) extents FROM dba_segments WHERE owner NOT IN ('SYS', 'SYSTEM') GROUP BY segment_name HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM dba_segments GROUP BY segment_name);","title":"\u68c0\u67e5\u788e\u7247\u7a0b\u5ea6\u9ad8\u7684\u8868"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#io_1","text":"SELECT SUBSTR(A.FILE#, 1, 2) # , SUBSTR(A.NAME, 1, 30) NAME , A.STATUS, A.BYTES, B.PHYRDS, B.PHYWRTS FROM V$DATAFILE A, V$FILESTAT B WHERE A.FILE# = B.FILE#;","title":"\u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u7684 I/O \u6bd4\u4f8b"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#cpu","text":"SELECT P.PID PID, S.SID SID, P.SPID SPID, S.USERNAME USERNAME, S.OSUSER OSNAME, P.SERIAL# S_#, P.TERMINAL, P.PROGRAM PROGRAM, P.BACKGROUND, S.STATUS, RTRIM(SUBSTR(A.SQL_TEXT, 1, 80)) SQLFROM FROM V$PROCESS P, V$SESSION S, V$SQLAREA A WHERE P.ADDR = S.PADDR AND S.SQL_ADDRESS = A.ADDRESS( ) AND P.SERIAL# '1';","title":"\u68c0\u67e5\u6d88\u8017CPU\u6700\u9ad8\u7684\u8fdb\u7a0b"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#sql","text":"SELECT USERNAME, SID, OPNAME, ROUND(SOFAR * 100 / TOTALWORK, 0) || '%' AS PROGRESS, TIME_REMAINING, SQL_TEXT FROM V$SESSION_LONGOPS, V$SQL WHERE TIME_REMAINING 0 AND SQL_ADDRESS = ADDRESS AND SQL_HASH_VALUE = HASH_VALUE;","title":"\u68c0\u67e5\u8fd0\u884c\u5f88\u4e45\u7684SQL"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#5","text":"SELECT * FROM (SELECT * FROM V$SYSTEM_EVENT WHERE EVENT NOT LIKE 'SQL%' ORDER BY TOTAL_WAITS DESC) WHERE ROWNUM 6;","title":"\u7b49\u5f85\u65f6\u95f4\u6700\u591a\u76845\u4e2a\u7cfb\u7edf\u7b49\u5f85\u4e8b\u4ef6\u7684\u83b7\u53d6"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#sql_1","text":"SELECT * FROM (SELECT PARSING_USER_ID EXECUTIONS, SORTS, COMMAND_TYPE, DISK_READS, SQL_TEXT FROM V$SQLAREA ORDER BY DISK_READS DESC) WHERE ROWNUM 11;","title":"\u67e5\u627e\u524d\u5341\u6761\u6027\u80fd\u5dee\u7684SQL"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_20","text":"SELECT bs.username Blocking User , bs.username DB User , ws.username Waiting User , bs.SID SID , ws.SID WSID , bs.serial# Serial# , bs.sql_address address , bs.sql_hash_value Sql hash , bs.program Blocking App , ws.program Waiting App , bs.machine Blocking Machine , ws.machine Waiting Machine , bs.osuser Blocking OS User , ws.osuser Waiting OS User , bs.serial# Serial# , ws.serial# WSerial# , DECODE (wk.TYPE, 'MR', 'Media Recovery', 'RT', 'Redo Thread', 'UN', 'USER Name', 'TX', 'Transaction', 'TM', 'DML', 'UL', 'PL/SQL USER LOCK', 'DX', 'Distributed Xaction', 'CF', 'Control FILE', 'IS', 'Instance State', 'FS', 'FILE SET', 'IR', 'Instance Recovery', 'ST', 'Disk SPACE Transaction', 'TS', 'Temp Segment', 'IV', 'Library Cache Invalidation', 'LS', 'LOG START OR Switch', 'RW', 'ROW Wait', 'SQ', 'Sequence Number', 'TE', 'Extend TABLE', 'TT', 'Temp TABLE', wk.TYPE ) lock_type, DECODE (hk.lmode, 0, 'None', 1, 'NULL', 2, 'ROW-S (SS)', 3, 'ROW-X (SX)', 4, 'SHARE', 5, 'S/ROW-X (SSX)', 6, 'EXCLUSIVE', TO_CHAR (hk.lmode) ) mode_held, DECODE (wk.request, 0, 'None', 1, 'NULL', 2, 'ROW-S (SS)', 3, 'ROW-X (SX)', 4, 'SHARE', 5, 'S/ROW-X (SSX)', 6, 'EXCLUSIVE', TO_CHAR (wk.request) ) mode_requested, TO_CHAR (hk.id1) lock_id1, TO_CHAR (hk.id2) lock_id2, DECODE (hk.BLOCK,0, 'NOT Blocking', /* Not blocking any other processes */ 1, 'Blocking', /* This lock blocks other processes */ 2, 'Global', /* This lock is global, so we can't tell */ TO_CHAR (hk.BLOCK) ) blocking_others FROM v$lock hk, v$session bs, v$lock wk, v$session ws WHERE hk.BLOCK = 1 AND hk.lmode != 0 AND hk.lmode != 1 AND wk.request != 0 AND wk.TYPE( ) = hk.TYPE AND wk.id1( ) = hk.id1 AND wk.id2( ) = hk.id2 AND hk.SID = bs.SID( ) AND wk.SID = ws.SID( ) AND (bs.username IS NOT NULL) AND (bs.username 'SYSTEM') AND (bs.username 'SYS') ORDER BY 1;","title":"\u68c0\u67e5\u6b7b\u9501"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#job","text":"SELECT * FROM DBA_JOBS_RUNNING;","title":"\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684JOB"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#job_1","text":"SELECT JOB, LOG_USER, LAST_DATE, NEXT_DATE, WHAT, FAILURES FROM DBA_JOBS;","title":"\u68c0\u67e5\u6570\u636e\u5e93JOB\u7684\u5b8c\u6210\u60c5\u51b5"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#jobsidserialspid","text":"SELECT A.JOB, B.SID, B.SERIAL#, C.SPID FROM DBA_JOBS_RUNNING A, V$SESSION B, V$PROCESS C WHERE A.SID = B.SID AND B.PADDR = C.ADDR AND JOB = '21';","title":"\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684JOB\u5bf9\u5e94\u7684SID\u3001SERIAL#\u3001SPID"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#sid","text":"SERIAL#\u3001SPID SELECT B.SID, B.SERIAL#, C.SPID FROM V$SESSION B, V$PROCESS C WHERE B.SID = '554' AND B.PADDR = C.ADDR;","title":"\u901a\u8fc7SID\u67e5\u8be2"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_21","text":"--SID:554 SERIAL#:1134 SPID:23242 ORACLE\u7ea7\u522b ALTER SYSTEM KILL SESSION '554,1134';","title":"\u505c\u6b62\u4f1a\u8bdd"},{"location":"Database/Oracle/ORACLE\u6570\u636e\u5e93\u65e5\u5e38\u7ef4\u62a4\u624b\u518c/#_22","text":"kill -9 23242","title":"\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b"},{"location":"Database/Oracle/Oracle/","text":"Hi,World!!! I'm Oracle!","title":"Oracle"},{"location":"Database/Oracle/Rman/","text":"Recovery Management (RMAN)","title":"Rman"},{"location":"Database/Oracle/ADG/ADG_Principle/","text":"Oracle Active Data Guage","title":"ADG Principle"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/","text":"\u80cc\u666f1 \u5206\u6790 \u89e3\u51b3 \u80cc\u666f2 \u4fee\u6539\u5feb\u7167\u7684\u4fdd\u7559\u65f6\u957f\u62a5\u9519 \u539f\u56e0\u5206\u6790 \u89e3\u51b3\u65b9\u6848 \u603b\u7ed3 \u5feb\u7167\u548c\u57fa\u7ebf snapshot\u76f8\u5173\u64cd\u4f5c baseline\u76f8\u5173 DBMS_WORKLOAD_REPOSITORY CREATE_SNAPSHOT The Automatic Workload Repository \u80cc\u666f1 \u751f\u6210\u5feb\u7167\u65f6\u62a5\u9519 exec dbms_workload_repository.create_snapshot(); SYS@RACDB_1 exec dbms_workload_repository.create_snapshot(); BEGIN dbms_workload_repository.create_snapshot(); END; * ERROR at line 1: ORA-13516: AWR Operation failed: INTERVAL Setting is ZERO ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 99 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 122 ORA-06512: at line 1 SYS@RACDB_1 !ps -ef |grep mmon |grep -v grep grid 3079 1 0 Nov10 ? 00:00:01 asm_mmon_+ASM1 oracle 3716 1 0 Nov10 ? 00:00:05 ora_mmon_RACDB_1 \u5206\u6790 \u63d0\u4f9binterval\uff08\u5feb\u7167\u7684\u95f4\u9694\u5206\u949f\u65f6\u957f\uff09\u53c2\u6570\u7684\u503c\u4e3a0\u5bfc\u81f4\u3002 \u5b83\u5f71\u54cd\u5feb\u7167\u751f\u6210\u7684\u9891\u7387 \u4e0e\u4e4b\u76f8\u968f\u7684\u53c2\u6570retention\uff08\u5feb\u7167\u4fdd\u7559\u7684\u5206\u949f\u65f6\u957f\uff09\uff0c\u5b83\u7684\u5927\u5c0f\u5f71\u54cd\u7740\u57fa\u7ebf\u7684\u7a7a\u95f4\u5927\u5c0f\uff08baseline_window_size),\u524d\u8005\u662f\u540e\u8005\u7684\u4e0a\u9650\u3002 \u67e5\u770b\u539f\u6709\u914d\u7f6e select * from dba_hist_wr_control; DBID SNAP_INTERVAL RETENTION TOPNSQL ---------- ---------------------------------------- -------------------------------------------------- ---------- 1029318903 +00000 00:30:00.0 +00050 00:00:00.0 DEFAULT \u89e3\u51b3 \u8bbe\u7f6e\u8be5\u53c2\u6570\u503c\u4e3a\u5927\u4e8e0 \u7684\u503c \u5355\u4f4d\u4e3a\u5206\u949f\u3002 \u7b2c\u4e8c\u5217SNAP_INTERVAL\u5c31\u662f\u65f6\u95f4\u95f4\u9694 RETENTION\u662f\u4fdd\u7559\u65f6\u95f4 \u4fee\u6539\u65f6\u95f4\u95f4\u9694\u548c\u4fdd\u7559\u65f6\u95f4 exec dbms_workload_repository.modify_snapshot_settings(interval= 30); - modify_snapshot_settings\u9ed8\u8ba4\u53c2\u6570\u4f4d\u7f6e\u4e3a\u4fdd\u7559\u65f6\u957f\u53c2\u6570\uff0c\u5feb\u7167\u95f4\u9694\u53c2\u6570 \u80cc\u666f2 \u4fee\u6539\u5feb\u7167\u7684\u4fdd\u7559\u65f6\u957f\u62a5\u9519 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); BEGIN dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); END; * ERROR at line 1: ORA-13541: system moving window baseline size (691200) greater than retention (604800) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1 \u539f\u56e0\u5206\u6790 \u67e5\u770b\u62a5\u9519\u7684\u542b\u4e49\uff1a shell oerr ora 13541 13541, 00000, \"system moving window baseline size (%s) greater than retention (%s)\" // *Cause: The system moving window baseline size must be less than the // retention setting. The specified window size or retention // violate this. // *Action: Check the moving window baseline size or retention. system moving window baseline\u662f\u6307\u7cfb\u7edf\u7684\u57fa\u7ebf\u65f6\u957f\u5927\u5c0f\uff0c\u5f71\u54cd\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\uff1f#todolist \u67e5\u770bmoving_window_size\u5927\u5c0f select dbid,baseline_name,baseline_type,moving_window_size from dba_hist_baseline; SYS@RACDB_1 select dbid,baseline_name ,baseline_type,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ------------------ ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 8 \u79fb\u52a8\u7a97\u53e3\u5927\u5c0f = \u5feb\u7167\u7684\u4fdd\u7559\u65f6\u957f\u3002\u7531\u7b2c2\u9879\u7ed3\u679c\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u7684moving_window_size=8\uff0c\u5927\u4e8e\u8bbe\u7f6e\u76847\u5929\u503c\u3002\u6240\u4ee5\u62a5\u9519\u4e86\u3002 \u89e3\u51b3\u65b9\u6848 \u8bbe\u7f6ebaseline\u7684moving_sindow_size\u4e3a =7 \u8bbe\u7f6eretention\u4e3a7,\u5373\u53ef\u3002 \u603b\u7ed3 \u5feb\u7167\u548c\u57fa\u7ebf retention \u4e3amoving_window_size\u7684\u4e0a\u9650\u503c\uff0cmoving_window_size\u4e3aretention\u7684\u4e0b\u9650\u503c\u3002 \u5f53\u8bbe\u7f6e\u65f6\u6709\u51b2\u7a81\u65f6\uff0c\u9996\u5148\u4fee\u6539\u4e0a\u4e0b\u9650\u503c\uff0c\u518d\u4fee\u6539\u522b\u4e00\u4e2a\u503c\u3002 snapshot\u76f8\u5173\u64cd\u4f5c https://oracle-base.com/articles/10g/automatic-workload-repository-10g \u521b\u5efa\uff1a exec dbms_workload_repository.create_snapshot(); \u67e5\u770b\uff1a select snap_id,dbid,BEGIN_INTERVAL_TIME from dba_hist_snapshot; \u5220\u9664\uff1aDBMS_WORKLOAD_REPOSITORY\u5305\u542b\u6709\u8fc7\u7a0bDROP_SNAPSHOT_RANGE \u4e09\u53c2\u6570\uff1alow_snap_id= ,high_snap_id= , dbid= \u901a\u8fc7\u6307\u5b9asnap_id\u7684\u8303\u56f4\u7684\u65b9\u5f0f\u4e00\u6b21\u5220\u9664\u591a\u4e2aSnapshot ```mysql select count(0) from dba_hist_snapshot where snap_id between 6770 and 6774; select max(snap_id) from dba_hist_snapshot; select dbid from v$database; exec dbms_workload_repository.drop_snapshot_range(low_snap_id = 6770,high_snap_id = 6774,dbid = 4059638244); exec dbms_workload_repository.drop_snapshot_range('155','165','1029318903'); ``` baseline\u76f8\u5173 \u751f\u6210AWR\uff1a @ $ORACLE_HOME/rdbms/admin/awrrpti.sql DBMS_WORKLOAD_REPOSITORY CREATE_SNAPSHOT The Automatic Workload Repository SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); BEGIN dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); END; * ERROR at line 1: ORA-13541: system moving window baseline size (691200) greater than retention (604800) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1 SYS@RACDB_1 !oerr ora 13541 13541, 00000, system moving window baseline size (%s) greater than retention (%s) // *Cause: The system moving window baseline size must be less than the // retention setting. The specified window size or retention // violate this. // *Action: Check the moving window baseline size or retention. SYS@RACDB_1 select dbid,baseline_name ,baseline_type,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ---------------------------------------------------------------- ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 8 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*8); PL/SQL procedure successfully completed. SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*1); BEGIN dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*1); END; * ERROR at line 1: ORA-13541: system moving window baseline size (691200) greater than retention (86400) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*11); PL/SQL procedure successfully completed. SYS@RACDB_1 select 691200/60/60/24 day1,86400/60/60/24 day2 from dual; DAY1 DAY2 ---------- ---------- 8 1 SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(2); PL/SQL procedure successfully completed. SYS@RACDB_1 select dbid,baseline_name,baseline_type ,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ---------------------------------------------------------------- ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 2 SYS@RACDB_1 select * from dba_hist_wr_control; DBID SNAP_INTERVAL RETENTION TOPNSQL ---------- ------------------------------ ------------------------------ ---------- 1029318903 +00000 01:00:00.0 +00011 00:00:00.0 DEFAULT SYS@RACDB_1 exec dbms_workload_repository.create_snapshot(); PL/SQL procedure successfully completed. SYS@RACDB_1 ---2\u5929\u65f6\u95f4\u592a\u77ed\uff0c\u4fee\u6539\u4e3a12\u5929\uff0c\u6bd4\u5feb\u7167\u591a\u4e00\u5929\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\u5462\uff1f SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_settings(12); BEGIN dbms_workload_repository.modify_baseline_settings(12); END; * ERROR at line 1: ORA-06550: line 1, column 32: PLS-00302: component 'MODIFY_BASELINE_SETTINGS' must be declared ORA-06550: line 1, column 7: PL/SQL: Statement ignored SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(12); BEGIN dbms_workload_repository.modify_baseline_window_size(12); END; * ERROR at line 1: ORA-13541: system moving window baseline size (1036800) greater than retention (950400) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 686 ORA-06512: at line 1 SYS@RACDB_1 -- \u6240\u4ee5\u8981\u5148\u4fee\u6539\u5feb\u7167\u7684\u4fdd\u7559\u65f6\u95f4\u624d\u80fd\u4fee\u6539\u57fa\u7ebf\u7684\u7a97\u53e3\u5927\u5c0f SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings('60','15*24*60') BEGIN dbms_workload_repository.modify_snapshot_settings('60','15*24*60'); END; * ERROR at line 1: ORA-06502: PL/SQL: numeric or value error: character to number conversion error ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings('60',15*24*60); BEGIN dbms_workload_repository.modify_snapshot_settings('60',15*24*60); END; * ERROR at line 1: ORA-13510: invalid RETENTION 60, must be in the range (1440, 52560000) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(15*24*60,60); PL/SQL procedure successfully completed. SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(12); PL/SQL procedure successfully completed. SYS@RACDB_1 select * from dba_hist_wr_control; DBID SNAP_INTERVAL RETENTION TOPNSQL ---------- ------------------------------ ------------------------------ ---------- 1029318903 +00000 01:00:00.0 +00015 00:00:00.0 DEFAULT SYS@RACDB_1 select *from dba_hist_baseline; DBID BASELINE_ID BASELINE_NAME BASELINE_TYPE START_SNAP_ID START_SNAP_TIME END_SNAP_ID END_SNAP_TIME MOVING_WINDOW_SIZE CREATION_ EXPIRATION TEMPLATE_NAME LAST_TIME ---------- ----------- ---------------------------------------------------------------- ------------- ------------- --------------------------------------------------------------------------- ----------- --------------------------------------------------------------------------- ------------------ --------- ---------- ---------------------------------------------------------------- --------- 1029318903 0 SYSTEM_MOVING_WINDOW MOVING_WINDOW 166 06-NOV-20 11.00.55.189 PM 180 11-NOV-20 05.00.07.362 PM 12 06-FEB-20 SYS@RACDB_1 select dbid,baseline_name,baseline_type,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ---------------------------------------------------------------- ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 12 SYS@RACDB_1 -- \u8bbe\u7f6e\u6700\u5927\u503c\u7684\u57fa\u7ebf\u7a7a\u95f4\u5927\u5c0f SYS@RACDB_1 -- set retention = 13*7*60*24 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(13*7*60*24,60); PL/SQL procedure successfully completed. SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(92); BEGIN dbms_workload_repository.modify_baseline_window_size(92); END; * ERROR at line 1: ORA-13539: invalid input for modify baseline window size (window_size, 92) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 686 ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(91); PL/SQL procedure successfully completed.","title":"Awr\u624b\u5de5\u5feb\u7167"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#1","text":"\u751f\u6210\u5feb\u7167\u65f6\u62a5\u9519 exec dbms_workload_repository.create_snapshot(); SYS@RACDB_1 exec dbms_workload_repository.create_snapshot(); BEGIN dbms_workload_repository.create_snapshot(); END; * ERROR at line 1: ORA-13516: AWR Operation failed: INTERVAL Setting is ZERO ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 99 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 122 ORA-06512: at line 1 SYS@RACDB_1 !ps -ef |grep mmon |grep -v grep grid 3079 1 0 Nov10 ? 00:00:01 asm_mmon_+ASM1 oracle 3716 1 0 Nov10 ? 00:00:05 ora_mmon_RACDB_1","title":"\u80cc\u666f1"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#_1","text":"\u63d0\u4f9binterval\uff08\u5feb\u7167\u7684\u95f4\u9694\u5206\u949f\u65f6\u957f\uff09\u53c2\u6570\u7684\u503c\u4e3a0\u5bfc\u81f4\u3002 \u5b83\u5f71\u54cd\u5feb\u7167\u751f\u6210\u7684\u9891\u7387 \u4e0e\u4e4b\u76f8\u968f\u7684\u53c2\u6570retention\uff08\u5feb\u7167\u4fdd\u7559\u7684\u5206\u949f\u65f6\u957f\uff09\uff0c\u5b83\u7684\u5927\u5c0f\u5f71\u54cd\u7740\u57fa\u7ebf\u7684\u7a7a\u95f4\u5927\u5c0f\uff08baseline_window_size),\u524d\u8005\u662f\u540e\u8005\u7684\u4e0a\u9650\u3002 \u67e5\u770b\u539f\u6709\u914d\u7f6e select * from dba_hist_wr_control; DBID SNAP_INTERVAL RETENTION TOPNSQL ---------- ---------------------------------------- -------------------------------------------------- ---------- 1029318903 +00000 00:30:00.0 +00050 00:00:00.0 DEFAULT","title":"\u5206\u6790"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#_2","text":"\u8bbe\u7f6e\u8be5\u53c2\u6570\u503c\u4e3a\u5927\u4e8e0 \u7684\u503c \u5355\u4f4d\u4e3a\u5206\u949f\u3002 \u7b2c\u4e8c\u5217SNAP_INTERVAL\u5c31\u662f\u65f6\u95f4\u95f4\u9694 RETENTION\u662f\u4fdd\u7559\u65f6\u95f4 \u4fee\u6539\u65f6\u95f4\u95f4\u9694\u548c\u4fdd\u7559\u65f6\u95f4 exec dbms_workload_repository.modify_snapshot_settings(interval= 30); - modify_snapshot_settings\u9ed8\u8ba4\u53c2\u6570\u4f4d\u7f6e\u4e3a\u4fdd\u7559\u65f6\u957f\u53c2\u6570\uff0c\u5feb\u7167\u95f4\u9694\u53c2\u6570","title":"\u89e3\u51b3"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#2","text":"","title":"\u80cc\u666f2"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#_3","text":"SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); BEGIN dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); END; * ERROR at line 1: ORA-13541: system moving window baseline size (691200) greater than retention (604800) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1","title":"\u4fee\u6539\u5feb\u7167\u7684\u4fdd\u7559\u65f6\u957f\u62a5\u9519"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#_4","text":"\u67e5\u770b\u62a5\u9519\u7684\u542b\u4e49\uff1a shell oerr ora 13541 13541, 00000, \"system moving window baseline size (%s) greater than retention (%s)\" // *Cause: The system moving window baseline size must be less than the // retention setting. The specified window size or retention // violate this. // *Action: Check the moving window baseline size or retention. system moving window baseline\u662f\u6307\u7cfb\u7edf\u7684\u57fa\u7ebf\u65f6\u957f\u5927\u5c0f\uff0c\u5f71\u54cd\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\uff1f#todolist \u67e5\u770bmoving_window_size\u5927\u5c0f select dbid,baseline_name,baseline_type,moving_window_size from dba_hist_baseline; SYS@RACDB_1 select dbid,baseline_name ,baseline_type,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ------------------ ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 8 \u79fb\u52a8\u7a97\u53e3\u5927\u5c0f = \u5feb\u7167\u7684\u4fdd\u7559\u65f6\u957f\u3002\u7531\u7b2c2\u9879\u7ed3\u679c\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u7684moving_window_size=8\uff0c\u5927\u4e8e\u8bbe\u7f6e\u76847\u5929\u503c\u3002\u6240\u4ee5\u62a5\u9519\u4e86\u3002","title":"\u539f\u56e0\u5206\u6790"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#_5","text":"\u8bbe\u7f6ebaseline\u7684moving_sindow_size\u4e3a =7 \u8bbe\u7f6eretention\u4e3a7,\u5373\u53ef\u3002","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#_6","text":"","title":"\u603b\u7ed3"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#_7","text":"retention \u4e3amoving_window_size\u7684\u4e0a\u9650\u503c\uff0cmoving_window_size\u4e3aretention\u7684\u4e0b\u9650\u503c\u3002 \u5f53\u8bbe\u7f6e\u65f6\u6709\u51b2\u7a81\u65f6\uff0c\u9996\u5148\u4fee\u6539\u4e0a\u4e0b\u9650\u503c\uff0c\u518d\u4fee\u6539\u522b\u4e00\u4e2a\u503c\u3002","title":"\u5feb\u7167\u548c\u57fa\u7ebf"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#snapshot","text":"https://oracle-base.com/articles/10g/automatic-workload-repository-10g \u521b\u5efa\uff1a exec dbms_workload_repository.create_snapshot(); \u67e5\u770b\uff1a select snap_id,dbid,BEGIN_INTERVAL_TIME from dba_hist_snapshot; \u5220\u9664\uff1aDBMS_WORKLOAD_REPOSITORY\u5305\u542b\u6709\u8fc7\u7a0bDROP_SNAPSHOT_RANGE \u4e09\u53c2\u6570\uff1alow_snap_id= ,high_snap_id= , dbid= \u901a\u8fc7\u6307\u5b9asnap_id\u7684\u8303\u56f4\u7684\u65b9\u5f0f\u4e00\u6b21\u5220\u9664\u591a\u4e2aSnapshot ```mysql select count(0) from dba_hist_snapshot where snap_id between 6770 and 6774; select max(snap_id) from dba_hist_snapshot; select dbid from v$database; exec dbms_workload_repository.drop_snapshot_range(low_snap_id = 6770,high_snap_id = 6774,dbid = 4059638244); exec dbms_workload_repository.drop_snapshot_range('155','165','1029318903'); ```","title":"snapshot\u76f8\u5173\u64cd\u4f5c"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#baseline","text":"\u751f\u6210AWR\uff1a @ $ORACLE_HOME/rdbms/admin/awrrpti.sql","title":"baseline\u76f8\u5173"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#dbms_workload_repository","text":"","title":"DBMS_WORKLOAD_REPOSITORY"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#create_snapshot","text":"","title":"CREATE_SNAPSHOT"},{"location":"Database/Oracle/Case/Database/awr\u624b\u5de5\u5feb\u7167/#the-automatic-workload-repository","text":"SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); BEGIN dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*7); END; * ERROR at line 1: ORA-13541: system moving window baseline size (691200) greater than retention (604800) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1 SYS@RACDB_1 !oerr ora 13541 13541, 00000, system moving window baseline size (%s) greater than retention (%s) // *Cause: The system moving window baseline size must be less than the // retention setting. The specified window size or retention // violate this. // *Action: Check the moving window baseline size or retention. SYS@RACDB_1 select dbid,baseline_name ,baseline_type,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ---------------------------------------------------------------- ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 8 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*8); PL/SQL procedure successfully completed. SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*1); BEGIN dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*1); END; * ERROR at line 1: ORA-13541: system moving window baseline size (691200) greater than retention (86400) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(interval= 60,retention= 24*60*11); PL/SQL procedure successfully completed. SYS@RACDB_1 select 691200/60/60/24 day1,86400/60/60/24 day2 from dual; DAY1 DAY2 ---------- ---------- 8 1 SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(2); PL/SQL procedure successfully completed. SYS@RACDB_1 select dbid,baseline_name,baseline_type ,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ---------------------------------------------------------------- ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 2 SYS@RACDB_1 select * from dba_hist_wr_control; DBID SNAP_INTERVAL RETENTION TOPNSQL ---------- ------------------------------ ------------------------------ ---------- 1029318903 +00000 01:00:00.0 +00011 00:00:00.0 DEFAULT SYS@RACDB_1 exec dbms_workload_repository.create_snapshot(); PL/SQL procedure successfully completed. SYS@RACDB_1 ---2\u5929\u65f6\u95f4\u592a\u77ed\uff0c\u4fee\u6539\u4e3a12\u5929\uff0c\u6bd4\u5feb\u7167\u591a\u4e00\u5929\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\u5462\uff1f SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_settings(12); BEGIN dbms_workload_repository.modify_baseline_settings(12); END; * ERROR at line 1: ORA-06550: line 1, column 32: PLS-00302: component 'MODIFY_BASELINE_SETTINGS' must be declared ORA-06550: line 1, column 7: PL/SQL: Statement ignored SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(12); BEGIN dbms_workload_repository.modify_baseline_window_size(12); END; * ERROR at line 1: ORA-13541: system moving window baseline size (1036800) greater than retention (950400) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 686 ORA-06512: at line 1 SYS@RACDB_1 -- \u6240\u4ee5\u8981\u5148\u4fee\u6539\u5feb\u7167\u7684\u4fdd\u7559\u65f6\u95f4\u624d\u80fd\u4fee\u6539\u57fa\u7ebf\u7684\u7a97\u53e3\u5927\u5c0f SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings('60','15*24*60') BEGIN dbms_workload_repository.modify_snapshot_settings('60','15*24*60'); END; * ERROR at line 1: ORA-06502: PL/SQL: numeric or value error: character to number conversion error ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings('60',15*24*60); BEGIN dbms_workload_repository.modify_snapshot_settings('60',15*24*60); END; * ERROR at line 1: ORA-13510: invalid RETENTION 60, must be in the range (1440, 52560000) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 174 ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 222 ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(15*24*60,60); PL/SQL procedure successfully completed. SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(12); PL/SQL procedure successfully completed. SYS@RACDB_1 select * from dba_hist_wr_control; DBID SNAP_INTERVAL RETENTION TOPNSQL ---------- ------------------------------ ------------------------------ ---------- 1029318903 +00000 01:00:00.0 +00015 00:00:00.0 DEFAULT SYS@RACDB_1 select *from dba_hist_baseline; DBID BASELINE_ID BASELINE_NAME BASELINE_TYPE START_SNAP_ID START_SNAP_TIME END_SNAP_ID END_SNAP_TIME MOVING_WINDOW_SIZE CREATION_ EXPIRATION TEMPLATE_NAME LAST_TIME ---------- ----------- ---------------------------------------------------------------- ------------- ------------- --------------------------------------------------------------------------- ----------- --------------------------------------------------------------------------- ------------------ --------- ---------- ---------------------------------------------------------------- --------- 1029318903 0 SYSTEM_MOVING_WINDOW MOVING_WINDOW 166 06-NOV-20 11.00.55.189 PM 180 11-NOV-20 05.00.07.362 PM 12 06-FEB-20 SYS@RACDB_1 select dbid,baseline_name,baseline_type,moving_window_size from dba_hist_baseline; DBID BASELINE_NAME BASELINE_TYPE MOVING_WINDOW_SIZE ---------- ---------------------------------------------------------------- ------------- ------------------ 1029318903 SYSTEM_MOVING_WINDOW MOVING_WINDOW 12 SYS@RACDB_1 -- \u8bbe\u7f6e\u6700\u5927\u503c\u7684\u57fa\u7ebf\u7a7a\u95f4\u5927\u5c0f SYS@RACDB_1 -- set retention = 13*7*60*24 SYS@RACDB_1 exec dbms_workload_repository.modify_snapshot_settings(13*7*60*24,60); PL/SQL procedure successfully completed. SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(92); BEGIN dbms_workload_repository.modify_baseline_window_size(92); END; * ERROR at line 1: ORA-13539: invalid input for modify baseline window size (window_size, 92) ORA-06512: at SYS.DBMS_WORKLOAD_REPOSITORY , line 686 ORA-06512: at line 1 SYS@RACDB_1 exec dbms_workload_repository.modify_baseline_window_size(91); PL/SQL procedure successfully completed.","title":"The Automatic Workload Repository"},{"location":"Database/Oracle/FAQ/PLSQL/","text":"1. \u6570\u636e\u5e93\u7248\u672c 1. \u6570\u636e\u5e93\u7248\u672c select * from v$version;","title":"PLSQL"},{"location":"Database/Oracle/FAQ/PLSQL/#1","text":"select * from v$version;","title":"1. \u6570\u636e\u5e93\u7248\u672c"},{"location":"Database/Oracle/Rac/GridInstall/","text":"Install Grid \u56fe\u9762\u5316\u5b89\u88c5 ./runInstaller: /root/grid/install/.oui: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory yum provides /lib/ld-linux.so.2 --\u5b89\u88c5glibc-2.17-292.el7.i686 Installing: glibc i686 2.17-292.el7 base 4.3 M Installing for dependencies: nss-softokn-freebl i686 3.44.0-8.el7_7 updates 214 k Updating for dependencies: glibc x86_64 2.17-292.el7 base 3.6 M glibc-common x86_64 2.17-292.el7 base 11 M glibc-devel x86_64 2.17-292.el7 base 1.1 M glibc-headers x86_64 2.17-292.el7 base 687 k nspr x86_64 4.21.0-1.el7 base 127 k nss-softokn-freebl x86_64 3.44.0-8.el7_7 updates 224 k nss-util x86_64 3.44.0-4.el7_7 updates 79 k yum install xclock libXext-1.3.3-3.el7.i686 libXext #libXext \u63d0\u4f9b\u5e93\uff1alibXext.so.6 \u590d\u5236\u4e0a\u9762\u4e24\u884c\uff0c\u4fee\u6539\u4e0ehostname\u4e00\u81f4\u7684\u57df\u540d\u3002grid\u7684\u5bc6\u7801\u662foracle [root@rac01 ~]# /etc/init.d/oracleasm scandisks /etc/init.d/oracleasm is deprecated. Use 'oracleasm scandisks' #\u4f7f\u7528oracleasm /usr/sbin/oracleasm #\u5f53\u6253\u5f00ASM\u7a7a\u767d\u65f6\uff0c\u7528\u4e0b\u9762\u547d\u4ee4 #\u53ef\u901a\u8fc7\u65e5\u5fd7\uff1a\u67e5\u770b\u5230\u7f3a\u5c11\u7684\u5305 cd /tmp/OraInstall2020-01-15_01-09-58AM tail installActions2020-01-15_01-09-58AM.log WARNING: /tmp/OraInstall2020-01-15_01-09-58AM/ext/bin/kfod: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory yum install -y libaio-0.3.109-13.el7.i686 libaio yum install -y libaio-0.3.109-13.el7.i686 libaio \u521b\u5efa \u76ee\u5f55\uff0cAll \u8282\u70b9\uff08Node\uff09 yum install -y gcc elfutils unixODBC unixODBC-devel pdksh yum install compat-libstdc++-33.x86_64 gcc-c++ yum install elfutils-libelf-devel ksh yum install -y binutils compat-libcap1 cpp gcc gcc-c++ glibc glibc glibc-devel glibc-devel glibc-headers ksh libaio libaio libaio-devel libaio-devel libgcc libgcc libstdc++ libstdc++ libstdc++-devel libstdc++-devel libXi libXi libXtst libXtst make mpfr sysstat \u62a5\u9519: linux rac\u96c6\u7fa4\u5b89\u88c5\u8fc7\u7a0b\u62a5\u9519ins_net_client.mk \u539f\u521bLittleforest62 \u6700\u540e\u53d1\u5e03\u4e8e2019-07-08 14:42:47 \u9605\u8bfb\u6570 185 \u6536\u85cf \u5c55\u5f00 \u95ee\u9898\u4e00\uff1a \u5728\u8dd1runInstaller\u65f6\u62a5\u9519 Error in invoking target 'itnsping' of makefile '/u01/app/11.2.0/grid/network/lib/ins_net_client.mk'. See '/u01/app/oraInventory/logs/installActions2019-07-06_09-55-44PM.log' for details. \u89e3\u51b3\u529e\u6cd5\uff1a \u8c03\u6574\u73af\u5883\u53d8\u91cflib\uff0c\u628alib32\u8c03\u6210lib64 \u8c03\u6574\u540e\u6ca1\u6709\u62a5\u6b64\u9519 \u95ee\u9898\u4e8c\uff1a \u7ee7\u7eed\u8dd1\u53c8\u62a5\u4e0b\u9762\u7684\u9519 Error in invoking target 'mkldflags ntcontab.o nnfgt.o' of makefile '/u01/app/11.2.0/grid/network/lib/ins_net_client.mk'. See '/u01/app/oraInventory/logs/installActions2019-07-07_03-02-57PM.log' for details. \u7f51\u67e5\u6ca1\u6709gcc\u5305\uff0c\u80af\u5b9a\u6709 \u68c0\u67e5cpp\u5305\uff0c\u6ca1\u6709 [root@jcyqdb01:10.176.34.110:/etc/udev/rules.d]# rpm -qa|grep cpp libmcpp-2.7.2-4.1.el6.x86_64 abrt-addon-ccpp-2.0.8-40.el6.x86_64 mcpp-2.7.2-4.1.el6.x86_64 \u4f46\u662fcpp\u5305\u4e0d\u5728\u6211\u4eec\u7684\u5b89\u88c5\u68c0\u67e5\u9879\u5185\uff0c\u8fd9\u4e2a\u5305\u5e94\u8be5\u662f\u5b89\u88c5rpm\u7684\u4f9d\u8d56\u5305 \u7531\u4e8e\u5f53\u65f6\u5b89\u88c5rpm\u5305\u65f6\u662f\u7f51\u4e0a\u4e0b\u7684rpm\u7136\u540erpm -ivh --nodeps --force\u5f3a\u5236\u5b89\u88c5\u7684\uff0c\u6ca1\u6709\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a(All nodes) yum install -y cpp glibc-devel-2.17-292.el7.i686 ##\u8fd9\u4e2a\u4e5f\u662f\u8981\u7684 \u901a\u8fc7rpm -qi glibc*\u67e5\u770b \u7136\u540eretry\u5c31\u8fc7\u4e86 \u63a5\u7740\u53c8\u62a5\u9519\uff1a Error in invoking target 'all_no_orcl ipc_g' of makefile '/u01/app/11.2.0/grid/rdbms/lib/ins_rdbms.mk'. See '/u01/app/oraInventory/logs/installActions2020-01-15_04-19-30AM.log' for details. \u67e5\u770b\u65e5\u5fd7\uff1a INFO: gcc: error: /usr/lib/libstdc++.so.6: No such file or directory INFO: /u01/app/11.2.0/grid/bin/genorasdksh: Failed to link liborasdkbase.so.11.1 \u89e3\u51b3\uff1a \u67e5\u770b\u6765\u81ea\u4f55\u5305\uff1a yum provides /usr/lib/libstdc++.so.6 \u5b89\u88c5\uff1a [root@rac01 tmp]# rpm -qi libstdc++-4.8.5-39.el7.i686 package libstdc++-4.8.5-39.el7.i686 is not installed [root@rac01 tmp]# yum install -y libstdc++-4.8.5-39.el7.i686 yum install -y compat-libstdc++-33.i686","title":"GridInstall"},{"location":"Database/Oracle/Rac/GridInstall/#install-grid","text":"","title":"Install Grid"},{"location":"Database/Oracle/Rac/GridInstall/#_1","text":"./runInstaller: /root/grid/install/.oui: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory yum provides /lib/ld-linux.so.2 --\u5b89\u88c5glibc-2.17-292.el7.i686 Installing: glibc i686 2.17-292.el7 base 4.3 M Installing for dependencies: nss-softokn-freebl i686 3.44.0-8.el7_7 updates 214 k Updating for dependencies: glibc x86_64 2.17-292.el7 base 3.6 M glibc-common x86_64 2.17-292.el7 base 11 M glibc-devel x86_64 2.17-292.el7 base 1.1 M glibc-headers x86_64 2.17-292.el7 base 687 k nspr x86_64 4.21.0-1.el7 base 127 k nss-softokn-freebl x86_64 3.44.0-8.el7_7 updates 224 k nss-util x86_64 3.44.0-4.el7_7 updates 79 k yum install xclock libXext-1.3.3-3.el7.i686 libXext #libXext \u63d0\u4f9b\u5e93\uff1alibXext.so.6 \u590d\u5236\u4e0a\u9762\u4e24\u884c\uff0c\u4fee\u6539\u4e0ehostname\u4e00\u81f4\u7684\u57df\u540d\u3002grid\u7684\u5bc6\u7801\u662foracle [root@rac01 ~]# /etc/init.d/oracleasm scandisks /etc/init.d/oracleasm is deprecated. Use 'oracleasm scandisks' #\u4f7f\u7528oracleasm /usr/sbin/oracleasm #\u5f53\u6253\u5f00ASM\u7a7a\u767d\u65f6\uff0c\u7528\u4e0b\u9762\u547d\u4ee4 #\u53ef\u901a\u8fc7\u65e5\u5fd7\uff1a\u67e5\u770b\u5230\u7f3a\u5c11\u7684\u5305 cd /tmp/OraInstall2020-01-15_01-09-58AM tail installActions2020-01-15_01-09-58AM.log WARNING: /tmp/OraInstall2020-01-15_01-09-58AM/ext/bin/kfod: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory yum install -y libaio-0.3.109-13.el7.i686 libaio yum install -y libaio-0.3.109-13.el7.i686 libaio \u521b\u5efa \u76ee\u5f55\uff0cAll \u8282\u70b9\uff08Node\uff09 yum install -y gcc elfutils unixODBC unixODBC-devel pdksh yum install compat-libstdc++-33.x86_64 gcc-c++ yum install elfutils-libelf-devel ksh yum install -y binutils compat-libcap1 cpp gcc gcc-c++ glibc glibc glibc-devel glibc-devel glibc-headers ksh libaio libaio libaio-devel libaio-devel libgcc libgcc libstdc++ libstdc++ libstdc++-devel libstdc++-devel libXi libXi libXtst libXtst make mpfr sysstat","title":"\u56fe\u9762\u5316\u5b89\u88c5"},{"location":"Database/Oracle/Rac/GridInstall/#_2","text":"","title":"\u62a5\u9519:"},{"location":"Database/Oracle/Rac/GridInstall/#linux-racins_net_clientmk","text":"\u539f\u521bLittleforest62 \u6700\u540e\u53d1\u5e03\u4e8e2019-07-08 14:42:47 \u9605\u8bfb\u6570 185 \u6536\u85cf \u5c55\u5f00 \u95ee\u9898\u4e00\uff1a \u5728\u8dd1runInstaller\u65f6\u62a5\u9519 Error in invoking target 'itnsping' of makefile '/u01/app/11.2.0/grid/network/lib/ins_net_client.mk'. See '/u01/app/oraInventory/logs/installActions2019-07-06_09-55-44PM.log' for details. \u89e3\u51b3\u529e\u6cd5\uff1a \u8c03\u6574\u73af\u5883\u53d8\u91cflib\uff0c\u628alib32\u8c03\u6210lib64 \u8c03\u6574\u540e\u6ca1\u6709\u62a5\u6b64\u9519 \u95ee\u9898\u4e8c\uff1a \u7ee7\u7eed\u8dd1\u53c8\u62a5\u4e0b\u9762\u7684\u9519 Error in invoking target 'mkldflags ntcontab.o nnfgt.o' of makefile '/u01/app/11.2.0/grid/network/lib/ins_net_client.mk'. See '/u01/app/oraInventory/logs/installActions2019-07-07_03-02-57PM.log' for details. \u7f51\u67e5\u6ca1\u6709gcc\u5305\uff0c\u80af\u5b9a\u6709 \u68c0\u67e5cpp\u5305\uff0c\u6ca1\u6709 [root@jcyqdb01:10.176.34.110:/etc/udev/rules.d]# rpm -qa|grep cpp libmcpp-2.7.2-4.1.el6.x86_64 abrt-addon-ccpp-2.0.8-40.el6.x86_64 mcpp-2.7.2-4.1.el6.x86_64 \u4f46\u662fcpp\u5305\u4e0d\u5728\u6211\u4eec\u7684\u5b89\u88c5\u68c0\u67e5\u9879\u5185\uff0c\u8fd9\u4e2a\u5305\u5e94\u8be5\u662f\u5b89\u88c5rpm\u7684\u4f9d\u8d56\u5305 \u7531\u4e8e\u5f53\u65f6\u5b89\u88c5rpm\u5305\u65f6\u662f\u7f51\u4e0a\u4e0b\u7684rpm\u7136\u540erpm -ivh --nodeps --force\u5f3a\u5236\u5b89\u88c5\u7684\uff0c\u6ca1\u6709\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a(All nodes) yum install -y cpp glibc-devel-2.17-292.el7.i686 ##\u8fd9\u4e2a\u4e5f\u662f\u8981\u7684 \u901a\u8fc7rpm -qi glibc*\u67e5\u770b \u7136\u540eretry\u5c31\u8fc7\u4e86 \u63a5\u7740\u53c8\u62a5\u9519\uff1a Error in invoking target 'all_no_orcl ipc_g' of makefile '/u01/app/11.2.0/grid/rdbms/lib/ins_rdbms.mk'. See '/u01/app/oraInventory/logs/installActions2020-01-15_04-19-30AM.log' for details. \u67e5\u770b\u65e5\u5fd7\uff1a INFO: gcc: error: /usr/lib/libstdc++.so.6: No such file or directory INFO: /u01/app/11.2.0/grid/bin/genorasdksh: Failed to link liborasdkbase.so.11.1 \u89e3\u51b3\uff1a \u67e5\u770b\u6765\u81ea\u4f55\u5305\uff1a yum provides /usr/lib/libstdc++.so.6 \u5b89\u88c5\uff1a [root@rac01 tmp]# rpm -qi libstdc++-4.8.5-39.el7.i686 package libstdc++-4.8.5-39.el7.i686 is not installed [root@rac01 tmp]# yum install -y libstdc++-4.8.5-39.el7.i686 yum install -y compat-libstdc++-33.i686","title":"linux rac\u96c6\u7fa4\u5b89\u88c5\u8fc7\u7a0b\u62a5\u9519ins_net_client.mk"},{"location":"Database/Oracle/Rac/RACBuild/","text":"\u642d\u5efaRAC [toc] \u786c\u4ef6\u73af\u5883 \u6dfb\u52a0\u5171\u4eab\u76d8 \u5206\u533a\u5171\u4eab\u76d8 fdisk /dev/sdb Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Command (m for help): m Command action a toggle a bootable flag b edit bsd disklabel #\u7f16\u8f91\u5206\u533a\u7684\u786c\u76d8\u6807\u7b7e c toggle the dos compatibility flag d delete a partition #\u5220\u9664\u5206\u533a\u4e0en\u5bf9\u5e94 g create a new empty GPT partition table G create an IRIX (SGI) partition table l list known partition types #\u5217\u51fa\u5df2\u77e5\u5206\u533a\u7684\u7c7b\u578b m print this menu #\u5e2e\u52a9\u4fe1\u606f n add a new partition #**\u521b\u5efa\u65b0\u5206\u533a** o create a new empty DOS partition table p print the partition table #\u6253\u5370\u5206\u533a\u8868 q quit without saving changes #\u4e0d\u4fdd\u5b58\u7684\u9000\u51fa s create a new empty Sun disklabel t change a partition's system id u change display/entry units v verify the partition table w write table to disk and exit #\u4fdd\u5b58\u5206\u533a\u4fe1\u606f\u5230\u786c\u76d8\uff0c\u5e76\u9000\u51fa\u3002 x extra functionality (experts only) \u5206\u533a\u8fc7\u7a0b Command (m for help): n Partition type: p primary (1 primary, 0 extended, 3 free) #p:\u4e3b\u5206\u533a\uff0ce\u4e3a\u6269\u5c55\u5206\u533a\u5165\u53e3\u3002\uff08\uff09\u4e3a\u6c47\u603b\uff1a1 \u4e2a\u4e3b\u5206\u533a\uff0c0\u4e2a\u6269\u5c55\u5206\u533a\uff0c3\u4e2a\u81ea\u7531\u4e3b\u5206\u533a\uff0c\u5c31\u662f\u53ef\u7528\u7684\u989d\u3002 e extended Select (default p): p Partition number (2-4, default 2): #\u9ed8\u8ba4\u4e3a2\u5206\u533a\uff0c\u5982\u60f3\u9ed8\u8ba4\uff0c\u56de\u8f66\u4e0b\u4e00\u6b65\u3002 First sector (4196352-79691775, default 4196352): #\u5982\u60f3\u9ed8\u8ba4\uff0c\u56de\u8f66\u4e0b\u4e00\u6b65\u3002 Using default value 4196352 Last sector, +sectors or +size{K,M,G} (4196352-79691775, default 79691775): +2G #s\u683c\u5f0f\u5fc5\u987b\u4e3a+{\u6570\u5b57}{\u5927\u5199\u5355\u4f4d}+size{K,M,G}\uff0c\u5c0f\u5199\u4f1a\u5982\u4e0b\u62a5\u9519 #Unsupported suffix: 'g'. #Supported: 10^N: KB (KiloByte), MB (MegaByte), GB (GigaByte) # 2^N: K (KibiByte), M (MebiByte), G (GibiByte) Partition 2 of type Linux and of size 2 GiB is set \u6700\u7ec8\u7ed3\u679c\uff1a Command (m for help): p Disk /dev/sdb: 40.8 GB, 40802189312 bytes, 79691776 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x9096df96 Device Boot Start End Blocks Id System /dev/sdb1 2048 4196351 2097152 83 Linux /dev/sdb2 4196352 8390655 2097152 83 Linux /dev/sdb3 8390656 12584959 2097152 83 Linux /dev/sdb4 12584960 79691775 33553408 5 Extended /dev/sdb5 12587008 16781311 2097152 83 Linux /dev/sdb6 16783360 20977663 2097152 83 Linux /dev/sdb7 20979712 25174015 2097152 83 Linux /dev/sdb8 25176064 29370367 2097152 83 Linux /dev/sdb9 29372416 33566719 2097152 83 Linux /dev/sdb10 33568768 37763071 2097152 83 Linux /dev/sdb11 37765120 41959423 2097152 83 Linux /dev/sdb12 41961472 46155775 2097152 83 Linux /dev/sdb13 46157824 50352127 2097152 83 Linux /dev/sdb14 50354176 54548479 2097152 83 Linux Command (m for help): w The partition table has been altered! Calling ioctl() to re-read partition table. Syncing disks. \u8f6f\u73af\u5883 \u65f6\u95f4(All nodes) date -s '20200115 21:51:00' hwclock -w #\u540c\u6b65BIOS Log File: /u01/app/oraInventory/logs/installActions2020-01-15_04-19-30AM.log \u521b\u5efa\u7528\u6237\u548c\u7528\u6237\u7ec4 Create an Oracle Software inventory group on each node Group ID must be consistent on each node. groupadd -g 501 oinstall Create the Oracle Software owner on each node. User ID must consistent on each node and the inventory group must be the primary group . Most Oracle products (Grid Infrastrunture,database ,Enterprise Manager,and so on ) ar usually owned by the same user,typeically called oracle ,but each product can be owned by a different user. useradd -u 501 -g oinstall oracle or useradd -u 502 -g oinstall grid \u7528\u6237\u4e0e\u7528\u6237\u7ea7\u8bf4\u660e Create the required operating system groups and users: Groups: oinstall #GI\u548c\u6570\u636e\u5e93\u8f6f\u4ef6\u7684\u4e3b\u7ec4 dba #\u6570\u636e\u5e93DBA\u7ec4\uff0c\u5bf9\u6570\u636e\u5e93\u62e5\u6709\u6570\u636e\u6743\u9650 Optional groups (for separation of duty across mutiple users): oper asmdba ASM\u5b9e\u4f8b\u7684dba\u7ec4\uff0c\u53ef\u542f\u52a8\uff0c\u5173\u95ed\u5b9e\u4f8b\uff0c\u6302\u8f7d\uff0c\u5378\u8f7dASM\u78c1\u76d8\u7ec4 asmoper asmadmin ASM\u7ba1\u7406\u7ec4\uff0c\u5305\u542basmdba\u7684\u5168\u90e8\u6743\u9650\uff0c\u53ef\u589e\uff0c\u5220ASM\u78c1\u76d8\u7ec4\uff0c\u78c1\u76d8\u3002 Users: Software owner,usually oracle Can create multiple users for mutiple product installations \uff08\u89d2\u8272\u4e0e\u4ea7\u54c1\u5b89\u88c5\u9700\u8981\u5206\u79bb\uff09 \u89d2\u8272\u4efb\u52a1\u5206\u79bb \u4e24\u8282\u70b9\u521b\u5efa\u7528\u6237\u4e0e\u7528\u6237\u7ec4 groupadd -g 1000 oinstall groupadd -g 1001 dba groupadd -g 1002 oper groupadd -g 2000 asmadmin groupadd -g 2001 asmdba groupadd -g 2002 asmoper useradd -u 500 -g oinstall -G dba,oper,asmdba oracle useradd -u 501 -g oinstall -G asmadmin,asmdba,asmoper grid echo oracle | passwd --stdin oracle echo oracle | passwd --stdin grid \u4e24\u8282\u70b9\u521b\u5efa\u76ee\u5f55 mkdir -p /u01/app/11.2.0/grid mkdir -p /u01/app/grid chown -R grid:oinstall /u01 mkdir -p /u01/app/oracle chown oracle:oinstall /u01/app/oracle chmod -R 775 /u01 \u914d\u7f6e\u7f51\u7edc RAC IP \u7f51\u7edc\u89c4\u5212 #public IP 192.168.6.102 rac02.AutoML.com #rac02.enp0s3 192.168.6.101 rac01.AutoML.com #rac01.enp0s3 #Virtual IP \u4e0d\u8981\u7f51\u5361\u7684 192.168.6.103 rac01-vip.AutoML.com 192.168.6.104 rac02-vip.AutoML.com #Private IP 10.0.0.101 rac01-priv.AutoML.com 10.0.0.103 #rac01.enp0s10 10.0.0.102 rac02-priv.AutoML.com 10.0.0.104 #rac02.enp0s10 #SCAN VIP \uff08DNS\u89e3\u6790\uff09Single client access Name \u4e5f\u4e0d\u8981\u7f51\u5361 192.168.6.111 cluster01-scan.AutoML.com 192.168.6.112 cluster01-scan.AutoML.com 192.168.6.113 cluster01-scan.AutoML.com \u5b89\u88c5\u5305 \u4f9d\u8d56\u5305 Oracle Linux 7 and Red Hat Enterprise Linux 7 ( The following packages (or later versions) must be installed:) binutils-2.23.52.0.1-12.el7.x86_64 compat-libcap1-1.10-3.el7.x86_64 compat-libstdc++-33-3.2.3-71.el7.i686 compat-libstdc++-33-3.2.3-71.el7.x86_64 gcc-4.8.2-3.el7.x86_64 gcc-c++-4.8.2-3.el7.x86_64 glibc-2.17-36.el7.i686 glibc-2.17-36.el7.x86_64 glibc-devel-2.17-36.el7.i686 glibc-devel-2.17-36.el7.x86_64 ksh libaio-0.3.109-9.el7.i686 libaio-0.3.109-9.el7.x86_64 libaio-devel-0.3.109-9.el7.i686 libaio-devel-0.3.109-9.el7.x86_64 libgcc-4.8.2-3.el7.i686 libgcc-4.8.2-3.el7.x86_64 libstdc++-4.8.2-3.el7.i686 libstdc++-4.8.2-3.el7.x86_64 libstdc++-devel-4.8.2-3.el7.i686 libstdc++-devel-4.8.2-3.el7.x86_64 libXi-1.7.2-1.el7.i686 libXi-1.7.2-1.el7.x86_64 libXtst-1.2.2-1.el7.i686 libXtst-1.2.2-1.el7.x86_64 make-3.82-19.el7.x86_64 sysstat-10.1.5-1.el7.x86_64 Oracle asmlib : Oracle ASMLib Downloads for Red Hat Enterprise Linux 7 including : oracleasmlib-2.0.12-1.el7.x86_64.rpm oracleasm-support-2.1.11-2.el7.x86_64.rpm RedHat https://access.redhat.com/solutions/315643 Install the ASMLib kernel module package as root using the following command: yum install kmod-oracleasm Install the ASMLib library package obtained from step 2 as root using the following command, with the downloaded package: yum localinstall oracleasmlib- version .x86_64.rpm # Where version is the revision downloaded in the previous step Install the ASMLib utilities package obtained from step 2 as root using the following command, with the downloaded package: yum localinstall oracleasm-support- version .x86_64.rpm yum install [root@rac02 ~]# oracleasm init Creating /dev/oracleasm mount point: /dev/oracleasm Loading module oracleasm : oracleasm Configuring oracleasm to use device physical block size Mounting ASMlib driver filesystem: /dev/oracleasm [root@rac02 ~]# oracleasm status Checking if ASM is loaded: yes Checking if /dev/oracleasm is mounted: yes \u5173\u95ed\u9632\u706b\u5899 Centos 7 Before service iptables stop chkconfig --list iptables chkconfig iptable off Centos 7 After systemctl stop firewalld.service systemctl disable firewald.service find . -type f -name 'oracleasm.ko' ./3.10.0-1062.el7.x86_64/extra/oracleasm/oracleasm.ko \u914d\u7f6eASM\u78c1\u76d8 \u914d\u7f6e\uff08all nodes\uff09 configure init clean disk create disk scan disk ```shell oracleasm scandisks \u51fa\u73b0\u5f02\u5e38\uff1a #Unable to instantiate disk \"****\"\u65f6\uff0c\u68c0\u67e5\uff1aoracleasm status \u662f\u5426\u5168\u90e8\u6210\u529f\u521d\u59cb\u5316\uff1a Checking if ASM is loaded: yes Checking if /dev/oracleasm is mounted: yes \u5982\u679c\u4e3aNO\u65f6\uff0c\u8bf7\u7528oracleasm init\u521d\u59cb\u5316\u3002 ```","title":"RACBuild"},{"location":"Database/Oracle/Rac/RACBuild/#rac","text":"[toc]","title":"\u642d\u5efaRAC"},{"location":"Database/Oracle/Rac/RACBuild/#_1","text":"","title":"\u786c\u4ef6\u73af\u5883"},{"location":"Database/Oracle/Rac/RACBuild/#_2","text":"","title":"\u6dfb\u52a0\u5171\u4eab\u76d8"},{"location":"Database/Oracle/Rac/RACBuild/#_3","text":"fdisk /dev/sdb Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Command (m for help): m Command action a toggle a bootable flag b edit bsd disklabel #\u7f16\u8f91\u5206\u533a\u7684\u786c\u76d8\u6807\u7b7e c toggle the dos compatibility flag d delete a partition #\u5220\u9664\u5206\u533a\u4e0en\u5bf9\u5e94 g create a new empty GPT partition table G create an IRIX (SGI) partition table l list known partition types #\u5217\u51fa\u5df2\u77e5\u5206\u533a\u7684\u7c7b\u578b m print this menu #\u5e2e\u52a9\u4fe1\u606f n add a new partition #**\u521b\u5efa\u65b0\u5206\u533a** o create a new empty DOS partition table p print the partition table #\u6253\u5370\u5206\u533a\u8868 q quit without saving changes #\u4e0d\u4fdd\u5b58\u7684\u9000\u51fa s create a new empty Sun disklabel t change a partition's system id u change display/entry units v verify the partition table w write table to disk and exit #\u4fdd\u5b58\u5206\u533a\u4fe1\u606f\u5230\u786c\u76d8\uff0c\u5e76\u9000\u51fa\u3002 x extra functionality (experts only) \u5206\u533a\u8fc7\u7a0b Command (m for help): n Partition type: p primary (1 primary, 0 extended, 3 free) #p:\u4e3b\u5206\u533a\uff0ce\u4e3a\u6269\u5c55\u5206\u533a\u5165\u53e3\u3002\uff08\uff09\u4e3a\u6c47\u603b\uff1a1 \u4e2a\u4e3b\u5206\u533a\uff0c0\u4e2a\u6269\u5c55\u5206\u533a\uff0c3\u4e2a\u81ea\u7531\u4e3b\u5206\u533a\uff0c\u5c31\u662f\u53ef\u7528\u7684\u989d\u3002 e extended Select (default p): p Partition number (2-4, default 2): #\u9ed8\u8ba4\u4e3a2\u5206\u533a\uff0c\u5982\u60f3\u9ed8\u8ba4\uff0c\u56de\u8f66\u4e0b\u4e00\u6b65\u3002 First sector (4196352-79691775, default 4196352): #\u5982\u60f3\u9ed8\u8ba4\uff0c\u56de\u8f66\u4e0b\u4e00\u6b65\u3002 Using default value 4196352 Last sector, +sectors or +size{K,M,G} (4196352-79691775, default 79691775): +2G #s\u683c\u5f0f\u5fc5\u987b\u4e3a+{\u6570\u5b57}{\u5927\u5199\u5355\u4f4d}+size{K,M,G}\uff0c\u5c0f\u5199\u4f1a\u5982\u4e0b\u62a5\u9519 #Unsupported suffix: 'g'. #Supported: 10^N: KB (KiloByte), MB (MegaByte), GB (GigaByte) # 2^N: K (KibiByte), M (MebiByte), G (GibiByte) Partition 2 of type Linux and of size 2 GiB is set \u6700\u7ec8\u7ed3\u679c\uff1a Command (m for help): p Disk /dev/sdb: 40.8 GB, 40802189312 bytes, 79691776 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x9096df96 Device Boot Start End Blocks Id System /dev/sdb1 2048 4196351 2097152 83 Linux /dev/sdb2 4196352 8390655 2097152 83 Linux /dev/sdb3 8390656 12584959 2097152 83 Linux /dev/sdb4 12584960 79691775 33553408 5 Extended /dev/sdb5 12587008 16781311 2097152 83 Linux /dev/sdb6 16783360 20977663 2097152 83 Linux /dev/sdb7 20979712 25174015 2097152 83 Linux /dev/sdb8 25176064 29370367 2097152 83 Linux /dev/sdb9 29372416 33566719 2097152 83 Linux /dev/sdb10 33568768 37763071 2097152 83 Linux /dev/sdb11 37765120 41959423 2097152 83 Linux /dev/sdb12 41961472 46155775 2097152 83 Linux /dev/sdb13 46157824 50352127 2097152 83 Linux /dev/sdb14 50354176 54548479 2097152 83 Linux Command (m for help): w The partition table has been altered! Calling ioctl() to re-read partition table. Syncing disks.","title":"\u5206\u533a\u5171\u4eab\u76d8"},{"location":"Database/Oracle/Rac/RACBuild/#_4","text":"","title":"\u8f6f\u73af\u5883"},{"location":"Database/Oracle/Rac/RACBuild/#all-nodes","text":"date -s '20200115 21:51:00' hwclock -w #\u540c\u6b65BIOS Log File: /u01/app/oraInventory/logs/installActions2020-01-15_04-19-30AM.log \u521b\u5efa\u7528\u6237\u548c\u7528\u6237\u7ec4 Create an Oracle Software inventory group on each node Group ID must be consistent on each node. groupadd -g 501 oinstall Create the Oracle Software owner on each node. User ID must consistent on each node and the inventory group must be the primary group . Most Oracle products (Grid Infrastrunture,database ,Enterprise Manager,and so on ) ar usually owned by the same user,typeically called oracle ,but each product can be owned by a different user. useradd -u 501 -g oinstall oracle or useradd -u 502 -g oinstall grid","title":"\u65f6\u95f4(All nodes)"},{"location":"Database/Oracle/Rac/RACBuild/#_5","text":"Create the required operating system groups and users: Groups: oinstall #GI\u548c\u6570\u636e\u5e93\u8f6f\u4ef6\u7684\u4e3b\u7ec4 dba #\u6570\u636e\u5e93DBA\u7ec4\uff0c\u5bf9\u6570\u636e\u5e93\u62e5\u6709\u6570\u636e\u6743\u9650 Optional groups (for separation of duty across mutiple users): oper asmdba ASM\u5b9e\u4f8b\u7684dba\u7ec4\uff0c\u53ef\u542f\u52a8\uff0c\u5173\u95ed\u5b9e\u4f8b\uff0c\u6302\u8f7d\uff0c\u5378\u8f7dASM\u78c1\u76d8\u7ec4 asmoper asmadmin ASM\u7ba1\u7406\u7ec4\uff0c\u5305\u542basmdba\u7684\u5168\u90e8\u6743\u9650\uff0c\u53ef\u589e\uff0c\u5220ASM\u78c1\u76d8\u7ec4\uff0c\u78c1\u76d8\u3002 Users: Software owner,usually oracle Can create multiple users for mutiple product installations \uff08\u89d2\u8272\u4e0e\u4ea7\u54c1\u5b89\u88c5\u9700\u8981\u5206\u79bb\uff09","title":"\u7528\u6237\u4e0e\u7528\u6237\u7ea7\u8bf4\u660e"},{"location":"Database/Oracle/Rac/RACBuild/#_6","text":"","title":"\u89d2\u8272\u4efb\u52a1\u5206\u79bb"},{"location":"Database/Oracle/Rac/RACBuild/#_7","text":"groupadd -g 1000 oinstall groupadd -g 1001 dba groupadd -g 1002 oper groupadd -g 2000 asmadmin groupadd -g 2001 asmdba groupadd -g 2002 asmoper useradd -u 500 -g oinstall -G dba,oper,asmdba oracle useradd -u 501 -g oinstall -G asmadmin,asmdba,asmoper grid echo oracle | passwd --stdin oracle echo oracle | passwd --stdin grid","title":"\u4e24\u8282\u70b9\u521b\u5efa\u7528\u6237\u4e0e\u7528\u6237\u7ec4"},{"location":"Database/Oracle/Rac/RACBuild/#_8","text":"mkdir -p /u01/app/11.2.0/grid mkdir -p /u01/app/grid chown -R grid:oinstall /u01 mkdir -p /u01/app/oracle chown oracle:oinstall /u01/app/oracle chmod -R 775 /u01","title":"\u4e24\u8282\u70b9\u521b\u5efa\u76ee\u5f55"},{"location":"Database/Oracle/Rac/RACBuild/#_9","text":"","title":"\u914d\u7f6e\u7f51\u7edc"},{"location":"Database/Oracle/Rac/RACBuild/#rac-ip","text":"","title":"RAC IP"},{"location":"Database/Oracle/Rac/RACBuild/#_10","text":"#public IP 192.168.6.102 rac02.AutoML.com #rac02.enp0s3 192.168.6.101 rac01.AutoML.com #rac01.enp0s3 #Virtual IP \u4e0d\u8981\u7f51\u5361\u7684 192.168.6.103 rac01-vip.AutoML.com 192.168.6.104 rac02-vip.AutoML.com #Private IP 10.0.0.101 rac01-priv.AutoML.com 10.0.0.103 #rac01.enp0s10 10.0.0.102 rac02-priv.AutoML.com 10.0.0.104 #rac02.enp0s10 #SCAN VIP \uff08DNS\u89e3\u6790\uff09Single client access Name \u4e5f\u4e0d\u8981\u7f51\u5361 192.168.6.111 cluster01-scan.AutoML.com 192.168.6.112 cluster01-scan.AutoML.com 192.168.6.113 cluster01-scan.AutoML.com","title":"\u7f51\u7edc\u89c4\u5212"},{"location":"Database/Oracle/Rac/RACBuild/#_11","text":"","title":"\u5b89\u88c5\u5305"},{"location":"Database/Oracle/Rac/RACBuild/#_12","text":"Oracle Linux 7 and Red Hat Enterprise Linux 7 ( The following packages (or later versions) must be installed:) binutils-2.23.52.0.1-12.el7.x86_64 compat-libcap1-1.10-3.el7.x86_64 compat-libstdc++-33-3.2.3-71.el7.i686 compat-libstdc++-33-3.2.3-71.el7.x86_64 gcc-4.8.2-3.el7.x86_64 gcc-c++-4.8.2-3.el7.x86_64 glibc-2.17-36.el7.i686 glibc-2.17-36.el7.x86_64 glibc-devel-2.17-36.el7.i686 glibc-devel-2.17-36.el7.x86_64 ksh libaio-0.3.109-9.el7.i686 libaio-0.3.109-9.el7.x86_64 libaio-devel-0.3.109-9.el7.i686 libaio-devel-0.3.109-9.el7.x86_64 libgcc-4.8.2-3.el7.i686 libgcc-4.8.2-3.el7.x86_64 libstdc++-4.8.2-3.el7.i686 libstdc++-4.8.2-3.el7.x86_64 libstdc++-devel-4.8.2-3.el7.i686 libstdc++-devel-4.8.2-3.el7.x86_64 libXi-1.7.2-1.el7.i686 libXi-1.7.2-1.el7.x86_64 libXtst-1.2.2-1.el7.i686 libXtst-1.2.2-1.el7.x86_64 make-3.82-19.el7.x86_64 sysstat-10.1.5-1.el7.x86_64 Oracle asmlib : Oracle ASMLib Downloads for Red Hat Enterprise Linux 7 including : oracleasmlib-2.0.12-1.el7.x86_64.rpm oracleasm-support-2.1.11-2.el7.x86_64.rpm RedHat https://access.redhat.com/solutions/315643 Install the ASMLib kernel module package as root using the following command: yum install kmod-oracleasm Install the ASMLib library package obtained from step 2 as root using the following command, with the downloaded package: yum localinstall oracleasmlib- version .x86_64.rpm # Where version is the revision downloaded in the previous step Install the ASMLib utilities package obtained from step 2 as root using the following command, with the downloaded package: yum localinstall oracleasm-support- version .x86_64.rpm yum install [root@rac02 ~]# oracleasm init Creating /dev/oracleasm mount point: /dev/oracleasm Loading module oracleasm : oracleasm Configuring oracleasm to use device physical block size Mounting ASMlib driver filesystem: /dev/oracleasm [root@rac02 ~]# oracleasm status Checking if ASM is loaded: yes Checking if /dev/oracleasm is mounted: yes","title":"\u4f9d\u8d56\u5305"},{"location":"Database/Oracle/Rac/RACBuild/#_13","text":"Centos 7 Before service iptables stop chkconfig --list iptables chkconfig iptable off Centos 7 After systemctl stop firewalld.service systemctl disable firewald.service find . -type f -name 'oracleasm.ko' ./3.10.0-1062.el7.x86_64/extra/oracleasm/oracleasm.ko \u914d\u7f6eASM\u78c1\u76d8 \u914d\u7f6e\uff08all nodes\uff09 configure init clean disk create disk scan disk ```shell oracleasm scandisks \u51fa\u73b0\u5f02\u5e38\uff1a #Unable to instantiate disk \"****\"\u65f6\uff0c\u68c0\u67e5\uff1aoracleasm status \u662f\u5426\u5168\u90e8\u6210\u529f\u521d\u59cb\u5316\uff1a Checking if ASM is loaded: yes Checking if /dev/oracleasm is mounted: yes \u5982\u679c\u4e3aNO\u65f6\uff0c\u8bf7\u7528oracleasm init\u521d\u59cb\u5316\u3002 ```","title":"\u5173\u95ed\u9632\u706b\u5899"},{"location":"Database/Oracle/Rac/ASM/ASM\u521b\u5efa\u5931\u8d25\u5206\u6790/","text":"ASM\u521b\u5efa\u5931\u8d25\u5206\u6790 #oracle\u521d\u59cb\u5316ASM\u78c1\u76d8: [root@rac01 ~]# cat initdisk.sh #!/usr/sbin/env bash oracleasm deletedisk OCR1 oracleasm deletedisk OCR2 oracleasm deletedisk OCR3 oracleasm deletedisk DATA1 oracleasm deletedisk DATA2 oracleasm deletedisk DATA3 oracleasm deletedisk DATA4 oracleasm deletedisk DATA5 oracleasm deletedisk FRA1 oracleasm deletedisk FRA2 oracleasm deletedisk FRA3 oracleasm deletedisk FRA4 oracleasm deletedisk ACFS1 oracleasm createdisk OCR1 /dev/sdb1 oracleasm createdisk OCR2 /dev/sdb2 oracleasm createdisk OCR3 /dev/sdb3 oracleasm createdisk DATA1 /dev/sdb5 oracleasm createdisk DATA2 /dev/sdb6 oracleasm createdisk DATA3 /dev/sdb7 oracleasm createdisk DATA4 /dev/sdb8 oracleasm createdisk DATA5 /dev/sdb9 oracleasm createdisk FRA1 /dev/sdb10 oracleasm createdisk FRA2 /dev/sdb11 oracleasm createdisk FRA3 /dev/sdb12 oracleasm createdisk FRA4 /dev/sdb13 oracleasm createdisk ACFS1 /dev/sdb14 ssh rac02.AutoML.com oracleasm scandisks ssh rac02.AutoML.com oracleasm listdisks 1\u3001asmlib\u521b\u5efaASM\u78c1\u76d8\u9519\u8bef # /etc/init.d/oracleasm createdisk VOL1 /dev/sdc3 Marking disk \"VOL1\" as an ASM disk: [FAILED] 2\u3001\u67e5\u770b\u9519\u8bef\u65e5\u5fd7 # less /var/log/oracleasm Disk \"VOL1\" does not exist or is not instantiated Writing disk header: done Instantiating disk: oracleasm-instantiate-disk: Unable to open manager: No such file or directory failed Clearing disk header: done \u6000\u7591\u6ca1\u6709configure\u548cenable # /etc/init.d/oracleasm configure Configuring the Oracle ASM library driver. This will configure the on-boot properties of the Oracle ASM library driver. The following questions will determine whether the driver is loaded on boot and what permissions it will have. The current values will be shown in brackets ('[]'). Hitting without typing an answer will keep that current value. Ctrl-C will abort. Default user to own the driver interface [oracle]: Default group to own the driver interface [dba]: Start Oracle ASM library driver on boot (y/n) [n]: Scan for Oracle ASM disks on boot (y/n) [y]: Writing Oracle ASM library driver configuration: done Dropping Oracle ASMLib disks: [ OK ] Shutting down the Oracle ASMLib driver: [ OK ] # /etc/init.d/oracleasm enable Writing Oracle ASM library driver configuration: done Initializing the Oracle ASMLib driver: [ OK ] Scanning the system for Oracle ASMLib disks: [ OK ] \u53ef\u4ee5\u6b63\u5e38\u521b\u5efaasm\u78c1\u76d8\u4e86 # /etc/init.d/oracleasm createdisk VOL1 /dev/sdc3 Marking disk \"VOL1\" as an ASM disk: [ OK ] [root@rac2 local]# /etc/init.d/oracleasm enable Writing Oracle ASM library driver configuration: done Initializing the Oracle ASMLib driver: [FAILED] \u67e5\u770b/var/log/oracleasm\u4fe1\u606f Loading module \"oracleasm\": failed Unable to load module \"oracleasm\" \u53d1\u73b0\u662fOracleasm\u548c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e0d\u4e00\u81f4\u5bfc\u81f4\uff0c\u91cd\u88c5asm rpm\u5305\u53ef\u89e3\u51b3\u3002 \u53c2\u8003\u81f3\uff1ahttp://blog.csdn.net/linghao00/article/details/6676945 \u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u6b63 \u90ae\u7bb1:czmcj@163.com","title":"ASM\u521b\u5efa\u5931\u8d25\u5206\u6790"},{"location":"Database/Oracle/Rac/ASM/ASM\u521b\u5efa\u5931\u8d25\u5206\u6790/#asm","text":"#oracle\u521d\u59cb\u5316ASM\u78c1\u76d8: [root@rac01 ~]# cat initdisk.sh #!/usr/sbin/env bash oracleasm deletedisk OCR1 oracleasm deletedisk OCR2 oracleasm deletedisk OCR3 oracleasm deletedisk DATA1 oracleasm deletedisk DATA2 oracleasm deletedisk DATA3 oracleasm deletedisk DATA4 oracleasm deletedisk DATA5 oracleasm deletedisk FRA1 oracleasm deletedisk FRA2 oracleasm deletedisk FRA3 oracleasm deletedisk FRA4 oracleasm deletedisk ACFS1 oracleasm createdisk OCR1 /dev/sdb1 oracleasm createdisk OCR2 /dev/sdb2 oracleasm createdisk OCR3 /dev/sdb3 oracleasm createdisk DATA1 /dev/sdb5 oracleasm createdisk DATA2 /dev/sdb6 oracleasm createdisk DATA3 /dev/sdb7 oracleasm createdisk DATA4 /dev/sdb8 oracleasm createdisk DATA5 /dev/sdb9 oracleasm createdisk FRA1 /dev/sdb10 oracleasm createdisk FRA2 /dev/sdb11 oracleasm createdisk FRA3 /dev/sdb12 oracleasm createdisk FRA4 /dev/sdb13 oracleasm createdisk ACFS1 /dev/sdb14 ssh rac02.AutoML.com oracleasm scandisks ssh rac02.AutoML.com oracleasm listdisks 1\u3001asmlib\u521b\u5efaASM\u78c1\u76d8\u9519\u8bef # /etc/init.d/oracleasm createdisk VOL1 /dev/sdc3 Marking disk \"VOL1\" as an ASM disk: [FAILED] 2\u3001\u67e5\u770b\u9519\u8bef\u65e5\u5fd7 # less /var/log/oracleasm Disk \"VOL1\" does not exist or is not instantiated Writing disk header: done Instantiating disk: oracleasm-instantiate-disk: Unable to open manager: No such file or directory failed Clearing disk header: done \u6000\u7591\u6ca1\u6709configure\u548cenable # /etc/init.d/oracleasm configure Configuring the Oracle ASM library driver. This will configure the on-boot properties of the Oracle ASM library driver. The following questions will determine whether the driver is loaded on boot and what permissions it will have. The current values will be shown in brackets ('[]'). Hitting without typing an answer will keep that current value. Ctrl-C will abort. Default user to own the driver interface [oracle]: Default group to own the driver interface [dba]: Start Oracle ASM library driver on boot (y/n) [n]: Scan for Oracle ASM disks on boot (y/n) [y]: Writing Oracle ASM library driver configuration: done Dropping Oracle ASMLib disks: [ OK ] Shutting down the Oracle ASMLib driver: [ OK ] # /etc/init.d/oracleasm enable Writing Oracle ASM library driver configuration: done Initializing the Oracle ASMLib driver: [ OK ] Scanning the system for Oracle ASMLib disks: [ OK ] \u53ef\u4ee5\u6b63\u5e38\u521b\u5efaasm\u78c1\u76d8\u4e86 # /etc/init.d/oracleasm createdisk VOL1 /dev/sdc3 Marking disk \"VOL1\" as an ASM disk: [ OK ] [root@rac2 local]# /etc/init.d/oracleasm enable Writing Oracle ASM library driver configuration: done Initializing the Oracle ASMLib driver: [FAILED] \u67e5\u770b/var/log/oracleasm\u4fe1\u606f Loading module \"oracleasm\": failed Unable to load module \"oracleasm\" \u53d1\u73b0\u662fOracleasm\u548c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e0d\u4e00\u81f4\u5bfc\u81f4\uff0c\u91cd\u88c5asm rpm\u5305\u53ef\u89e3\u51b3\u3002 \u53c2\u8003\u81f3\uff1ahttp://blog.csdn.net/linghao00/article/details/6676945 \u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u6b63 \u90ae\u7bb1:czmcj@163.com","title":"ASM\u521b\u5efa\u5931\u8d25\u5206\u6790"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/","text":"[toc] Oracle \u57fa\u7840\u67b6\u6784\u77e5\u8bc6 1. \u7269\u7406\u7ed3\u6784 Oracle\u7684\u57fa\u672c\u7ed3\u6784\uff1a Oracle\u7684\u7269\u7406\u7ed3\u6784\u662f\u7531\uff1a ControlFile DataFile Redo Files Spfile Archive log files password File (pwdSID.ora) \u4f9d\u636e\u4f7f\u7528\u65f6\u662f\u5426\u88ab\u8c03\u5165\u5185\u5b58\u53ef\u5206\u4e24\u7c7b\uff1a 1.\u6570\u636e\u5e93\u6587\u4ef6\uff1a Control file \u542b\u6709\u7ef4\u62a4\u4e0e\u9a8c\u8bc1\u6570\u636e\u5e93\u5b8c\u6574\u6027\u7684\u5fc5\u8981\u4fe1\u606f(SCN\u2026,\u8bc6\u522b\u6570\u636e\u6587\u4ef6\u4e0eredo log files,\u6bcf\u4e2a\u5e93\u81f3\u5c11\u4e00\u4e2a\u4ee5\u4e0aControl file)\uff0c\u63a7\u5236\u6587\u4ef6 includes\uff1a - \u6570\u636e\u5e93\u540d (db_name) - tablespace info - Names and location of associated data file and redo log files - All names and positions of redo log files - The timestamp of th database creation - The current log file sequence number - Checkpoint information - \u5173\u4e8eredo\u65e5\u5fd7\u548c\u5f52\u6863\u7684\u5f53\u524d\u72b6\u6001\u4fe1\u606f Data files \u5b58\u50a8\u6570\u636e\u7684\u6587\u4ef6\u3002\u4ee3\u8868\u6839\u636e\u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\u4e0e\u6570\u91cf\u51b3\u5b9a\u6574\u4e2a\u6570\u636e\u5e93\u7684\u5bb9\u79ef\u3002 Redo log files \u542b\u6709\u6570\u636e\u5e93\u6240\u6709\u7684\u66f4\u6539\u8bb0\u5f55\uff0c\u4ee5\u9632\u6545\u969c\u65f6\u542f\u7528\u6570\u636e\u6062\u590d\u3002 \u4e00\u4e2a\u6570\u636e\u5e93\u81f3\u5c11\u4e00\u5bf9\uff08\u4e24\u4e2a\uff09redo log file\u3002 Trace files \u5728Instance\u4e2d\u8fd0\u884c\u7684\u6bcf\u4e2a\u540e\u53f0\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2aTrace file \u4e0e\u4e4b\u76f8\u8fde\u3002 \u8bb0\u5f55\u540e\u53f0\u8fdb\u7a0b\u9047\u5230\u7684\u91cd\u5927\u4e8b\u4ef6\u7684\u4fe1\u606f Alert files \u7279\u6b8a\u7684\u8ddf\u8e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u4e00\u4e2a\u8ddf\u8e2a\u6587\u4ef6\u540c\u6b65\u8bb0\u8f7d\u6570\u636e\u5e93\u7684\u6d88\u606f\u548c\u9519\u8bef\u3002 2.\u975e\u6570\u636e\u5e93\u6587\u4ef6: parameter file (spfileSID.ora) \u5305\u62ec\u5927\u91cf\u5f71\u54cd\u5b9e\u4f8b\u529f\u80fd\u7684\u8bbe\u5b9a\uff0c\u5982\uff1a Control file \u7684\u5b9a\u4f4d Oracle\u7528\u6765\u7f13\u5b58\u4ece\u78c1\u76d8\u4e0a\u8bfb\u53d6\u7684\u6570\u636e\u7684\u5185\u5b58\u6570\u91cf \u9ed8\u8ba4\u4f18\u5316\u7a0b\u5e8f\u7684\u9009\u62e9\u548c\u6570\u636e\u5e93\u76f8\u5173\uff0c\u6267\u884c\u4e24\u4e2a\u91cd\u8981\u7684\u529f\u80fd\uff0c\u4e3a\u6570\u636e\u5e93\u6307\u51fa\u63a7\u5236\u6587\u4ef6\u548c\u6307\u51fa\u5f52\u6863\u65e5\u5fd7\u7684\u76ee\u6807\u3002 password file ( pwdSID.ora ) \u8ba4\u8bc1\u54ea\u4e9b\u7528\u6237\u6709\u542f\u52a8\u548c\u5173\u95edOracle\u5b9e\u4f8b\u3002 \u5f52\u6863\u6587\u4ef6\uff1a Redo log file\u7684\u8131\u673a\u526f\u672c\uff0c\u8fd9\u4e9b\u526f\u672c\u53ef\u80fd\u5bf9\u4e8e\u4ece\u4ecb\u8d28\u5931\u8d25\u4e2d\u8fdb\u884c\u6062\u590d\u5f88\u662f\u5fc5\u8981\u3002 2.\u903b\u8f91\u7ed3\u6784\uff08Tablespace\uff0cSegment\uff0cExtent\uff0cBlock\uff09 1. Tablespace \u57fa\u672c\u903b\u8f91\u7ed3\u6784\uff0c\u4e00\u7cfb\u5217\u6570\u636e\u6587\u4ef6\u7684\u96c6\u5408\u3002 2. Segment \u5bf9\u8c61\u5728\u6570\u636e\u5e93\u5360\u7528\u7684\u7a7a\u95f4 3. Extent \u4e3a\u6570\u636e\u4e00\u6b21\u6027\u9884\u7559\u7684\u4e00\u4e2a \u8f83\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 4.Block Oracle\u6700\u57fa\u672c\u7684\u5b58\u50a8\u5355\u4f4d\uff0c\u5728\u5efa\u7acb\u6570\u636e\u5e93\u65f6\u5019\u88ab\u6307\u5b9a\u3002 3.\u5185\u5b58\u7ed3\u6784 (SGA,PGA) SGA \u5b58\u50a8\u6570\u636e\u5e93\u4fe1\u606f\u7684\u5185\u5b58\u533a\u57df\uff0c\u4e14\u4e3a\u6570\u636e\u5e93\u8fdb\u7a0b\u6240\u5171\u4eab\u3002 \u5305\u542b\u6570\u636e\u5e93\u7684\u6570\u636e\u4e0e\u63a7\u5236\u4fe1\u606f\u3002 \u5728Oracle\u670d\u52a1\u5668\u6240\u9a7b\u7559\u7684\u8ba1\u7b97\u673a\u7684\u7269\u7406\u5185\u5b58\u4e2d\u5206\u914d\u51fa\u6765\u3002\u5b9e\u9645\u5185\u5b58\u4e0d\u591f\uff0c\u5411\u865a\u62df\u5185\u5b58\u5199\u5165\u3002 PGA \u5305\u542b\u5355\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b\u6216\u5355\u4e2a\u540e\u53f0\u8fdb\u7a0b\u7684\u6570\u636e\u4e0e\u63a7\u5236\u4fe1\u606f\u3002 \u4e0e\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u4fe1\u606f\u7684SGA\u76f8\u53cd\uff0cPGA\u53ea\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528 PGA\u521b\u5efa\u8fdb\u7a0b\u65f6\u5206\u914d\uff0c\u7ec8\u6b62\u8fdb\u7a0b\u65f6\u56de\u6536\u5185\u5b58\u3002 4. \u540e\u53f0\u8fdb\u7a0b DBWR Database Writer \u5c06\u6570\u636e\u5e93\u7684\u7f13\u51b2\u533a\u9ad8\u901f\u7f13\u5b58(database buffer cache)\u7684\u66f4\u6539\u7684\u6570\u636e\u5199\u5165\u5230\u6570\u636e\u6587\u4ef6 LGWR Log writer \u5c06REDO\u65e5\u5fd7\u7f13\u51b2\u533a\u7684\u810f\u6570\u636e\u5199\u5165\u5230\u5728\u7ebfredo\u65e5\u5fd7\u6587\u4ef6 SMON System Monitor \u68c0\u67e5\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u5fc5\u8981\u65f6\u5728\u5e93 Open \u65f6\u4fee\u590d\u6570\u636e\u6570\u636e\u5e93 PMON Process Monitor \u8d1f\u8d23\u5728\u4e00\u4e2aOracle\u8fdb\u7a0b\u5931\u8d25\u65f6\u6e05\u7406\u8d44\u6e90 CKPT Checkpoint process \u8d1f\u8d23\u5728\u6bcf\u5f53\u7f13\u51b2\u533a\u9ad8\u901f\u7f13\u5b58\uff08Database buffer Cache\uff09\u4e2d\u7684\u66f4\u6539\u6c38\u4e45\u5730\u8bb0\u5f55\u5230\u6570\u636e\u5e93\u4e2d\u65f6\uff0c\u66f4\u65b0 control files \u4e0e data files \u7684\u6570\u636e\u5e93\u72b6\u6001\u4fe1\u606f\u3002 \u5728\u68c0\u67e5\u70b9\u8fdb\u7a0b\u8d1f\u8d23\u5728\u68c0\u67e5\u70b9\u5411 DBWn \u53d1\u51fa\u4fe1\u53f7\uff0c \u66f4\u65b0 control files \u4e0e data files ,\u91cd\u65b0\u6307\u793a\u51fa\u6700\u65b0\u7684\u68c0\u67e5\u70b9\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cinit.ora\u4e2dCHECKPOINT_PROCESS=FALSE,\u610f\u4e3a\u4e0d\u542f\u7528CKPT\u8fdb\u7a0b\u7684\uff0c\u90a3\u8fd9\u4efb\u52a1\u662f\u7531LGWR\u5b8c\u6210\u3002 \u7531\u4e8eLGWR\u5728\u6570\u636e\u5e93\u6709\u8bb8\u591a\u6570\u636e\u6587\u4ef6\u65f6\uff0c\u6027\u80fd\u4f1a\u660e\u663e\u964d\u4f4e\uff0c\u9700\u8981\u542f\u7528CKPT\uff0cCKPT\u4e0d\u5199\u5757\u5230\u78c1\u76d8\uff0c\u800c\u7531DBWR\u8d1f\u8d23\u5b8c\u6210\u3002 ACHn \u6bcf\u6b21\u65e5\u5fd7\u65f6\uff0c\u5c06\u5df2\u6ee1\u7684\u65e5\u5fd7\u7ec4\u8fdb\u884c\u5907\u4efd\u6216\u5f52\u6863 \u670d\u52a1\u8fdb\u7a0b \u4e0e\u7528\u6237\u8fdb\u7a0b\u670d\u52a1 \u7528\u6237\u8fdb\u7a0b \u5ba2\u6237\u7aef\uff0c\u8d1f\u8d23\u5c06\u7528\u6237\u7684SQL\u8bed\u53e5\u8f6c\u9012\u7ed9\u670d\u52a1\u8fdb\u7a0b\uff0c\u5e76\u4ece\u670d\u52a1\u5668\u6bb5\u62ff\u56de\u67e5\u8be2\u6570\u636e\u3002 5. SCN \u4e00\u4e2a\u7531\u7cfb\u7edf\u5185\u90e8\u7ef4\u62a4\u7684\u5e8f\u5217\u53f7\u3002 \u5f53\u7cfb\u7edf\u9700\u8981\u66f4\u65b0\u7684\u65f6\u5019\u81ea\u52a8\u66f4\u65b0\uff0c\u662f\u7cfb\u7edf\u4e2d\u7ef4\u62a4\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u987a\u5e8f\u6062\u590d\u7684\u91cd\u8981\u6807\u5fd7\u3002 Oracle\u67b6\u6784\u5b9e\u73b0\u539f\u7406 \u4e00\u822c\u6240\u8bf4\u7684Oracle\u662f\u6307Oracle\u7684RDBMS(Relational databases Management system )\uff0c\u4e00\u5957Oracle\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u3002\u4e5f\u79f0Oracle Server Oracle Server = Instance + Database \uff08\u4e24\u8005\u5404\u72ec\u7acb\uff09 Instance = memory pool + backgroup process Database = Data Files + Control file + Redo log files \u6240\u4ee5 Oracle Server = \u5185\u5b58\u6c60+ \u540e\u53f0\u8fdb\u7a0b + \u6570\u636e\u6587\u4ef6 + \u63a7\u5236 + \u65e5\u5fd7\u6587\u4ef6 Oracle Server \u4e0e Database \u662f1\uff1aN\uff0c\u6bcf\u4e2aDatabase\u5404\u81ea\u72ec\u7acb\uff0c\u5404\u81ea\u633a\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u5168\u5957\u76f8\u5173\u6587\u4ef6\u3002 Database\u7531\u4e00\u4e9b\u7269\u7406\u6587\u4ef6\u7ec4\u6210\uff0c\u4e8c\u7ef4\u8868\u5b58\u50a8\u5728Database\u4e2d\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u8bfb\u53d6\uff0c\u9700\u8981\u901a\u8fc7OracleInstance\u624d\u80fd\u8bbf\u95eeDatabase\uff0c Instance\u8fde\u63a5Database\u53ea\u80fd1\uff1a1\uff0cDatabase\u53ef\u4ee5\u88abN\u4e2aInstance\u8fde\u63a5\u3002 Oracle\u67b6\u6784\u62bd\u8c61\uff1a Oracle\u4f53\u7cfb=\u5185\u5b58\u67b6\u6784 + \u8fdb\u7a0b\u67b6\u6784 + \u5b58\u50a8\u67b6\u6784 \u5185\u5b58\u67b6\u6784 Memory Stuctures SGA Shared Pool Library Cache Data Dictionary Cache Database Buffer Cache Java Pool Redo Log Buffer Large Pool Background Process Structures PMON ,SMON,DBWR,LGWR,CKPT,Others \u7cfb\u7edf\u5168\u5c40\u533a\uff08SGA\uff09 SGA\u7684\u9ed8\u8ba4Size \u7531Oracle\u5b89\u88c5\u65f6\u6839\u636eOS\u7684sysctl.conf\u51b3\u5b9a kernel.shmall = 2097152 kernel.shmmax = 2147483648 kernel.shmmni = 4096 kernel.sem = 250 32000 100 128 net.ipv4.ip_local_port_range = 1024 65000 net.core.rmem_default = 1048576 net.core.rmem_max = 1048576 net.core.wmem_default = 262144 net.core.wmem_max = 262144 \u68c0\u67e5SGA\u6b63\u4f7f\u7528\u7684\u5927\u5c0f select * from v$sga; NAME VALUE -------------------- ---------- Fixed Size 2022144 Variable Size 503317760 Database Buffers 1627389952 Redo Buffers 14753792 SQL show sgaTotal System Global Area 2147483648 bytes #\u5bf9\u5e94kernel.shmmax = 2147483648 Fixed Size 2022144 bytes Variable Size 503317760 bytes Database Buffers 1627389952 bytes Redo Buffers 14753792 bytes SGA\u5728Instance\u542f\u52a8\u65f6\u88ab\u5206\u914d\uff0c\u5173\u95ed\u65f6\u88ab\u91ca\u653e\u3002 \u4e00\u5b9a\u8303\u56f4\u5185\u81ea\u52a8\u54cd\u5e94DBA\u6307\u4ee4 SGA\u7ed3\u6784\uff1a Shared Pool Library Cache Data Dictionary Cache Database Buffer Cache \uff08\u9ad8\u901f\u7f13\u5b58\u7f13\u51b2\u533a\uff09 \u6267\u884cSQL\u7684\u533a\u57df\u3002 \u6267\u884cSQL\u4e0d\u76f4\u63a5\u5bf9\u78c1\u76d8\u7684\u6570\u636e\u6587\u4ef6\u66f4\u6539\u64cd\u4f5c\u3002 \u590d\u5236\u6570\u636e\u6587\u4ef6\u5230\u9ad8\u901f\u7f13\u5b58\u7f13\u51b2\u533a\uff08\u76f8\u5f53\u4e8e\u8be5SQL\u76f8\u5173\u7684\u6570\u636e\u6587\u4ef6\u526f\u672c\uff09\uff0c\u518d\u53bb\u66f4\u6539\u9ad8\u901f\u7f13\u5b58\u7f13\u51b2\u533a\u7684\u6570\u636e\u5757\uff0c\u8fd9\u4e9b\u6570\u636e\u5757\u526f\u672c\u4f1a\u4fdd\u7559\u4e00\u6bb5\u65f6\u95f4\uff0c\u76f4\u5230\u5176\u5360\u7528\u7684\u7f13\u51b2\u533a\u88ab\u53e6\u4e00\u4e2a\u6570\u636e\u5e93\u8986\u76d6\u4e3a\u6b62\uff08\u7f13\u51b2\u533aSize\u6709\u9650\uff09 \u67e5\u6570\u65f6\uff0c\u4e3a\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u67e5\u6570\u636e\u4e5f\u8981\u7ecf\u8fc7\u7f13\u5b58\u3002Session\u5efa\u7acb\u65f6\uff0c\u4f1a\u8ba1\u7b97\u51fa\u90a3\u4e9b\u6570\u636e\u5757\u5305\u542b\u5173\u952e\u7684 \u884c \uff0c\u5c06\u5b83\u4eec\u590d\u5236\u5230\u7f13\u51b2\u533a\u6765\u7f13\u5b58\u3002\u6b64\u540e\uff0c\u76f8\u5173\u7684\u5173\u952e\u884c\u4f1a\u4f20\u8f93\u5230Session\u7684PGA\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u3002\u8fd9\u4e9b\u6570\u636e\u4e5f\u4f1a\u5728\u6570\u636e\u5e93\u7f13\u5b58\u533a\u7f13\u5b58\u4e00\u6bb5\u65f6\u95f4\u3002 \u9891\u7e41\u8bbf\u95ee\u7684\u6570\u636e\u7f13\u5b58\u4e8e\u6570\u636e\u5e93\u7f13\u51b2\u533a\u7f13\u5b58\u4e2d\uff0c\u76ee\u7684\u662f\u51cf\u5c11\u78c1\u76d8I/O\u7684\u9700\u8981 \u5f53\u7f13\u51b2\u533a\u7684\u6570\u636e\u5757\u4e0e\u78c1\u76d8\u7684\u6570\u636e\u5757\u4e0d\u4e00\u81f4\u65f6\uff0c\u79f0\u4e3a\u201c\u810f\u7f13\u51b2\u533a\u201d\uff0c\u8fd9\u4e9b\u6570\u636e\u5757\u526f\u672c\u4e00\u5b9a\u8981\u5199\u5165\u5230\u78c1\u76d8\u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u6570\u636e\u5e93\u7f13\u51b2\u533a\u7f13\u5b58\u7684\u5927\u5c0f\u4f9d\u636e\uff1a \u7f13\u5b58\u5c31\u8db3\u591f\u5927\u3002\u4ee5\u4fbf\u7f13\u5b58\u6240\u6709\u88ab\u9891\u7e41\u8bbf\u95ee\u7684\u6570\u636e\u5757\u3002\u8fc7\u5c0f\uff0c\u78c1\u76d8I/O\u6b21\u6570\u4f1a\u8fc7\u591a\u3002 \u4e0d\u80fd\u592a\u5927\u3002\u9632\u6b62\u4e00\u4e9b\u6781\u5c11\u8bbf\u95ee\u7684\u6570\u636e\u5757\u4e5f\u4e00\u5e76\u590d\u5236\u5230\u7f13\u5b58\u4e2d\uff0c\u589e\u52a0\u7f13\u51b2\u533a\u7684\u641c\u7d22\u65f6\u95f4\u3002\u3001 \u8c03\u6574DB_CACHE_SIZE\u5927\u5c0f\uff1a \u67e5SGA\u5927\u5c0f\u3002\u56e0\u4e3aDB_CACHE_SIZE\u53d7SGA\u5f71\u54cd sql show parameter sga_max_size \u67e5SHARED_POOL_SIZE\u5927\u5c0f sql show parameter shared_pool_size \u8ba1\u7b97DB_CACHE_SIZE\u5927\u5c0f shared_pool_size + db_cache_size = SGA_max_size * 70% \u4fee\u6539DB_CAHCE_SIZE\u5927\u5c0f mysql alter system set db_cache_size = ***M scope=spfile sid='***'; conn / as sysdba shutdown immediate; startup show parameter db_cache_size; Java Pool \u53ea\u6709\u5f53\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5728\u6570\u636e\u5e93\u4e2d\u8fd0\u884cJAVA\u5b58\u50a8\u7a0b\u5e8f\u65f6\uff0c\u624d\u7528\u5230JAVA\u6c60 \u65e5\u5fd7\u7f13\u51b2\u533a Redo Log Buffer \u5c0f\u578b\u7684\uff0c\u7528\u4e8e\u77ed\u671f\u5b58\u50a8\u5c06\u5199\u5165\u5230\u78c1\u76d8\u7684Redo\u65e5\u5fd7\u7684 \u53d8\u66f4\u5411\u91cf \u7684\u4e34\u65f6\u533a\u57df\uff0c\u4e3b\u8981\u63d0\u4f9b\u66f4\u5feb\u7684\u65e5\u5fd7\u5904\u7406\u6548\u7387\u3002 shared pool \u8db3\u591f\u5927\uff0c\u4ee5\u7f13\u5b58\u6240\u6709\u7684\u9891\u7e41\u6267\u884c\u7684\u4ee3\u7801\u548c\u9891\u7e41\u8bbf\u95ee\u7684\u5bf9\u8c61\u5b9a\u4e49\u3002 \u8fc7\u5c0f\uff0c\u7531\u4e8e\u8be5\u5185\u5b58\u7a7a\u95f4\u662f\u7528\u6765\u5206\u6790SQL\u8bed\u53e5\uff08\u8bed\u4e49\u5206\u6790\uff09\uff0c\u8fc7\u5c0f\u5bfc\u81f4\u670d\u52a1\u5668\u4f1a\u8bdd\u4f1a\u62a2\u593a\u5176\u4e2d\u7684\u7a7a\u95f4\u6765\u8bed\u53e5\u3002\u8fd9\u4e9b\u8bed\u53e5\u53c8\u53ef\u80fd\u88ab\u5176\u4ed6\u8bed\u53e5\u91cd\u5199\u3002\u5982\u91cd\u65b0\u6267\u884c\u65f6\uff0c\u5c06\u4e0d\u5f97\u4e0d\u91cd\u65b0\u5206\u6790\u8bed\u53e5\u3002 \u8fc7\u5927\uff0c\u4f1a\u5c06\u4ec5\u6267\u884c\u4e00\u6b21\u7684\u8bed\u53e5\u4e5f\u7f13\u5b58\u4e86\uff0c\u589e\u5927\u4e86\u641c\u7d22\u7684\u7f13\u5b58\u91cf\uff0c\u589e\u957f\u4e86\u641c\u7d22\u65f6\u95f4\u3002 \u5176\u5185\u7684\u4e09\u4e2a\u6570\u636e\u7ed3\u6784\uff1a \u5e93\u7f13\u5b58 \uff08library cache\uff09 \uff1a\u5b58\u50a8\u6700\u8fd1\u6267\u884c\u7684\u4ee3\u7801 \u6570\u636e\u5b57\u5178\u7f13\u5b58\uff08data diction cache\uff09\uff1a\u5b58\u50a8\u6700\u8fd1\u4f7f\u7528\u7684\u5bf9\u8c61\u5b9a\u4e49 PL/SQL\u7f13\u51b2\u533a \uff1a \u5b58\u50a8PL/SQL\u7684\u8fc7\u7a0b\uff0c\u51fd\u6570 \u8c03\u6574\u5171\u4eab\u6c60\u5927\u5c0f select component,current_size,min_size,max_size fromv$sga_dynamic_components; \u2013\u663e\u793a\u53ef\u80fd\u52a8\u6001\u5927\u5c0f\u7684SGA\u7ec4\u4ef6\u7684\u5f53\u524d\u6700\u5927\u548c\u6700\u5c0f\u7684\u5bb9\u91cf alter system set shared_pool_size=101M; Large Pool \u4f9b\u5171\u4eab\u7684\u670d\u52a1\u5668\u8fdb\u7a0b\u4f7f\u7528\u3002 \u8fdb\u7a0b\u67b6\u6784 \u7528\u6237\u8fde\u63a5\u8fdb\u7a0b \u540e\u53f0\u8fdb\u7a0b \u7528\u6237\u8fde\u63a5\u8fdb\u7a0b \u7528\u6237\u8fde\u63a5\u8fdb\u7a0b=\u7528\u6237\u8fdb\u7a0b\uff0b\u670d\u52a1\u8fdb\u7a0b + PGA User Process \u5f53\u7528\u6237\u8bf7\u6c42\u8fde\u63a5Oracle\u670d\u52a1\u5668\u65f6\uff0c\u5728\u5ba2\u6237\u7aef\u521b\u5efa\u8be5\u8fdb\u7a0b \u4f5c\u75281. \u4e3aDB User\u4e0eServer Process\u5efa\u7acb\u8fde\u63a5 \u4f5c\u75282. \u4e0d\u4e0eOracle Server\u76f4\u63a5\u4ea4\u4e92\u3002 Server Process \u7528\u6237\u5efa\u7acb\u4f1a\u8bdd\u65f6\u542f\u52a8\uff0c\u8fde\u63a5\u5b9e\u4f8b \u4f5c\u7528\uff1a \u5904\u7406Database User\u4e0eOralce Server\u4e4b\u95f4\u7684\u8fde\u63a5 \u4e0eOracle Server\u76f4\u63a5\u4ea4\u4e92 \u590d\u5236\u6267\u884c\u548c\u8fd4\u56de\u7ed3\u679c \u8fd0\u4f5c\u539f\u7406\uff1a\u5f53User\u4e0eUserPorcess\u5efa\u7acb\u4e86\u4e00\u4e2aConnect\u4e4b\u540e\uff0cOracleServer\u4f1a\u521b\u5efa\u4e00\u4e2aServerProcess\uff0c\u7136\u540e\u7531UserProcess\u4e0eServerProcess\u5efa\u7acb\u8fde\u63a5\uff0cServerProcess\u4f1a\u901a\u8fc7User\u63d0\u4ea4\u7684\u8bf7\u6c42\u4fe1\u606f\u6765\u786e\u5b9a\u4e0eOracle Instance\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd\u3002 Session\u4f1a\u8bdd\uff1aUser\u901a\u8fc7UserProcess\uff08\u51c6\u786e\u6765\u8bf4\u662fServerProcess\uff09\u4e0eOralceInstance\u5efa\u7acb\u7684\u8fde\u63a5\uff0c\u79f0\u4e4b\u4e3a\u4f1a\u8bdd\uff0c\u4e00\u4e2aUser\u53ef\u4ee5N\u4e2a\u4f1a\u8bdd\uff0cUser\u53ef\u4ee5\u591a\u6b21\u8fde\u63a5\u5230\u540c\u4fee\u5b9e\u4f8b\uff0c\u591a\u4e2aSession\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2aConnect. Background Process \u968f\u5b9e\u4f8b\u542f\u52a8\u800c\u542f\u52a8\u3002 PGA (\u7a0b\u5e8f\u5168\u5c40\u533a) PGA: Oracle Server Process \u5206\u914d\u51fa\u6765\u7684\u5185\u5b58\u533a\uff0c\u4e13\u7528\u7528\u4e8e\u5f53\u524d\u7684User Session\u7684\u79c1\u6709\u533a\u57df\u3002\u7528\u6237\u4e0d\u540cPGA\u4e0d\u540c\u3002 PGA\u542b\u6709OracleServer Process\u6570\u636e\u548c\u63a7\u5236\u4fe1\u606f\u7684\u5185\u5b58\u533a\u57df\uff0c\u75313\u90e8\u5206\u7ec4\u6210\uff1a \u6808\u7a7a\u95f4\uff1a\u5b58\u50a8Session\u7684\u53d8\u91cf\uff0c\u6570\u7ec4\u7b49\u7684\u5185\u5b58\u7a7a\u95f4 Session Info\uff1a\u5982\u8fd0\u884c\u7684\u4e0d\u662f\u591a\u7ebf\u7a0b\u670d\u52a1\u5668\uff0c\u4f1a\u8bdd\u4fe1\u606f\u4fdd\u5b58\u5728PGA\u4e2d\uff0c\u5982\u679c\u662f\u591a\u7ebf\u7a0b\u670d\u52a1\u5668\u5219\u4fdd\u5b58\u5728SGA\u4e2d\u3002 \u79c1\u6709SQL\u533a\uff1a\u4fdd\u5b58\u7ed1\u5b9a\u53d8\u66f4\uff08binding variables\uff09\u548c\u8fd0\u884c\u65f6\u7f13\u51b2\u533a\uff08runtime buffers\uff09\u7b49\u4fe1\u606f Oracle\u7684connect\u8fde\u63a5\u548csession\u4f1a\u8bdd\u4e0eUser Process\u7d27\u5bc6\u76f8\u5173\u3002 db_name\u548cInstance_name\u5171\u540c\u786e\u5b9a\u4e00\u4e2aDB\uff0cInstance_name\u7528\u4f5cOralce\u4e0eOS\u7684\u8054\u7cfb\u3002\u4e5f\u662f\u4e0eOracle Server\u4e0e\u5916\u90e8\u8fde\u63a5\u4f7f\u7528\u3002 User\u63d0\u4ea4\u8fde\u63a5\u65f6\uff0cUserProcess \u5148\u4e0eServerProcess\u8fde\u63a5\uff0cServerProcess\u4f9d\u7167\u8bf7\u6c42\u4e2d\u7684db_name\u4e0einstance_name\u6765\u786e\u5b9a\u8fde\u63a5\u7684\u6570\u636e\u5e93\uff08\u751f\u4ea7\u4f1a\u6709\u591a\u4e2a\u6570\u636e\u5e93\uff09 \u786e\u4fdd\u4e86\u4e00\u673a\u591a\u5e93\uff0c\u8fd8\u80fd\u5f7c\u6b64\u4fdd\u6301\u72ec\u7acb\u6027\uff0c\u540c\u4e00\u4e2aDatabase\u53ef\u88ab\u591a\u4e2a\u5e93\u5185\u7684\u7528\u6237\u53d1\u8d77Instance\u8fde\u63a5\u3002\u56e0\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u5e93\u7684\u90fd\u53ef\u6709\u540c\u540d\u7684sys\uff0csystem\u7b49\u7528\u6237\u3002 \u540e\u53f0\u8fdb\u7a0b \u4e3b\u8981\u662f\u5b8c\u6210\u6570\u636e\u5e93\u7ba1\u7406\u4efb\u52a1\uff0c\u5b83\u662fInstance\u4e0eOracle Database\u7684\u7ebd\u5e26\uff0c\u5206\u4e3a\uff1a \u6838\u5fc3\u8fdb\u7a0b\uff08\u5fc5\u987b\u5b58\u5728\uff0c\u4e00\u6b7b\u5168\u6302\uff0c\u540c\u751f\u5171\u6b7b\uff09 \u5e38\u7528\u7684\u6838\u5fc3\u8fdb\u7a0b\u5982\u4e0b\uff1a6\u4e2a SYS@RACDB_1 select name ,description from v$bgprocess where paddr '00'; NAME DESCRIPTION ----- ---------------------------------------------------------------- PMON process cleanup VKTM Virtual Keeper of TiMe process GEN0 generic0 DIAG diagnosibility process DBRM DataBase Resource Manager RSMN Remote Slave Monitor PING interconnect latency measurement PSP0 process spawner 0 ACMS Atomic Controlfile to Memory Server DIA0 diagnosibility process 0 LMON global enqueue service monitor NAME DESCRIPTION ----- ---------------------------------------------------------------- LMD0 global enqueue service daemon 0 LMS0 global cache service process 0 RMS0 rac management server LMHB lm heartbeat monitor MMAN Memory Manager DBW0 db writer process 0 LGWR Redo etc. LCK0 Lock Process 0 CKPT checkpoint SMON System Monitor Process RECO distributed recovery NAME DESCRIPTION ----- ---------------------------------------------------------------- GTX0 Global Txn process 0 CJQ0 Job Queue Coordinator RCBG Result Cache: Background QMNC AQ Coordinator RBAL ASM Rebalance master ASMB ASM Background MARK mark AU for resync koordinator MMON Manageability Monitor Process MMNL Manageability Monitor Process 2 31 rows selected. 1.1. \u6570\u636e\u5e93\u5199\u5165\u8fdb\u7a0b\uff08DBWn\uff09 ServerProcess\u8fde\u63a5Oracle\u540e\uff0c\u901a\u8fc7\u6570\u636e\u5e93\u5199\u5165\u8fdb\u7a0b\uff08DBWn\uff09\u5c06\u6570\u636e\u7f13\u51b2\u533a\u4e2d\u7684\u201c\u810f\u201d\u7f13\u51b2\u533a\u7684\u6570\u636e\uff08\u810f\u6570\u636e\uff09\u5199\u5165\u5230\u5b58\u50a8\u7ed3\u6784\uff08\u6570\u636e\u6587\u4ef6\uff0c\u78c1\u76d8\u6587\u4ef6\uff09 \u5c06\u6570\u636e\u5199\u5230\u78c1\u76d8\uff0c\u4e5f\u5c31\u662f\u6570\u636e\u4e3b\u52a0\u53d8\u5316\u5199\u5165\u5230\u6570\u636e\u6587\u4ef6\u3002\u53ea\u505a\u8fd9\u4e00\u4ef6\u4e8b\u3002 \u6700\u591a20\u4e2a\u8fdb\u7a0b\uff0cCPU\u4e2a\u6570 =\u8fdb\u7a0b\u6570=20\uff0cDBW[0-9]~DBW[a-j] 1.2. \u68c0\u67e5\u70b9 \uff08CKPT\uff09 CheckPoint\uff08CKPT\uff09 \u4e3b\u8981\u7528\u9014\u66f4\u65b0\u6570\u636e\u6587\u4ef6\u5934\uff0c\u66f4\u65b0Controlfile\u548c\u89e6\u53d1DBWn\u6570\u636e\u5e93\u5199\u8fdb\u7a0b CHPT\u964d\u4f4e\u6570\u636e\u5e93\u6027\u80fd\uff0c\u4f46\u63d0\u9ad8\u4e86\u6062\u590d\u80fd\u529b\u3002\u53ef\u7406\u89e3\u4e3a\uff1a\u9636\u6bb5\u6027\u4fdd\u5b58\u6570\u636e\uff0c\u4e00\u5b9a\u6761\u4ef6\u6ee1\u8db3\u5c31\u89e6\u53d1\uff0c\u6267\u884cDBWn\u5b58\u76d8\u64cd\u4f5c\u3002 1.3. \u8fdb\u7a0b\u76d1\u89c6\u8fdb\u7a0b\uff08PMON\uff09 Process Monitor\uff1a \u5728\u540e\u53f0\u8fdb\u7a0b\u6267\u884c\u5931\u8d25\u540e\uff0c\u7531PMON\u8d1f\u8d23\u6e05\u7406\u6570\u636e\u5e93\u7f13\u5b58\u548c\u95f2\u7f6e\u8d44\u6e90\uff0cOracle\u7684\u7ef4\u62a4\u673a\u5236\u3002 \u6e05\u9664\u6b7b\u8fdb\u7a0b \u91cd\u65b0\u542f\u52a8\u90e8\u5206\u8fdb\u7a0b\uff08\u8c03\u5ea6\u8fdb\u7a0b\u7b49\uff09 \u76d1\u542c\u81ea\u52a8\u6ce8\u518c \u56de\u6eda\u4e8b\u52a1 \u91ca\u653e\u9501 \u91ca\u653e\u5176\u4ed6\u8d44\u6e90 1.4. \u7cfb\u7edf\u76d1\u89c6\u8fdb\u7a0b\uff08SMON\uff09 SMON\u5728\u542f\u52a8\u6570\u636e\u5e93\u65f6\uff0c\u4f1a\u81ea\u52a8\u5728\u5b9e\u4f8b\u5d29\u6e83\u65f6\u8fdb\u884c\u81ea\u52a8\u4fee\u590d\u3002 \u6e05\u9664\u4f5c\u5e9f\u7684\u6392\u5e8f\u4e34\u65f6\u6bb5\uff0c\u56de\u6536\u6574\u7406\u788e\u7247\uff0c\u5408\u5e76\u7a7a\u95f2\u7a7a\u95f4\uff0c\u91ca\u653e\u4e34\u65f6\u6bb5\uff0c\u7ef4\u62a4\u95ea\u56de\u7684\u65f6\u95f4\u70b9\u3002 \u5728\u8001\u7248\u672c\u4e2d\uff0c\u5927\u91cf\u5220\u9664\u8868\u65f6\uff0cSMON\u4f1a\u4e00\u76f4\u5f88\u5fd9\uff0c\u76f4\u5230\u6240\u6709\u788e\u7247\u7a7a\u95f4\u90fd\u6574\u7406\u5b8c\u3002 1.5. \u91cd\u505a\u65e5\u5fd7\u6587\u4ef6\u4e0e\u65e5\u5fd7\u5199\u5165\u8fdb\u7a0b\uff08Redo Log Files LGWR\uff09 \u4e3b\u8981\u7528\u4e8e\u8bb0\u5f55\u6570\u636e\u5e93\u7684\u6539\u53d8\u4e0e\u8bb0\u5f55\u6570\u636e\u5e93\u88ab\u6539\u53d8\u4e4b\u524d\u6709\u539f\u59cb\u72b6\u6001\uff0c\u6240\u4ee5\u5e94\u5f53\u5bf9\u5176\u4f5c\u591a\u5907\u4efd\uff0c\u7528\u4e8e\u6062\u590d\u548c\u6392\u9519\u3002 \u6fc0\u6d3bLGWR\u6761\u4ef6\uff1a \u63d0\u4ea4\uff08COMMIT\uff09 \u65e5\u5fd7\u7f13\u51b2\u533a\u8d85\u8fc71/3 per 3 seconds \u6bcf\u6b21DBWn\u6267\u884c\u4e4b\u524d \u975e\u6838\u5fc3\u8fdb\u7a0b\uff08\u5b8c\u6210\u6570\u636e\u5e93\u7684\u989d\u5916\u5de5\u4f5c\uff0c\u5c11\u4e86\u6570\u636e\u5e93\u4e5f\u53ef\u6b63\u5e38\u5de5\u4f5c\uff09 #### 2.1 \u5f52\u6863\u8fdb\u7a0b\uff08ARCn\uff09 \u5b58\u50a8\u67b6\u6784 Oracle RDBMS\u5b58\u50a8\u7ed3\u6784\u4e3b\u8981\u7531Database\u7ec4\u6210\u3002Database\u53c8\u53ef\u4ee5\u5206\u4e3a\u7269\u7406\u7ed3\u6784\u4e0e\u903b\u8f91\u7ed3\u6784\u7406\u89e3\u3002 \u7269\u7406\u7ed3\u6784 OS\u7684\u6587\u4ef6\u96c6\u5408\uff0cOS\u7684\u7269\u7406\u6587\u4ef6\uff1a 1. \u6570\u636e\u6587\u4ef6 \u6570\u636e\u7684\u4ed3\u5e93 \u6240\u6709\u7684\u6570\u636e\u5e93\u6570\u636e \u53ea\u5c5e\u4e8e\u4e00\u4e2a\u5e93 \u6765\u81ea\u88ab\u79f0\u4e3a\u201c\u8868\u7a7a\u95f4\u201d\u7684\u6570\u636e\u5e93\u5b58\u50a8\u903b\u8f91\u5355\u5143 \u53ef\u4ee5\u76f4\u8bfb\u8fdb\u5185\u5b58 \uff0c\u6267\u884cSQL\u65f6\uff0c\u5c06\u76f8\u5173\u6570\u636e\u6587\u4ef6\u7f13\u5b58\u533a\u526f\u672c\u6267\u884c\u3002 \u5907\u4efd\u7b56\u7565\u53ef\u4ee5\u4fdd\u62a4\u6570\u636e\u6587\u4ef6\u3002 2. \u63a7\u5236\u6587\u4ef6 \u5305\u542b\u7ef4\u62a4\u548c\u9a8c\u8bc1\u6570\u636e\u5e93\u5b8c\u4e8b\u6027\u7684\u5fc5\u8981\u4fe1\u606f\u3002 \u8bb0\u5f55\u8054\u673a\u91cd\u505a\u65e5\u5fd7\u6587\u4ef6\uff0c\u6570\u636e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u66f4\u65b0\u7684\u5f52\u6863\u65e5\u5fd7\u7684\u4f4d\u7f6e \u5b58\u50a8\u7740\u7ef4\u62a4\u6570\u636e\u5e93\u5b8c\u4e8b\u6027\u6240\u9700\u8981\u7684\u4fe1\u606f\uff0c\u6570\u636e\u5e93\u540d \u4e8c\u578b\u5236\u5b58\u50a8\uff0c\u4e0d\u80fd\u7f16\u8f91\u5185\u5bb9\u3002 3. \u91cd\u505a\u65e5\u5fd7\u6587\u4ef6 \u5bf9\u6570\u636e\u5e93\u6240\u505a\u7684\u66f4\u6539\u8bb0\u5f55\u4fdd\u5b58\u4ee5\u4fbf\u6062\u590d\u3002 \u539f\u7406\uff1a \u6309\u65f6\u95f4\u987a\u5e8f\uff0c\u5c06\u6570\u636e\u5e93\u7684\u4e00\u8fde\u4e32\u53d8\u66f4\u5411\u91cf\uff08\u505a\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff09\u5b58\u50a8\u8d77\u6765\uff08\u5c06\u53d8\u66f4\u7684\u5730\u65b9\u6807\u8bb0\u8d77\u6765\uff09 \u5185\u5bb9\u5305\u62ec\u6240\u6709\u5df2\u7ecf\u53d8\u66f4\u5b8c\u6210\u64cd\u4f5c\u7684\u4fe1\u606f\u548c\u5b8c\u6210\u64cd\u4f5c\u4e4b\u524d\u7684\u6570\u636e\u5e93\u72b6\u6001 \u5982\u679c\u6570\u636e\u6587\u4ef6\u635f\u574f\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a \u53d8\u66f4\u5411\u91cf \u5e94\u7528\u4e8e\u6570\u636e\u6587\u4ef6\u5907\u4efd\u8fdb\u884c\u91cd\u505a\uff08\u91cd\u5efa\uff09\u5de5\u4f5c\u3002\u5c06\u5b83\u6062\u590d\u5230\u53d1\u751f\u6545\u969c\u7684\u90a3\u4e00\u523b\u524d\u7684\u72b6\u6001\u3002 \u65e5\u5fd7\u6587\u4ef6\u7c7b\u578b\uff1a \u8054\u673a\u91cd\u505a\u65e5\u5fd7\u6587\u4ef6\uff1a\u8bb0\u5f55\u8fde\u7eed\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002 \u5f52\u6863\u65e5\u5fd7\u6587\u4ef6\uff08Archive Log Files\uff09\uff1a\u7528\u4e8e\u65f6\u95f4\u70b9\u6062\u590d\uff0c\u5f53Redo Log Files\u5b58\u6ee1\u65f6\uff0c\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5f52\u6863\u5907\u4efd\uff0c\u4ee5\u4fbf\u8fd8\u6709\u6570\u636e\u65f6\u4f7f\u7528\u3002 SELECT NAME FROM V$LOGFILE V$LOGFILE y\u8bb0\u5f55\u4e86redolog\u6587\u4ef6\u5217\u8868\u3002 4. \u5f52\u6863\u65e5\u5fd7\u6587\u4ef6 5. \u53c2\u6570\u6587\u4ef6 SGA\u7ed3\u6784\u4f1a\u6839\u636e\u4e9b\u53c2\u6570\u56e0\u4e3a\u6709\u4eba\u8bbe\u7f6e\u5185\u5b58\u548c\u62c9\u8d77\u540e\u53f0\u7a0b\u5e8f\u3002 6. \u53e3\u4ee4\u6587\u4ef6 \u5f53\u7528\u6237\u4ee5User/Pwd\u5efa\u7acb\u4f1a\u8bdd\u65f6\uff0cOracle\u6839\u636e\u5b58\u50a8\u6570\u636e\u5b57\u5178\u7684\u7528\u6237\u5b9a\u4e49\u5bf9\u7528\u6237\u540d\u4e0e\u5bc6\u7801\u8fdb\u884c\u9a8c\u8bc1\u3002 \u903b\u8f91\u7ed3\u6784 \u8868\u7a7a\u95f4\uff0c\u5178\u578b\u7684\u903b\u8f91\u7ed3\u6784\u7c7b\u578b\u3002\u5305\u542b\u82e5\u5e72\u4e2a\u6570\u636e\u6587\u4ef6\u3002 \u8868\u7a7a\u95f4\uff0c\u5b58\u50a8\u6570\u636e\u5e93\u7684\u5bf9\u8c61\uff0c\u6570\u636e\u5e93\u5f00\u8f9f\u51fa\u6765\u7684\u4e00\u4e2a\u903b\u8f91\u7a7a\u95f4\u3002 \u4fe1\u606f\u5b58\u50a8\u7684\u6700\u5927\u903b\u8f91\u5355\u5143 \u5b58\u653e\u6570\u636e\u5e93\u6587\u4ef6\u7684\u5730\u65b9\uff0c\u6570\u636e\u53c8\u88ab\u5b58\u50a8\u5728\u8868\u7a7a\u95f4\u7684\u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u4e00\u4e2a\u5e93\u53ef\u7531\u591a\u4e2a\u8868\u7a7a\u95f4\u7ec4\u6210\u3002 Oracle\u8c03\u4f18\u5c31\u662f\u901a\u8fc7\u8868\u7a7a\u95f4\u6765\u5b9e\u73b0\uff08oracle\u6570\u636e\u5e93\u72ec\u7279\u7684\u9ad8\u7ea7\u5e94\u7528\uff09 \u903b\u8f91\u7a7a\u95f4\u5230\u7269\u7406\u7a7a\u95f4\u7684\u6620\u5c04 \u6bb5\uff0c\u533a\uff0c\u5757 \u6267\u884cSQL\u7684\u6d41\u7a0b\uff1a \u5c06SQL\u52a0\u8f7d\u5165\u6570\u636e\u5e93\u7f13\u51b2\u533a \u5c06\u76f8\u5173\u7684\u6570\u636e\u6587\u4ef6\u9ad8\u4ef7\u6536\u8d2d\u52a0\u8f7d\u5165\u6570\u636e\u5e93\u7f13\u51b2\u533a\u3002 \u6267\u884cSQL,\u4fee\u6539\u6570\u636e\u6587\u4ef6\u526f\u672c\uff0c\u5f62\u6210\u201c\u810f\u7f13\u51b2\u533a\u201d\u3002 CKPT\u68c0\u6d4b\u5230\u201c\u810f\u7f13\u51b2\u533a\u201d\uff0c\u8c03\u7528DBWn\u3002 \u5728DBWn\u8fd0\u884c\u4e4b\u524d\uff0c\u5148\u8fd0\u884cLGWR\uff0c\u5c06\u6570\u636e\u6587\u4ef6\u7684\u539f\u59cb\u72b6\u6001\u548c\u6539\u53d8\u8bb0\u5f55\u5230Redo Log Files\u3002 \u8fd0\u884cDBWn\uff0c\u5c06\u201c\u810f\u7f13\u51b2\u533a\u201c\u7684\u5185\u5bb9\u5199\u5165\u5230\u6570\u636e\u6587\u4ef6\u3002 CKPT\u4fee\u6539\u63a7\u5236\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u5934\u90e8\u4fe1\u606f\u3002 SMON\u56de\u6536\u4e0d\u5fc5\u8981\u7684\u7a7a\u95f4\u8d44\u6e90\u3002 \u6700\u540e \u4e3e\u4f8bRDBMS\u8fd0\u884c\u6d41\u7a0b\uff1a User access Oracle Server\u4e4b\u524d\u63d0\u4ea4\u8bf7\u6c42\uff08db_name,Instance_name,username,password\u7b49\u4fe1\u606f\uff09\uff0cOracle Server\u63a5\u6536\u5230\u8bf7\u6c42\u5e76\u901a\u8fc7Password File\u9a8c\u8bc1\u540e\uff0c\u5206\u914dSGA\u5185\u5b58\u6c60\uff0c\u542f\u52a8\u540e\u53f0\u8fdb\u7a0b\u65f6\uff0c\u521b\u5efa\u5e76\u542f\u52a8\u5b9e\u4f8b\u3002 \u5728\u542f\u52a8\u5b9e\u4f8b\u4e4b\u540eUser Process\u4e0eServer Process\u5efa\u7acbConnect\u3002 \u518d\u901a\u8fc7Server Process\u4e0eOracle Instance\u5b8c\u6210\u5efa\u7acbSession\u3002 \u7528\u6237\u6267\u884cSQL\u65f6\uff0c\u7531Server Process\u63a5\u5230\u5e76\u76f4\u63a5\u5230Oracle\u4ea4\u4e92\u3002 SQL\u8bed\u53e5\u901a\u8fc7Server Process\u5230\u8fbeOracle Instance\uff0c\u518d\u5c06SQL\u8f7d\u5165\u6570\u636e\u5e93\u7f13\u51b2\u533a Server Process\u901a\u8fc7Oracle Database\u4e0eSQL\u8bed\u53e5\u76f8\u5173\u7684\u6570\u636e\u5757\u526f\u672c\u52a0\u8f7d\u5230\u7f13\u51b2\u533a\u4e2d\u3002 \u6570\u636e\u5e93\u7f13\u5b58\u533a\u6267\u884cSQL\u8bed\u53e5\uff0c\u5e76\u4ea7\u751f\u201c\u810f\u7f13\u51b2\u533a\u201d\u3002 CKPT\u68c0\u67e5\u5230\u201c\u810f\u7f13\u51b2\u533a\u201d\uff0c\u5e76\u8c03\u7528DBWn\uff0cDBWn\u8fd0\u884c\u4e4b\u524d\uff0c\u7531LGWR\u5c06\u6570\u636e\u6587\u4ef6\u7684\u539f\u59cb\u72b6\u6001\uff0c\u6539\u53d8\u7b49\u4fe1\u606f\u8bb0\u5f55\u5230Redo Log Files\u3002 DBWn\u5c06\u66f4\u65b0\u7684\u5185\u5bb9\u5199\u5165\u5230\u78c1\u76d8\u4e2d\u6570\u636e\u6587\u4ef6\u3002 \u8fd4\u56de\u7ed3\u679c\u7ed9\u7528\u6237\u3002 [toc]","title":"OracleArchitecture"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#oracle","text":"","title":"Oracle \u57fa\u7840\u67b6\u6784\u77e5\u8bc6"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#1","text":"Oracle\u7684\u57fa\u672c\u7ed3\u6784\uff1a Oracle\u7684\u7269\u7406\u7ed3\u6784\u662f\u7531\uff1a ControlFile DataFile Redo Files Spfile Archive log files password File (pwdSID.ora) \u4f9d\u636e\u4f7f\u7528\u65f6\u662f\u5426\u88ab\u8c03\u5165\u5185\u5b58\u53ef\u5206\u4e24\u7c7b\uff1a 1.\u6570\u636e\u5e93\u6587\u4ef6\uff1a Control file \u542b\u6709\u7ef4\u62a4\u4e0e\u9a8c\u8bc1\u6570\u636e\u5e93\u5b8c\u6574\u6027\u7684\u5fc5\u8981\u4fe1\u606f(SCN\u2026,\u8bc6\u522b\u6570\u636e\u6587\u4ef6\u4e0eredo log files,\u6bcf\u4e2a\u5e93\u81f3\u5c11\u4e00\u4e2a\u4ee5\u4e0aControl file)\uff0c\u63a7\u5236\u6587\u4ef6 includes\uff1a - \u6570\u636e\u5e93\u540d (db_name) - tablespace info - Names and location of associated data file and redo log files - All names and positions of redo log files - The timestamp of th database creation - The current log file sequence number - Checkpoint information - \u5173\u4e8eredo\u65e5\u5fd7\u548c\u5f52\u6863\u7684\u5f53\u524d\u72b6\u6001\u4fe1\u606f Data files \u5b58\u50a8\u6570\u636e\u7684\u6587\u4ef6\u3002\u4ee3\u8868\u6839\u636e\u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\u4e0e\u6570\u91cf\u51b3\u5b9a\u6574\u4e2a\u6570\u636e\u5e93\u7684\u5bb9\u79ef\u3002 Redo log files \u542b\u6709\u6570\u636e\u5e93\u6240\u6709\u7684\u66f4\u6539\u8bb0\u5f55\uff0c\u4ee5\u9632\u6545\u969c\u65f6\u542f\u7528\u6570\u636e\u6062\u590d\u3002 \u4e00\u4e2a\u6570\u636e\u5e93\u81f3\u5c11\u4e00\u5bf9\uff08\u4e24\u4e2a\uff09redo log file\u3002 Trace files \u5728Instance\u4e2d\u8fd0\u884c\u7684\u6bcf\u4e2a\u540e\u53f0\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2aTrace file \u4e0e\u4e4b\u76f8\u8fde\u3002 \u8bb0\u5f55\u540e\u53f0\u8fdb\u7a0b\u9047\u5230\u7684\u91cd\u5927\u4e8b\u4ef6\u7684\u4fe1\u606f Alert files \u7279\u6b8a\u7684\u8ddf\u8e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u4e00\u4e2a\u8ddf\u8e2a\u6587\u4ef6\u540c\u6b65\u8bb0\u8f7d\u6570\u636e\u5e93\u7684\u6d88\u606f\u548c\u9519\u8bef\u3002 2.\u975e\u6570\u636e\u5e93\u6587\u4ef6: parameter file (spfileSID.ora) \u5305\u62ec\u5927\u91cf\u5f71\u54cd\u5b9e\u4f8b\u529f\u80fd\u7684\u8bbe\u5b9a\uff0c\u5982\uff1a Control file \u7684\u5b9a\u4f4d Oracle\u7528\u6765\u7f13\u5b58\u4ece\u78c1\u76d8\u4e0a\u8bfb\u53d6\u7684\u6570\u636e\u7684\u5185\u5b58\u6570\u91cf \u9ed8\u8ba4\u4f18\u5316\u7a0b\u5e8f\u7684\u9009\u62e9\u548c\u6570\u636e\u5e93\u76f8\u5173\uff0c\u6267\u884c\u4e24\u4e2a\u91cd\u8981\u7684\u529f\u80fd\uff0c\u4e3a\u6570\u636e\u5e93\u6307\u51fa\u63a7\u5236\u6587\u4ef6\u548c\u6307\u51fa\u5f52\u6863\u65e5\u5fd7\u7684\u76ee\u6807\u3002 password file ( pwdSID.ora ) \u8ba4\u8bc1\u54ea\u4e9b\u7528\u6237\u6709\u542f\u52a8\u548c\u5173\u95edOracle\u5b9e\u4f8b\u3002 \u5f52\u6863\u6587\u4ef6\uff1a Redo log file\u7684\u8131\u673a\u526f\u672c\uff0c\u8fd9\u4e9b\u526f\u672c\u53ef\u80fd\u5bf9\u4e8e\u4ece\u4ecb\u8d28\u5931\u8d25\u4e2d\u8fdb\u884c\u6062\u590d\u5f88\u662f\u5fc5\u8981\u3002","title":"1. \u7269\u7406\u7ed3\u6784"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#2tablespacesegmentextentblock","text":"","title":"2.\u903b\u8f91\u7ed3\u6784\uff08Tablespace\uff0cSegment\uff0cExtent\uff0cBlock\uff09"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#1-tablespace","text":"\u57fa\u672c\u903b\u8f91\u7ed3\u6784\uff0c\u4e00\u7cfb\u5217\u6570\u636e\u6587\u4ef6\u7684\u96c6\u5408\u3002","title":"1. Tablespace"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#2-segment","text":"\u5bf9\u8c61\u5728\u6570\u636e\u5e93\u5360\u7528\u7684\u7a7a\u95f4","title":"2. Segment"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#3-extent","text":"\u4e3a\u6570\u636e\u4e00\u6b21\u6027\u9884\u7559\u7684\u4e00\u4e2a \u8f83\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\u3002","title":"3. Extent"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#4block","text":"Oracle\u6700\u57fa\u672c\u7684\u5b58\u50a8\u5355\u4f4d\uff0c\u5728\u5efa\u7acb\u6570\u636e\u5e93\u65f6\u5019\u88ab\u6307\u5b9a\u3002","title":"4.Block"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#3-sgapga","text":"","title":"3.\u5185\u5b58\u7ed3\u6784 (SGA,PGA)"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#sga","text":"\u5b58\u50a8\u6570\u636e\u5e93\u4fe1\u606f\u7684\u5185\u5b58\u533a\u57df\uff0c\u4e14\u4e3a\u6570\u636e\u5e93\u8fdb\u7a0b\u6240\u5171\u4eab\u3002 \u5305\u542b\u6570\u636e\u5e93\u7684\u6570\u636e\u4e0e\u63a7\u5236\u4fe1\u606f\u3002 \u5728Oracle\u670d\u52a1\u5668\u6240\u9a7b\u7559\u7684\u8ba1\u7b97\u673a\u7684\u7269\u7406\u5185\u5b58\u4e2d\u5206\u914d\u51fa\u6765\u3002\u5b9e\u9645\u5185\u5b58\u4e0d\u591f\uff0c\u5411\u865a\u62df\u5185\u5b58\u5199\u5165\u3002","title":"SGA"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#pga","text":"\u5305\u542b\u5355\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b\u6216\u5355\u4e2a\u540e\u53f0\u8fdb\u7a0b\u7684\u6570\u636e\u4e0e\u63a7\u5236\u4fe1\u606f\u3002 \u4e0e\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u4fe1\u606f\u7684SGA\u76f8\u53cd\uff0cPGA\u53ea\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528 PGA\u521b\u5efa\u8fdb\u7a0b\u65f6\u5206\u914d\uff0c\u7ec8\u6b62\u8fdb\u7a0b\u65f6\u56de\u6536\u5185\u5b58\u3002","title":"PGA"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#4","text":"","title":"4. \u540e\u53f0\u8fdb\u7a0b"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#dbwr-database-writer","text":"\u5c06\u6570\u636e\u5e93\u7684\u7f13\u51b2\u533a\u9ad8\u901f\u7f13\u5b58(database buffer cache)\u7684\u66f4\u6539\u7684\u6570\u636e\u5199\u5165\u5230\u6570\u636e\u6587\u4ef6","title":"DBWR Database Writer"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#lgwr-log-writer","text":"\u5c06REDO\u65e5\u5fd7\u7f13\u51b2\u533a\u7684\u810f\u6570\u636e\u5199\u5165\u5230\u5728\u7ebfredo\u65e5\u5fd7\u6587\u4ef6","title":"LGWR Log writer"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#smon-system-monitor","text":"\u68c0\u67e5\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u5fc5\u8981\u65f6\u5728\u5e93 Open \u65f6\u4fee\u590d\u6570\u636e\u6570\u636e\u5e93","title":"SMON System Monitor"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#pmon-process-monitor","text":"\u8d1f\u8d23\u5728\u4e00\u4e2aOracle\u8fdb\u7a0b\u5931\u8d25\u65f6\u6e05\u7406\u8d44\u6e90","title":"PMON Process Monitor"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#ckpt-checkpoint-process","text":"\u8d1f\u8d23\u5728\u6bcf\u5f53\u7f13\u51b2\u533a\u9ad8\u901f\u7f13\u5b58\uff08Database buffer Cache\uff09\u4e2d\u7684\u66f4\u6539\u6c38\u4e45\u5730\u8bb0\u5f55\u5230\u6570\u636e\u5e93\u4e2d\u65f6\uff0c\u66f4\u65b0 control files \u4e0e data files \u7684\u6570\u636e\u5e93\u72b6\u6001\u4fe1\u606f\u3002 \u5728\u68c0\u67e5\u70b9\u8fdb\u7a0b\u8d1f\u8d23\u5728\u68c0\u67e5\u70b9\u5411 DBWn \u53d1\u51fa\u4fe1\u53f7\uff0c \u66f4\u65b0 control files \u4e0e data files ,\u91cd\u65b0\u6307\u793a\u51fa\u6700\u65b0\u7684\u68c0\u67e5\u70b9\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cinit.ora\u4e2dCHECKPOINT_PROCESS=FALSE,\u610f\u4e3a\u4e0d\u542f\u7528CKPT\u8fdb\u7a0b\u7684\uff0c\u90a3\u8fd9\u4efb\u52a1\u662f\u7531LGWR\u5b8c\u6210\u3002 \u7531\u4e8eLGWR\u5728\u6570\u636e\u5e93\u6709\u8bb8\u591a\u6570\u636e\u6587\u4ef6\u65f6\uff0c\u6027\u80fd\u4f1a\u660e\u663e\u964d\u4f4e\uff0c\u9700\u8981\u542f\u7528CKPT\uff0cCKPT\u4e0d\u5199\u5757\u5230\u78c1\u76d8\uff0c\u800c\u7531DBWR\u8d1f\u8d23\u5b8c\u6210\u3002 ACHn \u6bcf\u6b21\u65e5\u5fd7\u65f6\uff0c\u5c06\u5df2\u6ee1\u7684\u65e5\u5fd7\u7ec4\u8fdb\u884c\u5907\u4efd\u6216\u5f52\u6863 \u670d\u52a1\u8fdb\u7a0b \u4e0e\u7528\u6237\u8fdb\u7a0b\u670d\u52a1 \u7528\u6237\u8fdb\u7a0b \u5ba2\u6237\u7aef\uff0c\u8d1f\u8d23\u5c06\u7528\u6237\u7684SQL\u8bed\u53e5\u8f6c\u9012\u7ed9\u670d\u52a1\u8fdb\u7a0b\uff0c\u5e76\u4ece\u670d\u52a1\u5668\u6bb5\u62ff\u56de\u67e5\u8be2\u6570\u636e\u3002","title":"CKPT Checkpoint process"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#5-scn","text":"\u4e00\u4e2a\u7531\u7cfb\u7edf\u5185\u90e8\u7ef4\u62a4\u7684\u5e8f\u5217\u53f7\u3002 \u5f53\u7cfb\u7edf\u9700\u8981\u66f4\u65b0\u7684\u65f6\u5019\u81ea\u52a8\u66f4\u65b0\uff0c\u662f\u7cfb\u7edf\u4e2d\u7ef4\u62a4\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u987a\u5e8f\u6062\u590d\u7684\u91cd\u8981\u6807\u5fd7\u3002","title":"5. SCN"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#oracle_1","text":"\u4e00\u822c\u6240\u8bf4\u7684Oracle\u662f\u6307Oracle\u7684RDBMS(Relational databases Management system )\uff0c\u4e00\u5957Oracle\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u3002\u4e5f\u79f0Oracle Server Oracle Server = Instance + Database \uff08\u4e24\u8005\u5404\u72ec\u7acb\uff09 Instance = memory pool + backgroup process Database = Data Files + Control file + Redo log files \u6240\u4ee5 Oracle Server = \u5185\u5b58\u6c60+ \u540e\u53f0\u8fdb\u7a0b + \u6570\u636e\u6587\u4ef6 + \u63a7\u5236 + \u65e5\u5fd7\u6587\u4ef6 Oracle Server \u4e0e Database \u662f1\uff1aN\uff0c\u6bcf\u4e2aDatabase\u5404\u81ea\u72ec\u7acb\uff0c\u5404\u81ea\u633a\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u5168\u5957\u76f8\u5173\u6587\u4ef6\u3002 Database\u7531\u4e00\u4e9b\u7269\u7406\u6587\u4ef6\u7ec4\u6210\uff0c\u4e8c\u7ef4\u8868\u5b58\u50a8\u5728Database\u4e2d\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u8bfb\u53d6\uff0c\u9700\u8981\u901a\u8fc7OracleInstance\u624d\u80fd\u8bbf\u95eeDatabase\uff0c Instance\u8fde\u63a5Database\u53ea\u80fd1\uff1a1\uff0cDatabase\u53ef\u4ee5\u88abN\u4e2aInstance\u8fde\u63a5\u3002","title":"Oracle\u67b6\u6784\u5b9e\u73b0\u539f\u7406"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#oracle-oracle","text":"","title":"Oracle\u67b6\u6784\u62bd\u8c61\uff1a Oracle\u4f53\u7cfb=\u5185\u5b58\u67b6\u6784 + \u8fdb\u7a0b\u67b6\u6784 + \u5b58\u50a8\u67b6\u6784"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_1","text":"Memory Stuctures SGA Shared Pool Library Cache Data Dictionary Cache Database Buffer Cache Java Pool Redo Log Buffer Large Pool Background Process Structures PMON ,SMON,DBWR,LGWR,CKPT,Others \u7cfb\u7edf\u5168\u5c40\u533a\uff08SGA\uff09 SGA\u7684\u9ed8\u8ba4Size \u7531Oracle\u5b89\u88c5\u65f6\u6839\u636eOS\u7684sysctl.conf\u51b3\u5b9a kernel.shmall = 2097152 kernel.shmmax = 2147483648 kernel.shmmni = 4096 kernel.sem = 250 32000 100 128 net.ipv4.ip_local_port_range = 1024 65000 net.core.rmem_default = 1048576 net.core.rmem_max = 1048576 net.core.wmem_default = 262144 net.core.wmem_max = 262144 \u68c0\u67e5SGA\u6b63\u4f7f\u7528\u7684\u5927\u5c0f select * from v$sga; NAME VALUE -------------------- ---------- Fixed Size 2022144 Variable Size 503317760 Database Buffers 1627389952 Redo Buffers 14753792 SQL show sgaTotal System Global Area 2147483648 bytes #\u5bf9\u5e94kernel.shmmax = 2147483648 Fixed Size 2022144 bytes Variable Size 503317760 bytes Database Buffers 1627389952 bytes Redo Buffers 14753792 bytes SGA\u5728Instance\u542f\u52a8\u65f6\u88ab\u5206\u914d\uff0c\u5173\u95ed\u65f6\u88ab\u91ca\u653e\u3002 \u4e00\u5b9a\u8303\u56f4\u5185\u81ea\u52a8\u54cd\u5e94DBA\u6307\u4ee4 SGA\u7ed3\u6784\uff1a Shared Pool Library Cache Data Dictionary Cache Database Buffer Cache \uff08\u9ad8\u901f\u7f13\u5b58\u7f13\u51b2\u533a\uff09 \u6267\u884cSQL\u7684\u533a\u57df\u3002 \u6267\u884cSQL\u4e0d\u76f4\u63a5\u5bf9\u78c1\u76d8\u7684\u6570\u636e\u6587\u4ef6\u66f4\u6539\u64cd\u4f5c\u3002 \u590d\u5236\u6570\u636e\u6587\u4ef6\u5230\u9ad8\u901f\u7f13\u5b58\u7f13\u51b2\u533a\uff08\u76f8\u5f53\u4e8e\u8be5SQL\u76f8\u5173\u7684\u6570\u636e\u6587\u4ef6\u526f\u672c\uff09\uff0c\u518d\u53bb\u66f4\u6539\u9ad8\u901f\u7f13\u5b58\u7f13\u51b2\u533a\u7684\u6570\u636e\u5757\uff0c\u8fd9\u4e9b\u6570\u636e\u5757\u526f\u672c\u4f1a\u4fdd\u7559\u4e00\u6bb5\u65f6\u95f4\uff0c\u76f4\u5230\u5176\u5360\u7528\u7684\u7f13\u51b2\u533a\u88ab\u53e6\u4e00\u4e2a\u6570\u636e\u5e93\u8986\u76d6\u4e3a\u6b62\uff08\u7f13\u51b2\u533aSize\u6709\u9650\uff09 \u67e5\u6570\u65f6\uff0c\u4e3a\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u67e5\u6570\u636e\u4e5f\u8981\u7ecf\u8fc7\u7f13\u5b58\u3002Session\u5efa\u7acb\u65f6\uff0c\u4f1a\u8ba1\u7b97\u51fa\u90a3\u4e9b\u6570\u636e\u5757\u5305\u542b\u5173\u952e\u7684 \u884c \uff0c\u5c06\u5b83\u4eec\u590d\u5236\u5230\u7f13\u51b2\u533a\u6765\u7f13\u5b58\u3002\u6b64\u540e\uff0c\u76f8\u5173\u7684\u5173\u952e\u884c\u4f1a\u4f20\u8f93\u5230Session\u7684PGA\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u3002\u8fd9\u4e9b\u6570\u636e\u4e5f\u4f1a\u5728\u6570\u636e\u5e93\u7f13\u5b58\u533a\u7f13\u5b58\u4e00\u6bb5\u65f6\u95f4\u3002 \u9891\u7e41\u8bbf\u95ee\u7684\u6570\u636e\u7f13\u5b58\u4e8e\u6570\u636e\u5e93\u7f13\u51b2\u533a\u7f13\u5b58\u4e2d\uff0c\u76ee\u7684\u662f\u51cf\u5c11\u78c1\u76d8I/O\u7684\u9700\u8981 \u5f53\u7f13\u51b2\u533a\u7684\u6570\u636e\u5757\u4e0e\u78c1\u76d8\u7684\u6570\u636e\u5757\u4e0d\u4e00\u81f4\u65f6\uff0c\u79f0\u4e3a\u201c\u810f\u7f13\u51b2\u533a\u201d\uff0c\u8fd9\u4e9b\u6570\u636e\u5757\u526f\u672c\u4e00\u5b9a\u8981\u5199\u5165\u5230\u78c1\u76d8\u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u6570\u636e\u5e93\u7f13\u51b2\u533a\u7f13\u5b58\u7684\u5927\u5c0f\u4f9d\u636e\uff1a \u7f13\u5b58\u5c31\u8db3\u591f\u5927\u3002\u4ee5\u4fbf\u7f13\u5b58\u6240\u6709\u88ab\u9891\u7e41\u8bbf\u95ee\u7684\u6570\u636e\u5757\u3002\u8fc7\u5c0f\uff0c\u78c1\u76d8I/O\u6b21\u6570\u4f1a\u8fc7\u591a\u3002 \u4e0d\u80fd\u592a\u5927\u3002\u9632\u6b62\u4e00\u4e9b\u6781\u5c11\u8bbf\u95ee\u7684\u6570\u636e\u5757\u4e5f\u4e00\u5e76\u590d\u5236\u5230\u7f13\u5b58\u4e2d\uff0c\u589e\u52a0\u7f13\u51b2\u533a\u7684\u641c\u7d22\u65f6\u95f4\u3002\u3001 \u8c03\u6574DB_CACHE_SIZE\u5927\u5c0f\uff1a \u67e5SGA\u5927\u5c0f\u3002\u56e0\u4e3aDB_CACHE_SIZE\u53d7SGA\u5f71\u54cd sql show parameter sga_max_size \u67e5SHARED_POOL_SIZE\u5927\u5c0f sql show parameter shared_pool_size \u8ba1\u7b97DB_CACHE_SIZE\u5927\u5c0f shared_pool_size + db_cache_size = SGA_max_size * 70% \u4fee\u6539DB_CAHCE_SIZE\u5927\u5c0f mysql alter system set db_cache_size = ***M scope=spfile sid='***'; conn / as sysdba shutdown immediate; startup show parameter db_cache_size; Java Pool \u53ea\u6709\u5f53\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5728\u6570\u636e\u5e93\u4e2d\u8fd0\u884cJAVA\u5b58\u50a8\u7a0b\u5e8f\u65f6\uff0c\u624d\u7528\u5230JAVA\u6c60 \u65e5\u5fd7\u7f13\u51b2\u533a Redo Log Buffer \u5c0f\u578b\u7684\uff0c\u7528\u4e8e\u77ed\u671f\u5b58\u50a8\u5c06\u5199\u5165\u5230\u78c1\u76d8\u7684Redo\u65e5\u5fd7\u7684 \u53d8\u66f4\u5411\u91cf \u7684\u4e34\u65f6\u533a\u57df\uff0c\u4e3b\u8981\u63d0\u4f9b\u66f4\u5feb\u7684\u65e5\u5fd7\u5904\u7406\u6548\u7387\u3002 shared pool \u8db3\u591f\u5927\uff0c\u4ee5\u7f13\u5b58\u6240\u6709\u7684\u9891\u7e41\u6267\u884c\u7684\u4ee3\u7801\u548c\u9891\u7e41\u8bbf\u95ee\u7684\u5bf9\u8c61\u5b9a\u4e49\u3002 \u8fc7\u5c0f\uff0c\u7531\u4e8e\u8be5\u5185\u5b58\u7a7a\u95f4\u662f\u7528\u6765\u5206\u6790SQL\u8bed\u53e5\uff08\u8bed\u4e49\u5206\u6790\uff09\uff0c\u8fc7\u5c0f\u5bfc\u81f4\u670d\u52a1\u5668\u4f1a\u8bdd\u4f1a\u62a2\u593a\u5176\u4e2d\u7684\u7a7a\u95f4\u6765\u8bed\u53e5\u3002\u8fd9\u4e9b\u8bed\u53e5\u53c8\u53ef\u80fd\u88ab\u5176\u4ed6\u8bed\u53e5\u91cd\u5199\u3002\u5982\u91cd\u65b0\u6267\u884c\u65f6\uff0c\u5c06\u4e0d\u5f97\u4e0d\u91cd\u65b0\u5206\u6790\u8bed\u53e5\u3002 \u8fc7\u5927\uff0c\u4f1a\u5c06\u4ec5\u6267\u884c\u4e00\u6b21\u7684\u8bed\u53e5\u4e5f\u7f13\u5b58\u4e86\uff0c\u589e\u5927\u4e86\u641c\u7d22\u7684\u7f13\u5b58\u91cf\uff0c\u589e\u957f\u4e86\u641c\u7d22\u65f6\u95f4\u3002 \u5176\u5185\u7684\u4e09\u4e2a\u6570\u636e\u7ed3\u6784\uff1a \u5e93\u7f13\u5b58 \uff08library cache\uff09 \uff1a\u5b58\u50a8\u6700\u8fd1\u6267\u884c\u7684\u4ee3\u7801 \u6570\u636e\u5b57\u5178\u7f13\u5b58\uff08data diction cache\uff09\uff1a\u5b58\u50a8\u6700\u8fd1\u4f7f\u7528\u7684\u5bf9\u8c61\u5b9a\u4e49 PL/SQL\u7f13\u51b2\u533a \uff1a \u5b58\u50a8PL/SQL\u7684\u8fc7\u7a0b\uff0c\u51fd\u6570 \u8c03\u6574\u5171\u4eab\u6c60\u5927\u5c0f select component,current_size,min_size,max_size fromv$sga_dynamic_components; \u2013\u663e\u793a\u53ef\u80fd\u52a8\u6001\u5927\u5c0f\u7684SGA\u7ec4\u4ef6\u7684\u5f53\u524d\u6700\u5927\u548c\u6700\u5c0f\u7684\u5bb9\u91cf alter system set shared_pool_size=101M; Large Pool \u4f9b\u5171\u4eab\u7684\u670d\u52a1\u5668\u8fdb\u7a0b\u4f7f\u7528\u3002","title":"\u5185\u5b58\u67b6\u6784"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_2","text":"\u7528\u6237\u8fde\u63a5\u8fdb\u7a0b \u540e\u53f0\u8fdb\u7a0b \u7528\u6237\u8fde\u63a5\u8fdb\u7a0b \u7528\u6237\u8fde\u63a5\u8fdb\u7a0b=\u7528\u6237\u8fdb\u7a0b\uff0b\u670d\u52a1\u8fdb\u7a0b + PGA User Process \u5f53\u7528\u6237\u8bf7\u6c42\u8fde\u63a5Oracle\u670d\u52a1\u5668\u65f6\uff0c\u5728\u5ba2\u6237\u7aef\u521b\u5efa\u8be5\u8fdb\u7a0b \u4f5c\u75281. \u4e3aDB User\u4e0eServer Process\u5efa\u7acb\u8fde\u63a5 \u4f5c\u75282. \u4e0d\u4e0eOracle Server\u76f4\u63a5\u4ea4\u4e92\u3002 Server Process \u7528\u6237\u5efa\u7acb\u4f1a\u8bdd\u65f6\u542f\u52a8\uff0c\u8fde\u63a5\u5b9e\u4f8b \u4f5c\u7528\uff1a \u5904\u7406Database User\u4e0eOralce Server\u4e4b\u95f4\u7684\u8fde\u63a5 \u4e0eOracle Server\u76f4\u63a5\u4ea4\u4e92 \u590d\u5236\u6267\u884c\u548c\u8fd4\u56de\u7ed3\u679c \u8fd0\u4f5c\u539f\u7406\uff1a\u5f53User\u4e0eUserPorcess\u5efa\u7acb\u4e86\u4e00\u4e2aConnect\u4e4b\u540e\uff0cOracleServer\u4f1a\u521b\u5efa\u4e00\u4e2aServerProcess\uff0c\u7136\u540e\u7531UserProcess\u4e0eServerProcess\u5efa\u7acb\u8fde\u63a5\uff0cServerProcess\u4f1a\u901a\u8fc7User\u63d0\u4ea4\u7684\u8bf7\u6c42\u4fe1\u606f\u6765\u786e\u5b9a\u4e0eOracle Instance\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd\u3002 Session\u4f1a\u8bdd\uff1aUser\u901a\u8fc7UserProcess\uff08\u51c6\u786e\u6765\u8bf4\u662fServerProcess\uff09\u4e0eOralceInstance\u5efa\u7acb\u7684\u8fde\u63a5\uff0c\u79f0\u4e4b\u4e3a\u4f1a\u8bdd\uff0c\u4e00\u4e2aUser\u53ef\u4ee5N\u4e2a\u4f1a\u8bdd\uff0cUser\u53ef\u4ee5\u591a\u6b21\u8fde\u63a5\u5230\u540c\u4fee\u5b9e\u4f8b\uff0c\u591a\u4e2aSession\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2aConnect. Background Process \u968f\u5b9e\u4f8b\u542f\u52a8\u800c\u542f\u52a8\u3002 PGA (\u7a0b\u5e8f\u5168\u5c40\u533a) PGA: Oracle Server Process \u5206\u914d\u51fa\u6765\u7684\u5185\u5b58\u533a\uff0c\u4e13\u7528\u7528\u4e8e\u5f53\u524d\u7684User Session\u7684\u79c1\u6709\u533a\u57df\u3002\u7528\u6237\u4e0d\u540cPGA\u4e0d\u540c\u3002 PGA\u542b\u6709OracleServer Process\u6570\u636e\u548c\u63a7\u5236\u4fe1\u606f\u7684\u5185\u5b58\u533a\u57df\uff0c\u75313\u90e8\u5206\u7ec4\u6210\uff1a \u6808\u7a7a\u95f4\uff1a\u5b58\u50a8Session\u7684\u53d8\u91cf\uff0c\u6570\u7ec4\u7b49\u7684\u5185\u5b58\u7a7a\u95f4 Session Info\uff1a\u5982\u8fd0\u884c\u7684\u4e0d\u662f\u591a\u7ebf\u7a0b\u670d\u52a1\u5668\uff0c\u4f1a\u8bdd\u4fe1\u606f\u4fdd\u5b58\u5728PGA\u4e2d\uff0c\u5982\u679c\u662f\u591a\u7ebf\u7a0b\u670d\u52a1\u5668\u5219\u4fdd\u5b58\u5728SGA\u4e2d\u3002 \u79c1\u6709SQL\u533a\uff1a\u4fdd\u5b58\u7ed1\u5b9a\u53d8\u66f4\uff08binding variables\uff09\u548c\u8fd0\u884c\u65f6\u7f13\u51b2\u533a\uff08runtime buffers\uff09\u7b49\u4fe1\u606f Oracle\u7684connect\u8fde\u63a5\u548csession\u4f1a\u8bdd\u4e0eUser Process\u7d27\u5bc6\u76f8\u5173\u3002 db_name\u548cInstance_name\u5171\u540c\u786e\u5b9a\u4e00\u4e2aDB\uff0cInstance_name\u7528\u4f5cOralce\u4e0eOS\u7684\u8054\u7cfb\u3002\u4e5f\u662f\u4e0eOracle Server\u4e0e\u5916\u90e8\u8fde\u63a5\u4f7f\u7528\u3002 User\u63d0\u4ea4\u8fde\u63a5\u65f6\uff0cUserProcess \u5148\u4e0eServerProcess\u8fde\u63a5\uff0cServerProcess\u4f9d\u7167\u8bf7\u6c42\u4e2d\u7684db_name\u4e0einstance_name\u6765\u786e\u5b9a\u8fde\u63a5\u7684\u6570\u636e\u5e93\uff08\u751f\u4ea7\u4f1a\u6709\u591a\u4e2a\u6570\u636e\u5e93\uff09 \u786e\u4fdd\u4e86\u4e00\u673a\u591a\u5e93\uff0c\u8fd8\u80fd\u5f7c\u6b64\u4fdd\u6301\u72ec\u7acb\u6027\uff0c\u540c\u4e00\u4e2aDatabase\u53ef\u88ab\u591a\u4e2a\u5e93\u5185\u7684\u7528\u6237\u53d1\u8d77Instance\u8fde\u63a5\u3002\u56e0\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u5e93\u7684\u90fd\u53ef\u6709\u540c\u540d\u7684sys\uff0csystem\u7b49\u7528\u6237\u3002 \u540e\u53f0\u8fdb\u7a0b \u4e3b\u8981\u662f\u5b8c\u6210\u6570\u636e\u5e93\u7ba1\u7406\u4efb\u52a1\uff0c\u5b83\u662fInstance\u4e0eOracle Database\u7684\u7ebd\u5e26\uff0c\u5206\u4e3a\uff1a","title":"\u8fdb\u7a0b\u67b6\u6784"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_3","text":"\u5e38\u7528\u7684\u6838\u5fc3\u8fdb\u7a0b\u5982\u4e0b\uff1a6\u4e2a SYS@RACDB_1 select name ,description from v$bgprocess where paddr '00'; NAME DESCRIPTION ----- ---------------------------------------------------------------- PMON process cleanup VKTM Virtual Keeper of TiMe process GEN0 generic0 DIAG diagnosibility process DBRM DataBase Resource Manager RSMN Remote Slave Monitor PING interconnect latency measurement PSP0 process spawner 0 ACMS Atomic Controlfile to Memory Server DIA0 diagnosibility process 0 LMON global enqueue service monitor NAME DESCRIPTION ----- ---------------------------------------------------------------- LMD0 global enqueue service daemon 0 LMS0 global cache service process 0 RMS0 rac management server LMHB lm heartbeat monitor MMAN Memory Manager DBW0 db writer process 0 LGWR Redo etc. LCK0 Lock Process 0 CKPT checkpoint SMON System Monitor Process RECO distributed recovery NAME DESCRIPTION ----- ---------------------------------------------------------------- GTX0 Global Txn process 0 CJQ0 Job Queue Coordinator RCBG Result Cache: Background QMNC AQ Coordinator RBAL ASM Rebalance master ASMB ASM Background MARK mark AU for resync koordinator MMON Manageability Monitor Process MMNL Manageability Monitor Process 2 31 rows selected.","title":"\u6838\u5fc3\u8fdb\u7a0b\uff08\u5fc5\u987b\u5b58\u5728\uff0c\u4e00\u6b7b\u5168\u6302\uff0c\u540c\u751f\u5171\u6b7b\uff09"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#11-dbwn","text":"ServerProcess\u8fde\u63a5Oracle\u540e\uff0c\u901a\u8fc7\u6570\u636e\u5e93\u5199\u5165\u8fdb\u7a0b\uff08DBWn\uff09\u5c06\u6570\u636e\u7f13\u51b2\u533a\u4e2d\u7684\u201c\u810f\u201d\u7f13\u51b2\u533a\u7684\u6570\u636e\uff08\u810f\u6570\u636e\uff09\u5199\u5165\u5230\u5b58\u50a8\u7ed3\u6784\uff08\u6570\u636e\u6587\u4ef6\uff0c\u78c1\u76d8\u6587\u4ef6\uff09 \u5c06\u6570\u636e\u5199\u5230\u78c1\u76d8\uff0c\u4e5f\u5c31\u662f\u6570\u636e\u4e3b\u52a0\u53d8\u5316\u5199\u5165\u5230\u6570\u636e\u6587\u4ef6\u3002\u53ea\u505a\u8fd9\u4e00\u4ef6\u4e8b\u3002 \u6700\u591a20\u4e2a\u8fdb\u7a0b\uff0cCPU\u4e2a\u6570 =\u8fdb\u7a0b\u6570=20\uff0cDBW[0-9]~DBW[a-j]","title":"1.1. \u6570\u636e\u5e93\u5199\u5165\u8fdb\u7a0b\uff08DBWn\uff09"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#12-ckpt","text":"CheckPoint\uff08CKPT\uff09 \u4e3b\u8981\u7528\u9014\u66f4\u65b0\u6570\u636e\u6587\u4ef6\u5934\uff0c\u66f4\u65b0Controlfile\u548c\u89e6\u53d1DBWn\u6570\u636e\u5e93\u5199\u8fdb\u7a0b CHPT\u964d\u4f4e\u6570\u636e\u5e93\u6027\u80fd\uff0c\u4f46\u63d0\u9ad8\u4e86\u6062\u590d\u80fd\u529b\u3002\u53ef\u7406\u89e3\u4e3a\uff1a\u9636\u6bb5\u6027\u4fdd\u5b58\u6570\u636e\uff0c\u4e00\u5b9a\u6761\u4ef6\u6ee1\u8db3\u5c31\u89e6\u53d1\uff0c\u6267\u884cDBWn\u5b58\u76d8\u64cd\u4f5c\u3002","title":"1.2. \u68c0\u67e5\u70b9 \uff08CKPT\uff09"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#13-pmon","text":"Process Monitor\uff1a \u5728\u540e\u53f0\u8fdb\u7a0b\u6267\u884c\u5931\u8d25\u540e\uff0c\u7531PMON\u8d1f\u8d23\u6e05\u7406\u6570\u636e\u5e93\u7f13\u5b58\u548c\u95f2\u7f6e\u8d44\u6e90\uff0cOracle\u7684\u7ef4\u62a4\u673a\u5236\u3002 \u6e05\u9664\u6b7b\u8fdb\u7a0b \u91cd\u65b0\u542f\u52a8\u90e8\u5206\u8fdb\u7a0b\uff08\u8c03\u5ea6\u8fdb\u7a0b\u7b49\uff09 \u76d1\u542c\u81ea\u52a8\u6ce8\u518c \u56de\u6eda\u4e8b\u52a1 \u91ca\u653e\u9501 \u91ca\u653e\u5176\u4ed6\u8d44\u6e90","title":"1.3. \u8fdb\u7a0b\u76d1\u89c6\u8fdb\u7a0b\uff08PMON\uff09"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#14-smon","text":"SMON\u5728\u542f\u52a8\u6570\u636e\u5e93\u65f6\uff0c\u4f1a\u81ea\u52a8\u5728\u5b9e\u4f8b\u5d29\u6e83\u65f6\u8fdb\u884c\u81ea\u52a8\u4fee\u590d\u3002 \u6e05\u9664\u4f5c\u5e9f\u7684\u6392\u5e8f\u4e34\u65f6\u6bb5\uff0c\u56de\u6536\u6574\u7406\u788e\u7247\uff0c\u5408\u5e76\u7a7a\u95f2\u7a7a\u95f4\uff0c\u91ca\u653e\u4e34\u65f6\u6bb5\uff0c\u7ef4\u62a4\u95ea\u56de\u7684\u65f6\u95f4\u70b9\u3002 \u5728\u8001\u7248\u672c\u4e2d\uff0c\u5927\u91cf\u5220\u9664\u8868\u65f6\uff0cSMON\u4f1a\u4e00\u76f4\u5f88\u5fd9\uff0c\u76f4\u5230\u6240\u6709\u788e\u7247\u7a7a\u95f4\u90fd\u6574\u7406\u5b8c\u3002","title":"1.4. \u7cfb\u7edf\u76d1\u89c6\u8fdb\u7a0b\uff08SMON\uff09"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#15-redo-log-files-lgwr","text":"\u4e3b\u8981\u7528\u4e8e\u8bb0\u5f55\u6570\u636e\u5e93\u7684\u6539\u53d8\u4e0e\u8bb0\u5f55\u6570\u636e\u5e93\u88ab\u6539\u53d8\u4e4b\u524d\u6709\u539f\u59cb\u72b6\u6001\uff0c\u6240\u4ee5\u5e94\u5f53\u5bf9\u5176\u4f5c\u591a\u5907\u4efd\uff0c\u7528\u4e8e\u6062\u590d\u548c\u6392\u9519\u3002 \u6fc0\u6d3bLGWR\u6761\u4ef6\uff1a \u63d0\u4ea4\uff08COMMIT\uff09 \u65e5\u5fd7\u7f13\u51b2\u533a\u8d85\u8fc71/3 per 3 seconds \u6bcf\u6b21DBWn\u6267\u884c\u4e4b\u524d \u975e\u6838\u5fc3\u8fdb\u7a0b\uff08\u5b8c\u6210\u6570\u636e\u5e93\u7684\u989d\u5916\u5de5\u4f5c\uff0c\u5c11\u4e86\u6570\u636e\u5e93\u4e5f\u53ef\u6b63\u5e38\u5de5\u4f5c\uff09 #### 2.1 \u5f52\u6863\u8fdb\u7a0b\uff08ARCn\uff09","title":"1.5. \u91cd\u505a\u65e5\u5fd7\u6587\u4ef6\u4e0e\u65e5\u5fd7\u5199\u5165\u8fdb\u7a0b\uff08Redo Log Files &amp;LGWR\uff09"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_4","text":"Oracle RDBMS\u5b58\u50a8\u7ed3\u6784\u4e3b\u8981\u7531Database\u7ec4\u6210\u3002Database\u53c8\u53ef\u4ee5\u5206\u4e3a\u7269\u7406\u7ed3\u6784\u4e0e\u903b\u8f91\u7ed3\u6784\u7406\u89e3\u3002","title":"\u5b58\u50a8\u67b6\u6784"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_5","text":"OS\u7684\u6587\u4ef6\u96c6\u5408\uff0cOS\u7684\u7269\u7406\u6587\u4ef6\uff1a","title":"\u7269\u7406\u7ed3\u6784"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#1_1","text":"\u6570\u636e\u7684\u4ed3\u5e93 \u6240\u6709\u7684\u6570\u636e\u5e93\u6570\u636e \u53ea\u5c5e\u4e8e\u4e00\u4e2a\u5e93 \u6765\u81ea\u88ab\u79f0\u4e3a\u201c\u8868\u7a7a\u95f4\u201d\u7684\u6570\u636e\u5e93\u5b58\u50a8\u903b\u8f91\u5355\u5143 \u53ef\u4ee5\u76f4\u8bfb\u8fdb\u5185\u5b58 \uff0c\u6267\u884cSQL\u65f6\uff0c\u5c06\u76f8\u5173\u6570\u636e\u6587\u4ef6\u7f13\u5b58\u533a\u526f\u672c\u6267\u884c\u3002 \u5907\u4efd\u7b56\u7565\u53ef\u4ee5\u4fdd\u62a4\u6570\u636e\u6587\u4ef6\u3002","title":"1. \u6570\u636e\u6587\u4ef6"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#2","text":"\u5305\u542b\u7ef4\u62a4\u548c\u9a8c\u8bc1\u6570\u636e\u5e93\u5b8c\u4e8b\u6027\u7684\u5fc5\u8981\u4fe1\u606f\u3002 \u8bb0\u5f55\u8054\u673a\u91cd\u505a\u65e5\u5fd7\u6587\u4ef6\uff0c\u6570\u636e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u66f4\u65b0\u7684\u5f52\u6863\u65e5\u5fd7\u7684\u4f4d\u7f6e \u5b58\u50a8\u7740\u7ef4\u62a4\u6570\u636e\u5e93\u5b8c\u4e8b\u6027\u6240\u9700\u8981\u7684\u4fe1\u606f\uff0c\u6570\u636e\u5e93\u540d \u4e8c\u578b\u5236\u5b58\u50a8\uff0c\u4e0d\u80fd\u7f16\u8f91\u5185\u5bb9\u3002","title":"2. \u63a7\u5236\u6587\u4ef6"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#3","text":"\u5bf9\u6570\u636e\u5e93\u6240\u505a\u7684\u66f4\u6539\u8bb0\u5f55\u4fdd\u5b58\u4ee5\u4fbf\u6062\u590d\u3002 \u539f\u7406\uff1a \u6309\u65f6\u95f4\u987a\u5e8f\uff0c\u5c06\u6570\u636e\u5e93\u7684\u4e00\u8fde\u4e32\u53d8\u66f4\u5411\u91cf\uff08\u505a\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff09\u5b58\u50a8\u8d77\u6765\uff08\u5c06\u53d8\u66f4\u7684\u5730\u65b9\u6807\u8bb0\u8d77\u6765\uff09 \u5185\u5bb9\u5305\u62ec\u6240\u6709\u5df2\u7ecf\u53d8\u66f4\u5b8c\u6210\u64cd\u4f5c\u7684\u4fe1\u606f\u548c\u5b8c\u6210\u64cd\u4f5c\u4e4b\u524d\u7684\u6570\u636e\u5e93\u72b6\u6001 \u5982\u679c\u6570\u636e\u6587\u4ef6\u635f\u574f\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a \u53d8\u66f4\u5411\u91cf \u5e94\u7528\u4e8e\u6570\u636e\u6587\u4ef6\u5907\u4efd\u8fdb\u884c\u91cd\u505a\uff08\u91cd\u5efa\uff09\u5de5\u4f5c\u3002\u5c06\u5b83\u6062\u590d\u5230\u53d1\u751f\u6545\u969c\u7684\u90a3\u4e00\u523b\u524d\u7684\u72b6\u6001\u3002 \u65e5\u5fd7\u6587\u4ef6\u7c7b\u578b\uff1a \u8054\u673a\u91cd\u505a\u65e5\u5fd7\u6587\u4ef6\uff1a\u8bb0\u5f55\u8fde\u7eed\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002 \u5f52\u6863\u65e5\u5fd7\u6587\u4ef6\uff08Archive Log Files\uff09\uff1a\u7528\u4e8e\u65f6\u95f4\u70b9\u6062\u590d\uff0c\u5f53Redo Log Files\u5b58\u6ee1\u65f6\uff0c\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5f52\u6863\u5907\u4efd\uff0c\u4ee5\u4fbf\u8fd8\u6709\u6570\u636e\u65f6\u4f7f\u7528\u3002 SELECT NAME FROM V$LOGFILE V$LOGFILE y\u8bb0\u5f55\u4e86redolog\u6587\u4ef6\u5217\u8868\u3002","title":"3. \u91cd\u505a\u65e5\u5fd7\u6587\u4ef6"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#4_1","text":"","title":"4. \u5f52\u6863\u65e5\u5fd7\u6587\u4ef6"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#5","text":"SGA\u7ed3\u6784\u4f1a\u6839\u636e\u4e9b\u53c2\u6570\u56e0\u4e3a\u6709\u4eba\u8bbe\u7f6e\u5185\u5b58\u548c\u62c9\u8d77\u540e\u53f0\u7a0b\u5e8f\u3002","title":"5. \u53c2\u6570\u6587\u4ef6"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#6","text":"\u5f53\u7528\u6237\u4ee5User/Pwd\u5efa\u7acb\u4f1a\u8bdd\u65f6\uff0cOracle\u6839\u636e\u5b58\u50a8\u6570\u636e\u5b57\u5178\u7684\u7528\u6237\u5b9a\u4e49\u5bf9\u7528\u6237\u540d\u4e0e\u5bc6\u7801\u8fdb\u884c\u9a8c\u8bc1\u3002","title":"6. \u53e3\u4ee4\u6587\u4ef6"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_6","text":"\u8868\u7a7a\u95f4\uff0c\u5178\u578b\u7684\u903b\u8f91\u7ed3\u6784\u7c7b\u578b\u3002\u5305\u542b\u82e5\u5e72\u4e2a\u6570\u636e\u6587\u4ef6\u3002 \u8868\u7a7a\u95f4\uff0c\u5b58\u50a8\u6570\u636e\u5e93\u7684\u5bf9\u8c61\uff0c\u6570\u636e\u5e93\u5f00\u8f9f\u51fa\u6765\u7684\u4e00\u4e2a\u903b\u8f91\u7a7a\u95f4\u3002 \u4fe1\u606f\u5b58\u50a8\u7684\u6700\u5927\u903b\u8f91\u5355\u5143 \u5b58\u653e\u6570\u636e\u5e93\u6587\u4ef6\u7684\u5730\u65b9\uff0c\u6570\u636e\u53c8\u88ab\u5b58\u50a8\u5728\u8868\u7a7a\u95f4\u7684\u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u4e00\u4e2a\u5e93\u53ef\u7531\u591a\u4e2a\u8868\u7a7a\u95f4\u7ec4\u6210\u3002 Oracle\u8c03\u4f18\u5c31\u662f\u901a\u8fc7\u8868\u7a7a\u95f4\u6765\u5b9e\u73b0\uff08oracle\u6570\u636e\u5e93\u72ec\u7279\u7684\u9ad8\u7ea7\u5e94\u7528\uff09","title":"\u903b\u8f91\u7ed3\u6784"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_7","text":"\u6bb5\uff0c\u533a\uff0c\u5757 \u6267\u884cSQL\u7684\u6d41\u7a0b\uff1a \u5c06SQL\u52a0\u8f7d\u5165\u6570\u636e\u5e93\u7f13\u51b2\u533a \u5c06\u76f8\u5173\u7684\u6570\u636e\u6587\u4ef6\u9ad8\u4ef7\u6536\u8d2d\u52a0\u8f7d\u5165\u6570\u636e\u5e93\u7f13\u51b2\u533a\u3002 \u6267\u884cSQL,\u4fee\u6539\u6570\u636e\u6587\u4ef6\u526f\u672c\uff0c\u5f62\u6210\u201c\u810f\u7f13\u51b2\u533a\u201d\u3002 CKPT\u68c0\u6d4b\u5230\u201c\u810f\u7f13\u51b2\u533a\u201d\uff0c\u8c03\u7528DBWn\u3002 \u5728DBWn\u8fd0\u884c\u4e4b\u524d\uff0c\u5148\u8fd0\u884cLGWR\uff0c\u5c06\u6570\u636e\u6587\u4ef6\u7684\u539f\u59cb\u72b6\u6001\u548c\u6539\u53d8\u8bb0\u5f55\u5230Redo Log Files\u3002 \u8fd0\u884cDBWn\uff0c\u5c06\u201c\u810f\u7f13\u51b2\u533a\u201c\u7684\u5185\u5bb9\u5199\u5165\u5230\u6570\u636e\u6587\u4ef6\u3002 CKPT\u4fee\u6539\u63a7\u5236\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u5934\u90e8\u4fe1\u606f\u3002 SMON\u56de\u6536\u4e0d\u5fc5\u8981\u7684\u7a7a\u95f4\u8d44\u6e90\u3002","title":"\u903b\u8f91\u7a7a\u95f4\u5230\u7269\u7406\u7a7a\u95f4\u7684\u6620\u5c04"},{"location":"Database/Oracle/basicKnowledge/OracleArchitecture/#_8","text":"\u4e3e\u4f8bRDBMS\u8fd0\u884c\u6d41\u7a0b\uff1a User access Oracle Server\u4e4b\u524d\u63d0\u4ea4\u8bf7\u6c42\uff08db_name,Instance_name,username,password\u7b49\u4fe1\u606f\uff09\uff0cOracle Server\u63a5\u6536\u5230\u8bf7\u6c42\u5e76\u901a\u8fc7Password File\u9a8c\u8bc1\u540e\uff0c\u5206\u914dSGA\u5185\u5b58\u6c60\uff0c\u542f\u52a8\u540e\u53f0\u8fdb\u7a0b\u65f6\uff0c\u521b\u5efa\u5e76\u542f\u52a8\u5b9e\u4f8b\u3002 \u5728\u542f\u52a8\u5b9e\u4f8b\u4e4b\u540eUser Process\u4e0eServer Process\u5efa\u7acbConnect\u3002 \u518d\u901a\u8fc7Server Process\u4e0eOracle Instance\u5b8c\u6210\u5efa\u7acbSession\u3002 \u7528\u6237\u6267\u884cSQL\u65f6\uff0c\u7531Server Process\u63a5\u5230\u5e76\u76f4\u63a5\u5230Oracle\u4ea4\u4e92\u3002 SQL\u8bed\u53e5\u901a\u8fc7Server Process\u5230\u8fbeOracle Instance\uff0c\u518d\u5c06SQL\u8f7d\u5165\u6570\u636e\u5e93\u7f13\u51b2\u533a Server Process\u901a\u8fc7Oracle Database\u4e0eSQL\u8bed\u53e5\u76f8\u5173\u7684\u6570\u636e\u5757\u526f\u672c\u52a0\u8f7d\u5230\u7f13\u51b2\u533a\u4e2d\u3002 \u6570\u636e\u5e93\u7f13\u5b58\u533a\u6267\u884cSQL\u8bed\u53e5\uff0c\u5e76\u4ea7\u751f\u201c\u810f\u7f13\u51b2\u533a\u201d\u3002 CKPT\u68c0\u67e5\u5230\u201c\u810f\u7f13\u51b2\u533a\u201d\uff0c\u5e76\u8c03\u7528DBWn\uff0cDBWn\u8fd0\u884c\u4e4b\u524d\uff0c\u7531LGWR\u5c06\u6570\u636e\u6587\u4ef6\u7684\u539f\u59cb\u72b6\u6001\uff0c\u6539\u53d8\u7b49\u4fe1\u606f\u8bb0\u5f55\u5230Redo Log Files\u3002 DBWn\u5c06\u66f4\u65b0\u7684\u5185\u5bb9\u5199\u5165\u5230\u78c1\u76d8\u4e2d\u6570\u636e\u6587\u4ef6\u3002 \u8fd4\u56de\u7ed3\u679c\u7ed9\u7528\u6237\u3002 [toc]","title":"\u6700\u540e"},{"location":"Database/Oracle/basicKnowledge/Untitled/","text":"","title":"Untitled"},{"location":"Database/Oracle/basicKnowledge/passwrodFile/","text":"Oracle\u53e3\u4ee4\u6587\u4ef6 \u7528\u9014\u8303\u56f4 Oracle\u53e3\u4ee4\u6587\u4ef6 \u7528\u9014\u8303\u56f4 \u7528\u4e8e sys/sysoper \u7684\u53e3\u4ee4\u6587\u4ef6\u9a8c\u8bc1\u767b\u5f55\u3002 Oracle\u542f\u52a8\u65f6\uff0c\u9700\u8981\u9a8c\u8bc1\u53e3\u4ee4\u6587\u4ef6\uff0c\u6b63\u786e\u524d\u63d0\u4e0b\u542f\u52a8\u5e93\u3002","title":"passwrodFile"},{"location":"Database/Oracle/basicKnowledge/passwrodFile/#oracle","text":"","title":"Oracle\u53e3\u4ee4\u6587\u4ef6"},{"location":"Database/Oracle/basicKnowledge/passwrodFile/#_1","text":"\u7528\u4e8e sys/sysoper \u7684\u53e3\u4ee4\u6587\u4ef6\u9a8c\u8bc1\u767b\u5f55\u3002 Oracle\u542f\u52a8\u65f6\uff0c\u9700\u8981\u9a8c\u8bc1\u53e3\u4ee4\u6587\u4ef6\uff0c\u6b63\u786e\u524d\u63d0\u4e0b\u542f\u52a8\u5e93\u3002","title":"\u7528\u9014\u8303\u56f4"},{"location":"Database/Oracle/basicKnowledge/AWR/awr\u57fa\u7840/","text":"AWR AWR","title":"Awr\u57fa\u7840"},{"location":"Database/Oracle/basicKnowledge/AWR/awr\u57fa\u7840/#awr","text":"","title":"AWR"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/12cConcepts/","text":"12 C Concepts Part 1 Oracle Relational Data Structures 12 C Concepts Part 1 Oracle Relational Data Structures","title":"12cConcepts"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/12cConcepts/#12-c-concepts","text":"","title":"12 C Concepts"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/12cConcepts/#part-1-oracle-relational-data-structures","text":"","title":"Part 1 Oracle Relational Data Structures"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/","text":"_Part_1_Oracle_Relational_Data_Structures _1._Introduction_to_Oracle_Database _About_Relational_Database Database_Management_System(DBMS) _Relational_Model _Relational_Database_Management_System(RDBMS) _Schema_Objects _Data_Access _Transaction_Managment _Oracle_Database_Architecture _Oracle_Database_Document_Roadmap_____ _Part_1_Oracle_Relational_Data_Structures _1._Introduction_to_Oracle_Database This_chapter_provides_an_overview_of_Oracle_Database. This_chapter_contains_the_following_topics: - About_Relational_Database -_Schema_Objects -_Data_Access -_Transaction_Managment -_Oracle_Database_Architecture -_Oracle_Database_Document_Roadmap _About_Relational_Database Every_organization_has_information_that_it_must_store_and_manage_to_meet_its_requirements. For_example,a_corporation_must_be_available_to_those_who_need_it . An_information_system_is_a_formal_system_for_storing_and_processing_information.An_information_system_could_be_a_set_of_cardboard_boxes_containing_manilafolders_along_with_rules_for_how_to_store_and_retrieve_the_folders._Howver,most_companies_today_use_a_database_to_automate_their_information_systems._Adatabase_is_an_organized_collection_of_information_treated_as_a_unit._The_purpose_of_a_database_is_to_collect,store,and_retrieve_related_information_for_use_by_database_applications. Database_Management_System (DBMS) A_ database_management_system(DBMS) _is_software_that_controls_the_storage,organization,and_retrieval_of_data. Typically,a_DBMS_has_the_following_elements: - Kernel_code ___This_code_manages_memory_and_storage_for_the_DBMS. -_Repository_of_metadata ___This_repository_is_usually_called_a_data_dictionary. -_Query_language ___This_language_enables_applications_to_access_the_data. A_database_application_is_a_software_program_that_interacts_whith_a_database_to_access_and_manipulate_data. The_first_generation_of_database_management_systems_included_the_following_types: *_Hierarchical ___A_hierachical_database_organizes_data_in_a_tree_structure._Each_parent_record_has_on_or_more_child_resords,similar_to_the_structure_of_a_file_system. *_Network ___A_network_database_is_similar_to_hierrarchical_database,_except_resords_have_a_many-to-many_rather_than_a_one-to-many_relationship. The_preceding_database_management_systems_stored_data_in__rigid,_predetermined_relationships._Because_no_data_definition_language_existed,_changing_the_structure_of_the_data_was_difficult,Also,these_systems_lacked_a_simple_query_langauge,_whichc_hindered_application_development. _Relational_Model In_his_seminal_1970_paper_\u201cA_Relational_Model_of_Data_for_Large_Shared_Data_Banks,\u201dE.F.Codd_defined_a_relational_model_based_on_mathematical_set_theory.Today,_the_most_widely_accepted_database_mode_is_the_relational_model. A_relational_database_is_a_database_that_conforms_to_the_relational_model.The_relational_model_has_the_following_major_aspects: -_Structures ___Well-defined_objects_store_or_access_the_data_of_a_database. -_Operations ___Clearly_defined_actions_enable_applications_to_manipulate_the_data_and_structures_of_database. -_Integrity_rules ___Integrity_rules_govern_operations_on_the_data_and_structures_of_a_database. A_relational_database_stores_data_in_a_set_of_simple_relations.A_relation_is_a_set_of_tuples.A_tuple_is_an_unordered_set_of_attribute_values. A_table_is_a_two-dimensional_representation_of_a_relation_in_the_form_of_rows(tuples)_and_columns(attributes)._Each_row_in_a_table_has_the_same_set_of_columns._A_relational_databas_is_a_database_that_stores_data_in_relations(tables)._For_example,_a_relationsal_database_colud_store_information_about_company_employees_in_an_employee_table,_a_department_table,_and_a_salary_table. _Relational_Database_Management_System(RDBMS) The_relational_model_is_the_basis_for_a_ relational_database_management_system(RDBMS) . An_RDBMS_moves_data_into_a_database,stores_the_data,_and_retrieves_it_so_that_applications_can_manipulate_it . _Schema_Objects _Data_Access _Transaction_Managment _Oracle_Database_Architecture _Oracle_Database_Document_Roadmap_____","title":"1. Introduction to Oracle Database"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_part_1_oracle_relational_data_structures","text":"","title":"_Part_1_Oracle_Relational_Data_Structures"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_1_introduction_to_oracle_database","text":"This_chapter_provides_an_overview_of_Oracle_Database. This_chapter_contains_the_following_topics: - About_Relational_Database -_Schema_Objects -_Data_Access -_Transaction_Managment -_Oracle_Database_Architecture -_Oracle_Database_Document_Roadmap","title":"_1._Introduction_to_Oracle_Database"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_about_relational_database","text":"Every_organization_has_information_that_it_must_store_and_manage_to_meet_its_requirements. For_example,a_corporation_must_be_available_to_those_who_need_it . An_information_system_is_a_formal_system_for_storing_and_processing_information.An_information_system_could_be_a_set_of_cardboard_boxes_containing_manilafolders_along_with_rules_for_how_to_store_and_retrieve_the_folders._Howver,most_companies_today_use_a_database_to_automate_their_information_systems._Adatabase_is_an_organized_collection_of_information_treated_as_a_unit._The_purpose_of_a_database_is_to_collect,store,and_retrieve_related_information_for_use_by_database_applications.","title":"_About_Relational_Database"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#database_management_systemdbms","text":"A_ database_management_system(DBMS) _is_software_that_controls_the_storage,organization,and_retrieval_of_data. Typically,a_DBMS_has_the_following_elements: - Kernel_code ___This_code_manages_memory_and_storage_for_the_DBMS. -_Repository_of_metadata ___This_repository_is_usually_called_a_data_dictionary. -_Query_language ___This_language_enables_applications_to_access_the_data. A_database_application_is_a_software_program_that_interacts_whith_a_database_to_access_and_manipulate_data. The_first_generation_of_database_management_systems_included_the_following_types: *_Hierarchical ___A_hierachical_database_organizes_data_in_a_tree_structure._Each_parent_record_has_on_or_more_child_resords,similar_to_the_structure_of_a_file_system. *_Network ___A_network_database_is_similar_to_hierrarchical_database,_except_resords_have_a_many-to-many_rather_than_a_one-to-many_relationship. The_preceding_database_management_systems_stored_data_in__rigid,_predetermined_relationships._Because_no_data_definition_language_existed,_changing_the_structure_of_the_data_was_difficult,Also,these_systems_lacked_a_simple_query_langauge,_whichc_hindered_application_development.","title":"Database_Management_System(DBMS)"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_relational_model","text":"In_his_seminal_1970_paper_\u201cA_Relational_Model_of_Data_for_Large_Shared_Data_Banks,\u201dE.F.Codd_defined_a_relational_model_based_on_mathematical_set_theory.Today,_the_most_widely_accepted_database_mode_is_the_relational_model. A_relational_database_is_a_database_that_conforms_to_the_relational_model.The_relational_model_has_the_following_major_aspects: -_Structures ___Well-defined_objects_store_or_access_the_data_of_a_database. -_Operations ___Clearly_defined_actions_enable_applications_to_manipulate_the_data_and_structures_of_database. -_Integrity_rules ___Integrity_rules_govern_operations_on_the_data_and_structures_of_a_database. A_relational_database_stores_data_in_a_set_of_simple_relations.A_relation_is_a_set_of_tuples.A_tuple_is_an_unordered_set_of_attribute_values. A_table_is_a_two-dimensional_representation_of_a_relation_in_the_form_of_rows(tuples)_and_columns(attributes)._Each_row_in_a_table_has_the_same_set_of_columns._A_relational_databas_is_a_database_that_stores_data_in_relations(tables)._For_example,_a_relationsal_database_colud_store_information_about_company_employees_in_an_employee_table,_a_department_table,_and_a_salary_table.","title":"_Relational_Model"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_relational_database_management_systemrdbms","text":"The_relational_model_is_the_basis_for_a_ relational_database_management_system(RDBMS) . An_RDBMS_moves_data_into_a_database,stores_the_data,_and_retrieves_it_so_that_applications_can_manipulate_it .","title":"_Relational_Database_Management_System(RDBMS)"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_schema_objects","text":"","title":"_Schema_Objects"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_data_access","text":"","title":"_Data_Access"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_transaction_managment","text":"","title":"_Transaction_Managment"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_oracle_database_architecture","text":"","title":"_Oracle_Database_Architecture"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/1. Introduction to Oracle Database/#_oracle_database_document_roadmap_____","text":"","title":"_Oracle_Database_Document_Roadmap_____"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/Part 1 Oracle Relational Data Structures/","text":"[TOC]_ _Part_1_Oracle_Relational_Data_Structures _ 1._Introduction_to_Oracle_Database","title":"Part 1 Oracle Relational Data Structures"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/Part 1 Oracle Relational Data Structures/#_part_1_oracle_relational_data_structures","text":"","title":"_Part_1_Oracle_Relational_Data_Structures"},{"location":"Database/Oracle/basicKnowledge/Database Concepts/Part 1 Oracle Relational Data Structures/Part 1 Oracle Relational Data Structures/#_1_introduction_to_oracle_database","text":"","title":"_1._Introduction_to_Oracle_Database"},{"location":"Database/Oracle/basicKnowledge/SQL/sql_1/","text":"\u65f6\u95f4 \u65e5\u671f\u683c\u5f0f\u8bbe\u7f6e \u67e5\u770b show parameter nls_date_format; \u4fee\u6539 alter session|system set nls_date_format='' \u6708\u4efdmonths_between() months_between (a,b) \u610f\u4e3a\uff0ca\u4e0eb\u76f8\u5dee\u591a\u5c11\u4e2a\u6708\u4efd\uff08\u6b64\u5904\u6708\u4efd\u5929\u6570\u4e3a31\u5929\uff09\u3002 \u65f6\u95f4 \u65e5\u671f\u683c\u5f0f\u8bbe\u7f6e nls_date_format \u8bbe\u7f6e\u65e5\u671f\u7684\u683c\u5f0f \u67e5\u770b show parameter nls_date_format; \u4fee\u6539 alter session|system set nls_date_format='' e.g: \u4f8b\u5b501\uff1a alter session set nls_date_format='yyyy'; SYS@RACDB_1 select sysdate from dual; SYSD ---- 2020 \u4f8b\u5b502\uff1a alter session set nls_date_format='yyyy-mm-dd HH24:MI:SS'; SYS@RACDB_1 select sysdate from dual; SYSDATE ------------------- 2020-05-17 16:05:45 \u6708\u4efd months_between() months_between (a,b) \u610f\u4e3a\uff0ca\u4e0eb\u76f8\u5dee\u591a\u5c11\u4e2a\u6708\u4efd\uff08\u6b64\u5904\u6708\u4efd\u5929\u6570\u4e3a31\u5929\uff09\u3002 a b\u65f6\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4e3a\u6b63\u503c\uff0c\u5426\u5219\u4e3a\u8d1f\u503c\u3002 SYS@RACDB_1 select months_between(sysdate,sysdate+32) from dual; MONTHS_BETWEEN(SYSDATE,SYSDATE+32) ---------------------------------- -1.0322581 SYS@RACDB_1 select months_between (sysdate+33,sysdate) from dual; MONTHS_BETWEEN(SYSDATE+33,SYSDATE) ---------------------------------- 1.06451613 SYS@RACDB_1 select 31*1.06451613 from dual; 31*1.06451613 ------------- 33","title":"Sql 1"},{"location":"Database/Oracle/basicKnowledge/SQL/sql_1/#_1","text":"","title":"\u65f6\u95f4"},{"location":"Database/Oracle/basicKnowledge/SQL/sql_1/#_2","text":"nls_date_format \u8bbe\u7f6e\u65e5\u671f\u7684\u683c\u5f0f","title":"\u65e5\u671f\u683c\u5f0f\u8bbe\u7f6e"},{"location":"Database/Oracle/basicKnowledge/SQL/sql_1/#show-parameter-nls_date_format","text":"","title":"\u67e5\u770b show parameter nls_date_format;"},{"location":"Database/Oracle/basicKnowledge/SQL/sql_1/#alter-sessionsystem-set-nls_date_format","text":"e.g: \u4f8b\u5b501\uff1a alter session set nls_date_format='yyyy'; SYS@RACDB_1 select sysdate from dual; SYSD ---- 2020 \u4f8b\u5b502\uff1a alter session set nls_date_format='yyyy-mm-dd HH24:MI:SS'; SYS@RACDB_1 select sysdate from dual; SYSDATE ------------------- 2020-05-17 16:05:45","title":"\u4fee\u6539 alter session|system set nls_date_format=''"},{"location":"Database/Oracle/basicKnowledge/SQL/sql_1/#months_between","text":"","title":"\u6708\u4efdmonths_between()"},{"location":"Database/Oracle/basicKnowledge/SQL/sql_1/#months_between-ab-ab31","text":"a b\u65f6\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4e3a\u6b63\u503c\uff0c\u5426\u5219\u4e3a\u8d1f\u503c\u3002 SYS@RACDB_1 select months_between(sysdate,sysdate+32) from dual; MONTHS_BETWEEN(SYSDATE,SYSDATE+32) ---------------------------------- -1.0322581 SYS@RACDB_1 select months_between (sysdate+33,sysdate) from dual; MONTHS_BETWEEN(SYSDATE+33,SYSDATE) ---------------------------------- 1.06451613 SYS@RACDB_1 select 31*1.06451613 from dual; 31*1.06451613 ------------- 33","title":"months_between (a,b) \u610f\u4e3a\uff0ca\u4e0eb\u76f8\u5dee\u591a\u5c11\u4e2a\u6708\u4efd\uff08\u6b64\u5904\u6708\u4efd\u5929\u6570\u4e3a31\u5929\uff09\u3002"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/","text":"\u4e13\u6ce8\u81ea\u5f8b 1. \u5e72\u51c0\u5b66\u4e60\u73af\u5883\uff0c\u53bb\u6389\u5916\u90e8\u5e72\u6270\u3002 2.\u6709\u610f\u8bc6\u8bad\u7ec3\u81ea\u5df1\u7684\u96c6\u4e2d\u7cbe\u795e\u7684\u65f6\u957f\uff08\u4e13\u6ce8\uff09\u65f6\u95f4\u3002\u53bb\u9664\u5185\u90e8\u5e72\u6270. 3. \u5b66\u4e60\u4eea\u5f0f\u611f\u5efa\u7acb\uff0c\u6e10\u6e10\u8fdb\u5165\u5b66\u4e60\u610f\u5883\u3002 4. \u5584\u4e8e\u7528\u597d\u73b0\u6709\u7684\u5de5\u5177\uff0c\u4e0d\u8981\u5fcc\u8bb3\u4f7f\u7528\u5de5\u5177\u3002 5. \u8bad\u7ec3\u6ce8\u610f\u81ea\u5df1\u8981\u8d70\u795e\u80fd\u529b 6. \u575a\u6301\u5b8c\u6210\u4e00\u4e2a\u4e8b\u60c5\u540e\uff0c\u5f62\u6210\u5fc3\u6d41\u3002 \u4e13\u6ce8\u81ea\u5f8b 1. \u5e72\u51c0\u5b66\u4e60\u73af\u5883\uff0c \u53bb\u6389\u5916\u90e8\u5e72\u6270\u3002 \u6240\u6709\u5bb9\u6613\u9020\u6210\u5206\u795e\u7684\uff0c\u4e0e\u5b66\u4e60\u65e0\u5173\u7684\u4e1c\u897f\u79fb\u5f00\u3002 \u793e\u4ea4\u5a92\u4f53\uff0c\u624b\u673a\u6216\u8005\u7535\u8111\u7684\u5373\u65f6\u901a\u8baf\u5de5\u5177 \u4e0d\u9ad8\u4f30\u4e13\u6ce8\u7a0b\u5ea6\u4e0e\u81ea\u5236\u529b\u3002\u5bb9\u6613\u53d7\u5230\u5e72\u6270\u3002 \u4e13\u6ce8\u7a0b\u5de5\u7279\u70b9\uff0c\u9664\u4e86\u81ea\u52a8\u805a\u96c6\u5230\u4e00\u70b9\u5916\uff0c\u81ea\u4e0b\u800c\u4e0a\u7684\u4e00\u4e2a\u9a71\u52a8\uff0c\u5bb9\u6613\u53d7\u5230\u201c\u53ee\u201d\u7684\u58f0\u97f3\u5e72\u6270\u3002 \u5206\u5fc3\u7684\u4e8b\u60c5\u6682\u4e0d\u5904\u7406\uff0c\u8bb0\u5f55\u5728todolist\u4e0a\u9762\u3002 2.\u6709\u610f\u8bc6\u8bad\u7ec3\u81ea\u5df1\u7684\u96c6\u4e2d\u7cbe\u795e\u7684\u65f6\u957f\uff08\u4e13\u6ce8\uff09\u65f6\u95f4\u3002 \u53bb\u9664\u5185\u90e8\u5e72\u6270. \u5faa\u5e8f\u6e10\u8fdb\u8bad\u7ec3\uff01\u4ece5\u523045\u5206\u949f \u4f11\u606f5\u5206\u949f\uff0c\u7ed9\u5927\u8111\u4e00\u4e2a\u5956\u52b1\u5956\u8d4f\u3002\u5403\u70b9\u4ec0\u4e48\uff0c\u770b\u65b0\u95fb\u7b49\u3002 \u6ce8\u610f\u529b\u5c31\u662f\u667a\u529b\u7684\u4e00\u90e8\u5206\uff0c\u4e14\u53ef\u4ee5\u901a\u8fc7\u8bad\u7ec3\u5f97\u4ee5\u5de9\u56fa\u3002 \u53bb\u9664\u5185\u90e8\u5e72\u6270. \u5fc3\u4e0d\u5ff5\u672a\u6765\u7684\u4e8b\u60c5\uff0c\u53ea\u770b\u5f53\u4e0b\uff0c\u73b0\u5728\u3002 \u5217\u8ba1\u5212\u6e05\u5355\uff0c\u5f53\u5b8c\u6210\u4efb\u52a1\u540e\u5212\u6389\u3002 3. \u5b66\u4e60\u4eea\u5f0f\u611f\u5efa\u7acb\uff0c\u6e10\u6e10\u8fdb\u5165\u5b66\u4e60\u610f\u5883\u3002 todolist\uff0c\u5b8c\u6210\u4e00\u4e2a\u5212\u6389\u4e00\u4e2a\u3002 \u8fdb\u884c\u8fd9\u4e2a\u4eea\u5f0f\u5c31\u81ea\u52a8\u8fdb\u5165\u5b66\u4e60\u7684\u72b6\u6001\u3002 \u76d1\u63a7\u5927\u8111\uff0c\u89e6\u53d1\u5b66\u4e60\u5f00\u5173 \u591a\u611f\u5b98\u523a\u6fc0\uff0c\u62c9\u52a0\u6ce8\u610f\u529b\u3002 4. \u5584\u4e8e\u7528\u597d\u73b0\u6709\u7684\u5de5\u5177\uff0c\u4e0d\u8981\u5fcc\u8bb3\u4f7f\u7528\u5de5\u5177\u3002 \u7528\u597d\u73b0\u5728\u7684\u5de5\u5177\uff0c\u63d0\u4ea4\u6548\u7387 \u5fcc\u4e3a\u627e\u5de5\u5177\u9762\u6d6a\u8d39\u65f6\u95f4\u3002 \u8ba1\u65f6\u5b66\u4e60\u4e0e\u4f11\u606f\u3002 5. \u8bad\u7ec3\u6ce8\u610f\u81ea\u5df1\u8981\u8d70\u795e\u80fd\u529b \u6ce8\u610f\u5230\u81ea\u5df1\u662f\u5426\u8d70\u795e\u3002 \u8861\u91cf\u8d70\u795e\u7684\u539f\u56e0\u662f\u4ec0\u4e48\uff1f 6. \u575a\u6301\u5b8c\u6210\u4e00\u4e2a\u4e8b\u60c5\u540e\uff0c\u5f62\u6210\u5fc3\u6d41\u3002 \u5b8c\u621030-45\u5206\u949f\u4e8b\u60c5\uff0c\u671f\u95f4\u4f1a\u8fdb\u5165\u5fc3\u6d41\u7684\u72b6\u6001\u3002\u8d8a\u80fd\u4f53\u4f1a\u5230\u8fd9\u70b9\uff0c\u8d8a\u80fd\u8d70\u8fd1\u5b66\u5b66\u9738\u3002","title":"\u4e13\u6ce8\u81ea\u5f8b"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/#_1","text":"","title":"\u4e13\u6ce8\u81ea\u5f8b"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/#1","text":"\u6240\u6709\u5bb9\u6613\u9020\u6210\u5206\u795e\u7684\uff0c\u4e0e\u5b66\u4e60\u65e0\u5173\u7684\u4e1c\u897f\u79fb\u5f00\u3002 \u793e\u4ea4\u5a92\u4f53\uff0c\u624b\u673a\u6216\u8005\u7535\u8111\u7684\u5373\u65f6\u901a\u8baf\u5de5\u5177 \u4e0d\u9ad8\u4f30\u4e13\u6ce8\u7a0b\u5ea6\u4e0e\u81ea\u5236\u529b\u3002\u5bb9\u6613\u53d7\u5230\u5e72\u6270\u3002 \u4e13\u6ce8\u7a0b\u5de5\u7279\u70b9\uff0c\u9664\u4e86\u81ea\u52a8\u805a\u96c6\u5230\u4e00\u70b9\u5916\uff0c\u81ea\u4e0b\u800c\u4e0a\u7684\u4e00\u4e2a\u9a71\u52a8\uff0c\u5bb9\u6613\u53d7\u5230\u201c\u53ee\u201d\u7684\u58f0\u97f3\u5e72\u6270\u3002 \u5206\u5fc3\u7684\u4e8b\u60c5\u6682\u4e0d\u5904\u7406\uff0c\u8bb0\u5f55\u5728todolist\u4e0a\u9762\u3002","title":"1. \u5e72\u51c0\u5b66\u4e60\u73af\u5883\uff0c\u53bb\u6389\u5916\u90e8\u5e72\u6270\u3002"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/#2","text":"\u5faa\u5e8f\u6e10\u8fdb\u8bad\u7ec3\uff01\u4ece5\u523045\u5206\u949f \u4f11\u606f5\u5206\u949f\uff0c\u7ed9\u5927\u8111\u4e00\u4e2a\u5956\u52b1\u5956\u8d4f\u3002\u5403\u70b9\u4ec0\u4e48\uff0c\u770b\u65b0\u95fb\u7b49\u3002 \u6ce8\u610f\u529b\u5c31\u662f\u667a\u529b\u7684\u4e00\u90e8\u5206\uff0c\u4e14\u53ef\u4ee5\u901a\u8fc7\u8bad\u7ec3\u5f97\u4ee5\u5de9\u56fa\u3002 \u53bb\u9664\u5185\u90e8\u5e72\u6270. \u5fc3\u4e0d\u5ff5\u672a\u6765\u7684\u4e8b\u60c5\uff0c\u53ea\u770b\u5f53\u4e0b\uff0c\u73b0\u5728\u3002 \u5217\u8ba1\u5212\u6e05\u5355\uff0c\u5f53\u5b8c\u6210\u4efb\u52a1\u540e\u5212\u6389\u3002","title":"2.\u6709\u610f\u8bc6\u8bad\u7ec3\u81ea\u5df1\u7684\u96c6\u4e2d\u7cbe\u795e\u7684\u65f6\u957f\uff08\u4e13\u6ce8\uff09\u65f6\u95f4\u3002\u53bb\u9664\u5185\u90e8\u5e72\u6270."},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/#3","text":"todolist\uff0c\u5b8c\u6210\u4e00\u4e2a\u5212\u6389\u4e00\u4e2a\u3002 \u8fdb\u884c\u8fd9\u4e2a\u4eea\u5f0f\u5c31\u81ea\u52a8\u8fdb\u5165\u5b66\u4e60\u7684\u72b6\u6001\u3002 \u76d1\u63a7\u5927\u8111\uff0c\u89e6\u53d1\u5b66\u4e60\u5f00\u5173 \u591a\u611f\u5b98\u523a\u6fc0\uff0c\u62c9\u52a0\u6ce8\u610f\u529b\u3002","title":"3. \u5b66\u4e60\u4eea\u5f0f\u611f\u5efa\u7acb\uff0c\u6e10\u6e10\u8fdb\u5165\u5b66\u4e60\u610f\u5883\u3002"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/#4","text":"\u7528\u597d\u73b0\u5728\u7684\u5de5\u5177\uff0c\u63d0\u4ea4\u6548\u7387 \u5fcc\u4e3a\u627e\u5de5\u5177\u9762\u6d6a\u8d39\u65f6\u95f4\u3002 \u8ba1\u65f6\u5b66\u4e60\u4e0e\u4f11\u606f\u3002","title":"4. \u5584\u4e8e\u7528\u597d\u73b0\u6709\u7684\u5de5\u5177\uff0c\u4e0d\u8981\u5fcc\u8bb3\u4f7f\u7528\u5de5\u5177\u3002"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/#5","text":"\u6ce8\u610f\u5230\u81ea\u5df1\u662f\u5426\u8d70\u795e\u3002 \u8861\u91cf\u8d70\u795e\u7684\u539f\u56e0\u662f\u4ec0\u4e48\uff1f","title":"5. \u8bad\u7ec3\u6ce8\u610f\u81ea\u5df1\u8981\u8d70\u795e\u80fd\u529b"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u4e13\u6ce8\u81ea\u5f8b/#6","text":"\u5b8c\u621030-45\u5206\u949f\u4e8b\u60c5\uff0c\u671f\u95f4\u4f1a\u8fdb\u5165\u5fc3\u6d41\u7684\u72b6\u6001\u3002\u8d8a\u80fd\u4f53\u4f1a\u5230\u8fd9\u70b9\uff0c\u8d8a\u80fd\u8d70\u8fd1\u5b66\u5b66\u9738\u3002","title":"6. \u575a\u6301\u5b8c\u6210\u4e00\u4e2a\u4e8b\u60c5\u540e\uff0c\u5f62\u6210\u5fc3\u6d41\u3002"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u5982\u4f55\u590d\u4e60/","text":"\u5982\u4f55\u6709\u6548\u590d\u4e60 \u9009\u62e9\u5408\u9002\u7684\u8ba1\u65f6\u65b9\u5f0f 1. \u4ee5\u5929\u6570\u4e3a\u5012\u8ba1\u65f6\u3002 \u5927\u76ee\u6807\u7ec6\u5206\u6210\u5c0f\u76ee\u6807 1.\u6bcf\u4e2a\u5c0f\u76ee\u6807\u6709\u671f\u9650 2.\u671f\u9650\u53ef\u7528\u5929\uff0c\u65f6\uff0c\u5206\u6765\u5012\u8ba1\u65f6 \u5982\u4f55\u6709\u6548\u590d\u4e60 \u9009\u62e9\u5408\u9002\u7684\u8ba1\u65f6\u65b9\u5f0f 1. \u4ee5\u5929\u6570\u4e3a\u5012\u8ba1\u65f6\u3002 \u4f53\u9a8c\u65f6\u95f4\u7684\u6d41\u901d\u4e0e\u7d27\u8feb\u611f\u3002\u6708\u4efd\u611f\u89c9\u4e0d\u6df1\u523b\uff0c\u5982\u679c\u6539\u6210\u5929\u6570\u4f1a\u7d27\u8feb\u3002 \u6211\u4eec\u5230\u67d0\u4e2a\u671f\u9650\u65f6\uff08\u9700\u8981\u6d4b\u8bd5\u81ea\u5df1\u54ea\u4e2a\u65f6\u95f4\u6bb5\uff09\uff0c\u5b66\u4e60\u6548\u7387\u6700\u9ad8\u3002 \u5927\u76ee\u6807\u7ec6\u5206\u6210\u5c0f\u76ee\u6807 1.\u6bcf\u4e2a\u5c0f\u76ee\u6807\u6709\u671f\u9650 2.\u671f\u9650\u53ef\u7528\u5929\uff0c\u65f6\uff0c\u5206\u6765\u5012\u8ba1\u65f6 \u4e00\u4e2a\u4e00\u4e2a\u5c0f\u76ee\u6807\u7684\u5012\u8ba1\u65f6\u7684\u9a71\u4f7f\u4e0b\uff0c\u5229\u7528\u5927\u8111\u7684\u7126\u8651\u5e2e\u52a9\u4f60\u66f4\u6709\u6548\u7387\u3002","title":"\u5982\u4f55\u590d\u4e60"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u5982\u4f55\u590d\u4e60/#_1","text":"","title":"\u5982\u4f55\u6709\u6548\u590d\u4e60"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u5982\u4f55\u590d\u4e60/#_2","text":"","title":"\u9009\u62e9\u5408\u9002\u7684\u8ba1\u65f6\u65b9\u5f0f"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u5982\u4f55\u590d\u4e60/#1","text":"\u4f53\u9a8c\u65f6\u95f4\u7684\u6d41\u901d\u4e0e\u7d27\u8feb\u611f\u3002\u6708\u4efd\u611f\u89c9\u4e0d\u6df1\u523b\uff0c\u5982\u679c\u6539\u6210\u5929\u6570\u4f1a\u7d27\u8feb\u3002 \u6211\u4eec\u5230\u67d0\u4e2a\u671f\u9650\u65f6\uff08\u9700\u8981\u6d4b\u8bd5\u81ea\u5df1\u54ea\u4e2a\u65f6\u95f4\u6bb5\uff09\uff0c\u5b66\u4e60\u6548\u7387\u6700\u9ad8\u3002","title":"1. \u4ee5\u5929\u6570\u4e3a\u5012\u8ba1\u65f6\u3002"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u5982\u4f55\u590d\u4e60/#_3","text":"","title":"\u5927\u76ee\u6807\u7ec6\u5206\u6210\u5c0f\u76ee\u6807"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u5982\u4f55\u590d\u4e60/#1_1","text":"","title":"1.\u6bcf\u4e2a\u5c0f\u76ee\u6807\u6709\u671f\u9650"},{"location":"Database/Oracle/basicKnowledge/\u9b4f\u5764\u7433/\u5982\u4f55\u590d\u4e60/#2","text":"\u4e00\u4e2a\u4e00\u4e2a\u5c0f\u76ee\u6807\u7684\u5012\u8ba1\u65f6\u7684\u9a71\u4f7f\u4e0b\uff0c\u5229\u7528\u5927\u8111\u7684\u7126\u8651\u5e2e\u52a9\u4f60\u66f4\u6709\u6548\u7387\u3002","title":"2.\u671f\u9650\u53ef\u7528\u5929\uff0c\u65f6\uff0c\u5206\u6765\u5012\u8ba1\u65f6"},{"location":"Database/Oracle/checkOracle/checkoracle/","text":"check AIX Check Oracle configuration Check space check performence check AIX Check Oracle configuration Check space check performence","title":"Checkoracle"},{"location":"Database/Oracle/checkOracle/checkoracle/#check-aix","text":"","title":"check AIX"},{"location":"Database/Oracle/checkOracle/checkoracle/#check-oracle-configuration","text":"","title":"Check Oracle configuration"},{"location":"Database/Oracle/checkOracle/checkoracle/#check-space","text":"","title":"Check space"},{"location":"Database/Oracle/checkOracle/checkoracle/#check-performence","text":"","title":"check performence"},{"location":"Database/redi/redisReplication/","text":"1. \u73af\u5883 2. \u7f16\u8bd1\u5b89\u88c5 3. \u96c6\u7fa4\u5b89\u88c5 3.1\u76ee\u5f55 3.2 \u914d\u7f6e\u6587\u4ef6 3.3 \u542f\u52a8redis 3.4 \u521b\u5efa\u96c6\u7fa4 3.4.1 \u5bfb\u627ehelp 4. \u96c6\u7fa4\u9a8c\u8bc1 5. \u5173\u95ed\u96c6\u7fa4 6. \u68c0\u67e5\u96c6\u7fa4\u72b6\u6001 1. \u73af\u5883 \u4e3b\u673a(\u5355\u673a\u6f14\u793a) 2. \u7f16\u8bd1\u5b89\u88c5 tar -xf redis-5.0.9.tar.gz cd /RACSoftwares/text/redis cp -rp redis-5.0.9 /usr/local/ #\u94fe\u63a5 cd /usr/local/ ln -s redis-5.0.9/ redis cd redis make -j4 make install just like that: [root@rac01 redis]# make install cd src make install make[1]: Entering directory `/usr/local/redis-5.0.9/src' Hint: It's a good idea to run 'make test' ;) INSTALL install INSTALL install INSTALL install INSTALL install INSTALL install make[1]: Leaving directory `/usr/local/redis-5.0.9/src' 3. \u96c6\u7fa4\u5b89\u88c5 3.1\u76ee\u5f55 mkdir -p /DB/czqapp/redisCluster/{7000..7009}/{logs,data} 3.2 \u914d\u7f6e\u6587\u4ef6 for n in {7000..7009} do cat /DB/czqapp/redisCluster/$n/redis.conf eof #port port $n #bind IP :default 127.0.0.1,if localhost , it must be only one node #\u591a\u96c6\u7fa4\u5728\u672c\u5730\u65f6\uff0c\u9700\u8981\u4fee\u6539\u4e3a\u5177\u4f53\u7684IP\uff0c\u4e0d\u80fd\u7528127.\u3002\u6216\u80050.0. bind 192.168.6.22 #redis \u662f\u5426\u542f\u7528\u5b88\u62a4\u8fdb\u7a0b\u540e\u53f0\u8fd0\u884c\u3002 daemonize yes #pidfile pidfile /DB/czqapp/redisCluster/$n/logs/$n.pid #open cluster cluster-enabled yes #\u96c6\u7fa4\u6587\u4ef6\u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u6587\u4ef6\u9996\u6b21\u542f\u52a8\u81ea\u52a8\u751f\u62107000.\u3002\u3002 cluster-config-file nodes_$n.conf #request time out 15s can define cluster-node-timeout 15000 #aof\u65e5\u5fd7\u5f00\u6237\u5728\u9700\u8981\u5c31\u5f00\u6237\uff0c\u4f5c\u7528\uff1a\u7528\u4e8e\u8bb0\u5f55\u64cd\u4f5c\u7684\u6bcf\u6761\u65e5\u5fd7 appendonly yes eof done 3.3 \u542f\u52a8redis for n in {7000..7009} do /usr/local/redis-5.0.9/src/redis-server /DB/czqapp/redisCluster/$n/redis.conf done just like this for n in {7000..7009} do /usr/local/redis-5.0.9/src/redis-server /DB/czqapp/redisCluster/$n/redis.conf done 7688:C 03 Sep 2020 22:51:57.499 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7688:C 03 Sep 2020 22:51:57.500 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7688, just started 7688:C 03 Sep 2020 22:51:57.500 # Configuration loaded 7690:C 03 Sep 2020 22:51:57.513 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7690:C 03 Sep 2020 22:51:57.513 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7690, just started 7690:C 03 Sep 2020 22:51:57.513 # Configuration loaded 7692:C 03 Sep 2020 22:51:57.532 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7692:C 03 Sep 2020 22:51:57.532 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7692, just started 7692:C 03 Sep 2020 22:51:57.532 # Configuration loaded 7697:C 03 Sep 2020 22:51:57.556 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7697:C 03 Sep 2020 22:51:57.556 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7697, just started 7697:C 03 Sep 2020 22:51:57.556 # Configuration loaded 7705:C 03 Sep 2020 22:51:57.569 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7705:C 03 Sep 2020 22:51:57.569 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7705, just started 7705:C 03 Sep 2020 22:51:57.569 # Configuration loaded 7710:C 03 Sep 2020 22:51:57.581 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7710:C 03 Sep 2020 22:51:57.581 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7710, just started 7710:C 03 Sep 2020 22:51:57.581 # Configuration loaded 7715:C 03 Sep 2020 22:51:57.595 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7715:C 03 Sep 2020 22:51:57.595 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7715, just started 7715:C 03 Sep 2020 22:51:57.595 # Configuration loaded 7720:C 03 Sep 2020 22:51:57.611 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7720:C 03 Sep 2020 22:51:57.611 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7720, just started 7720:C 03 Sep 2020 22:51:57.611 # Configuration loaded 7725:C 03 Sep 2020 22:51:57.628 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7725:C 03 Sep 2020 22:51:57.628 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7725, just started 7725:C 03 Sep 2020 22:51:57.629 # Configuration loaded 7730:C 03 Sep 2020 22:51:57.650 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7730:C 03 Sep 2020 22:51:57.650 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7730, just started 7730:C 03 Sep 2020 22:51:57.650 # Configuration loaded check [root@mysql redis]# ps -ef |grep redis root 7689 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7000 [cluster] root 7691 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7001 [cluster] root 7696 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7002 [cluster] root 7704 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7003 [cluster] root 7709 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7004 [cluster] root 7711 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7005 [cluster] root 7716 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7006 [cluster] root 7721 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7007 [cluster] root 7726 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7008 [cluster] root 7731 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7009 [cluster] root 7941 1961 0 22:52 pts/0 00:00:00 grep --color=auto redis check port [root@mysql redis]# ss -atp |grep redis LISTEN 0 128 192.168.6.22:afs3-fileserver *:* users:(( redis-server ,7689,6)) LISTEN 0 128 192.168.6.22:afs3-callback *:* users:(( redis-server ,7691,6)) LISTEN 0 128 192.168.6.22:afs3-prserver *:* users:(( redis-server ,7696,6)) LISTEN 0 128 192.168.6.22:afs3-vlserver *:* users:(( redis-server ,7704,6)) LISTEN 0 128 192.168.6.22:afs3-kaserver *:* users:(( redis-server ,7709,6)) LISTEN 0 128 192.168.6.22:afs3-volser *:* users:(( redis-server ,7711,6)) LISTEN 0 128 192.168.6.22:afs3-errors *:* users:(( redis-server ,7716,6)) LISTEN 0 128 192.168.6.22:afs3-bos *:* users:(( redis-server ,7721,6)) LISTEN 0 128 192.168.6.22:afs3-update *:* users:(( redis-server ,7726,6)) LISTEN 0 128 192.168.6.22:afs3-rmtsys *:* users:(( redis-server ,7731,6)) LISTEN 0 128 192.168.6.22:17000 *:* users:(( redis-server ,7689,9)) LISTEN 0 128 192.168.6.22:17001 *:* users:(( redis-server ,7691,9)) LISTEN 0 128 192.168.6.22:17002 *:* users:(( redis-server ,7696,9)) LISTEN 0 128 192.168.6.22:17003 *:* users:(( redis-server ,7704,9)) LISTEN 0 128 192.168.6.22:17004 *:* users:(( redis-server ,7709,9)) LISTEN 0 128 192.168.6.22:17005 *:* users:(( redis-server ,7711,9)) LISTEN 0 128 192.168.6.22:17006 *:* users:(( redis-server ,7716,9)) LISTEN 0 128 192.168.6.22:17007 *:* users:(( redis-server ,7721,9)) LISTEN 0 128 192.168.6.22:17008 *:* users:(( redis-server ,7726,9)) LISTEN 0 128 192.168.6.22:17009 *:* users:(( redis-server ,7731,9)) 3.4 \u521b\u5efa\u96c6\u7fa4 redis-cli --cluster create {ip:port ip:port ...} --cluster-replicas 1 for n in {7000..7009} do #echo -n 192.168.6.22:$n echo 192.168.6.22:$n \\ done /usr/local/redis/src/redis-cli --cluster create \\ 192.168.6.22:7000 \\ 192.168.6.22:7001 \\ 192.168.6.22:7002 \\ 192.168.6.22:7003 \\ 192.168.6.22:7004 \\ 192.168.6.22:7005 \\ 192.168.6.22:7006 \\ 192.168.6.22:7007 \\ 192.168.6.22:7008 \\ 192.168.6.22:7009 --cluster-replicas 1 like this [root@mysql redis]# /usr/local/redis/src/redis-cli --cluster create \\ 192.168.6.22:7000 \\ 192.168.6.22:7001 \\ 192.168.6.22:7002 \\ 192.168.6.22:7003 \\ 192.168.6.22:7004 \\ 192.168.6.22:7005 \\ 192.168.6.22:7006 \\ 192.168.6.22:7007 \\ 192.168.6.22:7008 \\ 192.168.6.22:7009 --cluster-replicas 1 Performing hash slots allocation on 10 nodes... Master[0] - Slots 0 - 3276 Master[1] - Slots 3277 - 6553 Master[2] - Slots 6554 - 9829 Master[3] - Slots 9830 - 13106 Master[4] - Slots 13107 - 16383 Adding replica 192.168.6.22:7006 to 192.168.6.22:7000 Adding replica 192.168.6.22:7007 to 192.168.6.22:7001 Adding replica 192.168.6.22:7008 to 192.168.6.22:7002 Adding replica 192.168.6.22:7009 to 192.168.6.22:7003 Adding replica 192.168.6.22:7005 to 192.168.6.22:7004 Trying to optimize slaves allocation for anti-affinity [WARNING] Some slaves are in the same host as their master M: 8502488405b28ab3b27a758e42a2a7d9da48ba7e 192.168.6.22:7000 slots:[0-3276] (3277 slots) master M: e3667d6d0198b6752e3cb3d6b871cc33e6412b1b 192.168.6.22:7001 slots:[3277-6553] (3277 slots) master M: 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 192.168.6.22:7002 slots:[6554-9829] (3276 slots) master M: 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 192.168.6.22:7003 slots:[9830-13106] (3277 slots) master M: 0141741ad8c2e10ea9202b658b3ac056d8968306 192.168.6.22:7004 slots:[13107-16383] (3277 slots) master S: f461a834fbdb5672bdc42ffbc8ace4b3c2e792f1 192.168.6.22:7005 replicates 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 S: 01d2e5071b46238852c787f4332ab202af6083d7 192.168.6.22:7006 replicates 8502488405b28ab3b27a758e42a2a7d9da48ba7e S: c96310489b156de259ff63a2d86963250e5c9c78 192.168.6.22:7007 replicates 0141741ad8c2e10ea9202b658b3ac056d8968306 S: a4fa88c4b68e71ece93301e9ece010ea0409a030 192.168.6.22:7008 replicates 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 S: a9deae248772d6f2a5394ec13ef400fc8677a06c 192.168.6.22:7009 replicates e3667d6d0198b6752e3cb3d6b871cc33e6412b1b Can I set the above configuration? (type 'yes' to accept): yes Nodes configuration updated Assign a different config epoch to each node Sending CLUSTER MEET messages to join the cluster Waiting for the cluster to join ........... Performing Cluster Check (using node 192.168.6.22:7000) M: 8502488405b28ab3b27a758e42a2a7d9da48ba7e 192.168.6.22:7000 slots:[0-3276] (3277 slots) master 1 additional replica(s) S: a4fa88c4b68e71ece93301e9ece010ea0409a030 192.168.6.22:7008 slots: (0 slots) slave replicates 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 M: 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 192.168.6.22:7002 slots:[6554-9829] (3276 slots) master 1 additional replica(s) M: e3667d6d0198b6752e3cb3d6b871cc33e6412b1b 192.168.6.22:7001 slots:[3277-6553] (3277 slots) master 1 additional replica(s) M: 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 192.168.6.22:7003 slots:[9830-13106] (3277 slots) master 1 additional replica(s) S: a9deae248772d6f2a5394ec13ef400fc8677a06c 192.168.6.22:7009 slots: (0 slots) slave replicates e3667d6d0198b6752e3cb3d6b871cc33e6412b1b S: 01d2e5071b46238852c787f4332ab202af6083d7 192.168.6.22:7006 slots: (0 slots) slave replicates 8502488405b28ab3b27a758e42a2a7d9da48ba7e S: f461a834fbdb5672bdc42ffbc8ace4b3c2e792f1 192.168.6.22:7005 slots: (0 slots) slave replicates 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 S: c96310489b156de259ff63a2d86963250e5c9c78 192.168.6.22:7007 slots: (0 slots) slave replicates 0141741ad8c2e10ea9202b658b3ac056d8968306 M: 0141741ad8c2e10ea9202b658b3ac056d8968306 192.168.6.22:7004 slots:[13107-16383] (3277 slots) master 1 additional replica(s) [OK] All nodes agree about slots configuration. Check for open slots... Check slots coverage... [OK] All 16384 slots covered. 3.4.1 \u5bfb\u627ehelp 1. \u5bfb\u627e\u4e00\u5c42\u5e2e\u5fd9 redis-cli -h 2. \u5efa\u8bae\u5b50\u547d\u4ee4\u7684\u5e2e\u52a9 redis-cli --cluster help 3. \u5b50\u5b50\u547d\u4ee4\u7684\u53ef\u52a0\u5165\u53c2\u6570\u3002create \u9664\u4e86\u7b2c\u4e00\u884c\u53ef\u4ee5\u52a0\u5165host1:port1\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e8c\u884c\u52a0\u5165--cluster-replicas 1 # redis-cli --cluster help Cluster Manager Commands: create host1:port1 ... hostN:portN --cluster-replicas arg check host:port --cluster-search-multiple-owners info host:port 4. \u96c6\u7fa4\u9a8c\u8bc1 4.1 \u8fde\u63a5redis : redis-cli -h ${host} -p ${port} -c -c \u751f\u6548\u96c6\u7fa4\u6a21\u5f0f [root@mysql redis]# redis-cli -h 192.168.6.22 -p 7009 -c 192.168.6.22:7009 set name czqnubilitly - Redirected to slot [5798] located at 192.168.6.22:7001 OK 192.168.6.22:7001 get name czqnubilitly 192.168.6.22:7001 exit #####check [root@mysql redis]# redis-cli -h 192.168.6.22 -p 7008 -c 192.168.6.22:7008 get name - Redirected to slot [5798] located at 192.168.6.22:7001 czqnubilitly - Redirected to slot [5798] located at 192.168.6.22:7001 OK ==\u610f\u601d\u662f\u91cd\u5b9a\u5411\u5230\u4e0b\u8282\u70b9\u3002== 5. \u5173\u95ed\u96c6\u7fa4 5.1 \u5173\u95ed\u672c\u673a\u6240\u6709redis pkill redis 5.2 \u5173\u95ed\u5177\u4f53\u7684redis redis-cli -c -h ${host} -p ${port} shutdown 6. \u68c0\u67e5\u96c6\u7fa4\u72b6\u6001 \u68c0\u67e5\uff1a redis-cli --cluster check ${host}\uff1a${port} \u5927\u81f4\u53ef\u4ee5\u770b\u5230\u4e3b\u4ece\u8282\u70b9\uff0c\u96c6\u7fa4\u7684\u76f8\u5173\u4fe1\u606f\u3002 justlike this (5\u4e2asalve\uff0c5\u4e2amaster) [root@mysql redis]# redis-cli --cluster check 192.168.6.22:7000 192.168.6.22:7000 (85024884...) - 0 keys | 3277 slots | 1 slaves. 192.168.6.22:7002 (8968c72d...) - 0 keys | 3276 slots | 1 slaves. 192.168.6.22:7001 (e3667d6d...) - 1 keys | 3277 slots | 1 slaves. 192.168.6.22:7003 (6bda2655...) - 0 keys | 3277 slots | 1 slaves. 192.168.6.22:7004 (0141741a...) - 0 keys | 3277 slots | 1 slaves. [OK] 1 keys in 5 masters. 0.00 keys per slot on average. Performing Cluster Check (using node 192.168.6.22:7000) M: 8502488405b28ab3b27a758e42a2a7d9da48ba7e 192.168.6.22:7000 slots:[0-3276] (3277 slots) master 1 additional replica(s) S: a4fa88c4b68e71ece93301e9ece010ea0409a030 192.168.6.22:7008 slots: (0 slots) slave replicates 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 M: 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 192.168.6.22:7002 slots:[6554-9829] (3276 slots) master 1 additional replica(s) M: e3667d6d0198b6752e3cb3d6b871cc33e6412b1b 192.168.6.22:7001 slots:[3277-6553] (3277 slots) master 1 additional replica(s) M: 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 192.168.6.22:7003 slots:[9830-13106] (3277 slots) master 1 additional replica(s) S: a9deae248772d6f2a5394ec13ef400fc8677a06c 192.168.6.22:7009 slots: (0 slots) slave replicates e3667d6d0198b6752e3cb3d6b871cc33e6412b1b S: 01d2e5071b46238852c787f4332ab202af6083d7 192.168.6.22:7006 slots: (0 slots) slave replicates 8502488405b28ab3b27a758e42a2a7d9da48ba7e S: f461a834fbdb5672bdc42ffbc8ace4b3c2e792f1 192.168.6.22:7005 slots: (0 slots) slave replicates 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 S: c96310489b156de259ff63a2d86963250e5c9c78 192.168.6.22:7007 slots: (0 slots) slave replicates 0141741ad8c2e10ea9202b658b3ac056d8968306 M: 0141741ad8c2e10ea9202b658b3ac056d8968306 192.168.6.22:7004 slots:[13107-16383] (3277 slots) master 1 additional replica(s) [OK] All nodes agree about slots configuration. Check for open slots... Check slots coverage... [OK] All 16384 slots covered.","title":"redisReplication"},{"location":"Database/redi/redisReplication/#1","text":"\u4e3b\u673a(\u5355\u673a\u6f14\u793a)","title":"1. \u73af\u5883"},{"location":"Database/redi/redisReplication/#2","text":"tar -xf redis-5.0.9.tar.gz cd /RACSoftwares/text/redis cp -rp redis-5.0.9 /usr/local/ #\u94fe\u63a5 cd /usr/local/ ln -s redis-5.0.9/ redis cd redis make -j4 make install just like that: [root@rac01 redis]# make install cd src make install make[1]: Entering directory `/usr/local/redis-5.0.9/src' Hint: It's a good idea to run 'make test' ;) INSTALL install INSTALL install INSTALL install INSTALL install INSTALL install make[1]: Leaving directory `/usr/local/redis-5.0.9/src'","title":"2. \u7f16\u8bd1\u5b89\u88c5"},{"location":"Database/redi/redisReplication/#3","text":"","title":"3. \u96c6\u7fa4\u5b89\u88c5"},{"location":"Database/redi/redisReplication/#31","text":"mkdir -p /DB/czqapp/redisCluster/{7000..7009}/{logs,data}","title":"3.1\u76ee\u5f55"},{"location":"Database/redi/redisReplication/#32","text":"for n in {7000..7009} do cat /DB/czqapp/redisCluster/$n/redis.conf eof #port port $n #bind IP :default 127.0.0.1,if localhost , it must be only one node #\u591a\u96c6\u7fa4\u5728\u672c\u5730\u65f6\uff0c\u9700\u8981\u4fee\u6539\u4e3a\u5177\u4f53\u7684IP\uff0c\u4e0d\u80fd\u7528127.\u3002\u6216\u80050.0. bind 192.168.6.22 #redis \u662f\u5426\u542f\u7528\u5b88\u62a4\u8fdb\u7a0b\u540e\u53f0\u8fd0\u884c\u3002 daemonize yes #pidfile pidfile /DB/czqapp/redisCluster/$n/logs/$n.pid #open cluster cluster-enabled yes #\u96c6\u7fa4\u6587\u4ef6\u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u6587\u4ef6\u9996\u6b21\u542f\u52a8\u81ea\u52a8\u751f\u62107000.\u3002\u3002 cluster-config-file nodes_$n.conf #request time out 15s can define cluster-node-timeout 15000 #aof\u65e5\u5fd7\u5f00\u6237\u5728\u9700\u8981\u5c31\u5f00\u6237\uff0c\u4f5c\u7528\uff1a\u7528\u4e8e\u8bb0\u5f55\u64cd\u4f5c\u7684\u6bcf\u6761\u65e5\u5fd7 appendonly yes eof done","title":"3.2 \u914d\u7f6e\u6587\u4ef6"},{"location":"Database/redi/redisReplication/#33-redis","text":"for n in {7000..7009} do /usr/local/redis-5.0.9/src/redis-server /DB/czqapp/redisCluster/$n/redis.conf done just like this for n in {7000..7009} do /usr/local/redis-5.0.9/src/redis-server /DB/czqapp/redisCluster/$n/redis.conf done 7688:C 03 Sep 2020 22:51:57.499 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7688:C 03 Sep 2020 22:51:57.500 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7688, just started 7688:C 03 Sep 2020 22:51:57.500 # Configuration loaded 7690:C 03 Sep 2020 22:51:57.513 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7690:C 03 Sep 2020 22:51:57.513 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7690, just started 7690:C 03 Sep 2020 22:51:57.513 # Configuration loaded 7692:C 03 Sep 2020 22:51:57.532 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7692:C 03 Sep 2020 22:51:57.532 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7692, just started 7692:C 03 Sep 2020 22:51:57.532 # Configuration loaded 7697:C 03 Sep 2020 22:51:57.556 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7697:C 03 Sep 2020 22:51:57.556 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7697, just started 7697:C 03 Sep 2020 22:51:57.556 # Configuration loaded 7705:C 03 Sep 2020 22:51:57.569 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7705:C 03 Sep 2020 22:51:57.569 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7705, just started 7705:C 03 Sep 2020 22:51:57.569 # Configuration loaded 7710:C 03 Sep 2020 22:51:57.581 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7710:C 03 Sep 2020 22:51:57.581 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7710, just started 7710:C 03 Sep 2020 22:51:57.581 # Configuration loaded 7715:C 03 Sep 2020 22:51:57.595 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7715:C 03 Sep 2020 22:51:57.595 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7715, just started 7715:C 03 Sep 2020 22:51:57.595 # Configuration loaded 7720:C 03 Sep 2020 22:51:57.611 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7720:C 03 Sep 2020 22:51:57.611 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7720, just started 7720:C 03 Sep 2020 22:51:57.611 # Configuration loaded 7725:C 03 Sep 2020 22:51:57.628 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7725:C 03 Sep 2020 22:51:57.628 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7725, just started 7725:C 03 Sep 2020 22:51:57.629 # Configuration loaded 7730:C 03 Sep 2020 22:51:57.650 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 7730:C 03 Sep 2020 22:51:57.650 # Redis version=5.0.9, bits=64, commit=00000000, modified=0, pid=7730, just started 7730:C 03 Sep 2020 22:51:57.650 # Configuration loaded check [root@mysql redis]# ps -ef |grep redis root 7689 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7000 [cluster] root 7691 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7001 [cluster] root 7696 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7002 [cluster] root 7704 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7003 [cluster] root 7709 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7004 [cluster] root 7711 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7005 [cluster] root 7716 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7006 [cluster] root 7721 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7007 [cluster] root 7726 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7008 [cluster] root 7731 1 0 22:51 ? 00:00:00 /usr/local/redis-5.0.9/src/redis-server 192.168.6.22:7009 [cluster] root 7941 1961 0 22:52 pts/0 00:00:00 grep --color=auto redis check port [root@mysql redis]# ss -atp |grep redis LISTEN 0 128 192.168.6.22:afs3-fileserver *:* users:(( redis-server ,7689,6)) LISTEN 0 128 192.168.6.22:afs3-callback *:* users:(( redis-server ,7691,6)) LISTEN 0 128 192.168.6.22:afs3-prserver *:* users:(( redis-server ,7696,6)) LISTEN 0 128 192.168.6.22:afs3-vlserver *:* users:(( redis-server ,7704,6)) LISTEN 0 128 192.168.6.22:afs3-kaserver *:* users:(( redis-server ,7709,6)) LISTEN 0 128 192.168.6.22:afs3-volser *:* users:(( redis-server ,7711,6)) LISTEN 0 128 192.168.6.22:afs3-errors *:* users:(( redis-server ,7716,6)) LISTEN 0 128 192.168.6.22:afs3-bos *:* users:(( redis-server ,7721,6)) LISTEN 0 128 192.168.6.22:afs3-update *:* users:(( redis-server ,7726,6)) LISTEN 0 128 192.168.6.22:afs3-rmtsys *:* users:(( redis-server ,7731,6)) LISTEN 0 128 192.168.6.22:17000 *:* users:(( redis-server ,7689,9)) LISTEN 0 128 192.168.6.22:17001 *:* users:(( redis-server ,7691,9)) LISTEN 0 128 192.168.6.22:17002 *:* users:(( redis-server ,7696,9)) LISTEN 0 128 192.168.6.22:17003 *:* users:(( redis-server ,7704,9)) LISTEN 0 128 192.168.6.22:17004 *:* users:(( redis-server ,7709,9)) LISTEN 0 128 192.168.6.22:17005 *:* users:(( redis-server ,7711,9)) LISTEN 0 128 192.168.6.22:17006 *:* users:(( redis-server ,7716,9)) LISTEN 0 128 192.168.6.22:17007 *:* users:(( redis-server ,7721,9)) LISTEN 0 128 192.168.6.22:17008 *:* users:(( redis-server ,7726,9)) LISTEN 0 128 192.168.6.22:17009 *:* users:(( redis-server ,7731,9))","title":"3.3 \u542f\u52a8redis"},{"location":"Database/redi/redisReplication/#34","text":"redis-cli --cluster create {ip:port ip:port ...} --cluster-replicas 1 for n in {7000..7009} do #echo -n 192.168.6.22:$n echo 192.168.6.22:$n \\ done /usr/local/redis/src/redis-cli --cluster create \\ 192.168.6.22:7000 \\ 192.168.6.22:7001 \\ 192.168.6.22:7002 \\ 192.168.6.22:7003 \\ 192.168.6.22:7004 \\ 192.168.6.22:7005 \\ 192.168.6.22:7006 \\ 192.168.6.22:7007 \\ 192.168.6.22:7008 \\ 192.168.6.22:7009 --cluster-replicas 1 like this [root@mysql redis]# /usr/local/redis/src/redis-cli --cluster create \\ 192.168.6.22:7000 \\ 192.168.6.22:7001 \\ 192.168.6.22:7002 \\ 192.168.6.22:7003 \\ 192.168.6.22:7004 \\ 192.168.6.22:7005 \\ 192.168.6.22:7006 \\ 192.168.6.22:7007 \\ 192.168.6.22:7008 \\ 192.168.6.22:7009 --cluster-replicas 1 Performing hash slots allocation on 10 nodes... Master[0] - Slots 0 - 3276 Master[1] - Slots 3277 - 6553 Master[2] - Slots 6554 - 9829 Master[3] - Slots 9830 - 13106 Master[4] - Slots 13107 - 16383 Adding replica 192.168.6.22:7006 to 192.168.6.22:7000 Adding replica 192.168.6.22:7007 to 192.168.6.22:7001 Adding replica 192.168.6.22:7008 to 192.168.6.22:7002 Adding replica 192.168.6.22:7009 to 192.168.6.22:7003 Adding replica 192.168.6.22:7005 to 192.168.6.22:7004 Trying to optimize slaves allocation for anti-affinity [WARNING] Some slaves are in the same host as their master M: 8502488405b28ab3b27a758e42a2a7d9da48ba7e 192.168.6.22:7000 slots:[0-3276] (3277 slots) master M: e3667d6d0198b6752e3cb3d6b871cc33e6412b1b 192.168.6.22:7001 slots:[3277-6553] (3277 slots) master M: 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 192.168.6.22:7002 slots:[6554-9829] (3276 slots) master M: 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 192.168.6.22:7003 slots:[9830-13106] (3277 slots) master M: 0141741ad8c2e10ea9202b658b3ac056d8968306 192.168.6.22:7004 slots:[13107-16383] (3277 slots) master S: f461a834fbdb5672bdc42ffbc8ace4b3c2e792f1 192.168.6.22:7005 replicates 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 S: 01d2e5071b46238852c787f4332ab202af6083d7 192.168.6.22:7006 replicates 8502488405b28ab3b27a758e42a2a7d9da48ba7e S: c96310489b156de259ff63a2d86963250e5c9c78 192.168.6.22:7007 replicates 0141741ad8c2e10ea9202b658b3ac056d8968306 S: a4fa88c4b68e71ece93301e9ece010ea0409a030 192.168.6.22:7008 replicates 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 S: a9deae248772d6f2a5394ec13ef400fc8677a06c 192.168.6.22:7009 replicates e3667d6d0198b6752e3cb3d6b871cc33e6412b1b Can I set the above configuration? (type 'yes' to accept): yes Nodes configuration updated Assign a different config epoch to each node Sending CLUSTER MEET messages to join the cluster Waiting for the cluster to join ........... Performing Cluster Check (using node 192.168.6.22:7000) M: 8502488405b28ab3b27a758e42a2a7d9da48ba7e 192.168.6.22:7000 slots:[0-3276] (3277 slots) master 1 additional replica(s) S: a4fa88c4b68e71ece93301e9ece010ea0409a030 192.168.6.22:7008 slots: (0 slots) slave replicates 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 M: 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 192.168.6.22:7002 slots:[6554-9829] (3276 slots) master 1 additional replica(s) M: e3667d6d0198b6752e3cb3d6b871cc33e6412b1b 192.168.6.22:7001 slots:[3277-6553] (3277 slots) master 1 additional replica(s) M: 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 192.168.6.22:7003 slots:[9830-13106] (3277 slots) master 1 additional replica(s) S: a9deae248772d6f2a5394ec13ef400fc8677a06c 192.168.6.22:7009 slots: (0 slots) slave replicates e3667d6d0198b6752e3cb3d6b871cc33e6412b1b S: 01d2e5071b46238852c787f4332ab202af6083d7 192.168.6.22:7006 slots: (0 slots) slave replicates 8502488405b28ab3b27a758e42a2a7d9da48ba7e S: f461a834fbdb5672bdc42ffbc8ace4b3c2e792f1 192.168.6.22:7005 slots: (0 slots) slave replicates 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 S: c96310489b156de259ff63a2d86963250e5c9c78 192.168.6.22:7007 slots: (0 slots) slave replicates 0141741ad8c2e10ea9202b658b3ac056d8968306 M: 0141741ad8c2e10ea9202b658b3ac056d8968306 192.168.6.22:7004 slots:[13107-16383] (3277 slots) master 1 additional replica(s) [OK] All nodes agree about slots configuration. Check for open slots... Check slots coverage... [OK] All 16384 slots covered.","title":"3.4 \u521b\u5efa\u96c6\u7fa4"},{"location":"Database/redi/redisReplication/#341-help","text":"1. \u5bfb\u627e\u4e00\u5c42\u5e2e\u5fd9 redis-cli -h 2. \u5efa\u8bae\u5b50\u547d\u4ee4\u7684\u5e2e\u52a9 redis-cli --cluster help 3. \u5b50\u5b50\u547d\u4ee4\u7684\u53ef\u52a0\u5165\u53c2\u6570\u3002create \u9664\u4e86\u7b2c\u4e00\u884c\u53ef\u4ee5\u52a0\u5165host1:port1\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e8c\u884c\u52a0\u5165--cluster-replicas 1 # redis-cli --cluster help Cluster Manager Commands: create host1:port1 ... hostN:portN --cluster-replicas arg check host:port --cluster-search-multiple-owners info host:port","title":"3.4.1 \u5bfb\u627ehelp"},{"location":"Database/redi/redisReplication/#4","text":"4.1 \u8fde\u63a5redis : redis-cli -h ${host} -p ${port} -c -c \u751f\u6548\u96c6\u7fa4\u6a21\u5f0f [root@mysql redis]# redis-cli -h 192.168.6.22 -p 7009 -c 192.168.6.22:7009 set name czqnubilitly - Redirected to slot [5798] located at 192.168.6.22:7001 OK 192.168.6.22:7001 get name czqnubilitly 192.168.6.22:7001 exit #####check [root@mysql redis]# redis-cli -h 192.168.6.22 -p 7008 -c 192.168.6.22:7008 get name - Redirected to slot [5798] located at 192.168.6.22:7001 czqnubilitly - Redirected to slot [5798] located at 192.168.6.22:7001 OK ==\u610f\u601d\u662f\u91cd\u5b9a\u5411\u5230\u4e0b\u8282\u70b9\u3002==","title":"4. \u96c6\u7fa4\u9a8c\u8bc1"},{"location":"Database/redi/redisReplication/#5","text":"5.1 \u5173\u95ed\u672c\u673a\u6240\u6709redis pkill redis 5.2 \u5173\u95ed\u5177\u4f53\u7684redis redis-cli -c -h ${host} -p ${port} shutdown","title":"5. \u5173\u95ed\u96c6\u7fa4"},{"location":"Database/redi/redisReplication/#6","text":"\u68c0\u67e5\uff1a redis-cli --cluster check ${host}\uff1a${port} \u5927\u81f4\u53ef\u4ee5\u770b\u5230\u4e3b\u4ece\u8282\u70b9\uff0c\u96c6\u7fa4\u7684\u76f8\u5173\u4fe1\u606f\u3002 justlike this (5\u4e2asalve\uff0c5\u4e2amaster) [root@mysql redis]# redis-cli --cluster check 192.168.6.22:7000 192.168.6.22:7000 (85024884...) - 0 keys | 3277 slots | 1 slaves. 192.168.6.22:7002 (8968c72d...) - 0 keys | 3276 slots | 1 slaves. 192.168.6.22:7001 (e3667d6d...) - 1 keys | 3277 slots | 1 slaves. 192.168.6.22:7003 (6bda2655...) - 0 keys | 3277 slots | 1 slaves. 192.168.6.22:7004 (0141741a...) - 0 keys | 3277 slots | 1 slaves. [OK] 1 keys in 5 masters. 0.00 keys per slot on average. Performing Cluster Check (using node 192.168.6.22:7000) M: 8502488405b28ab3b27a758e42a2a7d9da48ba7e 192.168.6.22:7000 slots:[0-3276] (3277 slots) master 1 additional replica(s) S: a4fa88c4b68e71ece93301e9ece010ea0409a030 192.168.6.22:7008 slots: (0 slots) slave replicates 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 M: 8968c72d7e5fb74b613aa88b84c13b1a3f44c962 192.168.6.22:7002 slots:[6554-9829] (3276 slots) master 1 additional replica(s) M: e3667d6d0198b6752e3cb3d6b871cc33e6412b1b 192.168.6.22:7001 slots:[3277-6553] (3277 slots) master 1 additional replica(s) M: 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 192.168.6.22:7003 slots:[9830-13106] (3277 slots) master 1 additional replica(s) S: a9deae248772d6f2a5394ec13ef400fc8677a06c 192.168.6.22:7009 slots: (0 slots) slave replicates e3667d6d0198b6752e3cb3d6b871cc33e6412b1b S: 01d2e5071b46238852c787f4332ab202af6083d7 192.168.6.22:7006 slots: (0 slots) slave replicates 8502488405b28ab3b27a758e42a2a7d9da48ba7e S: f461a834fbdb5672bdc42ffbc8ace4b3c2e792f1 192.168.6.22:7005 slots: (0 slots) slave replicates 6bda2655347d4b1c8c36c1ed6db5a87182fe2ff4 S: c96310489b156de259ff63a2d86963250e5c9c78 192.168.6.22:7007 slots: (0 slots) slave replicates 0141741ad8c2e10ea9202b658b3ac056d8968306 M: 0141741ad8c2e10ea9202b658b3ac056d8968306 192.168.6.22:7004 slots:[13107-16383] (3277 slots) master 1 additional replica(s) [OK] All nodes agree about slots configuration. Check for open slots... Check slots coverage... [OK] All 16384 slots covered.","title":"6. \u68c0\u67e5\u96c6\u7fa4\u72b6\u6001"},{"location":"Docker&KUBERNETES/Kubernetes\u67b6\u6784/","text":"K8S\u7279\u70b9 K8S\u7279\u70b9 \u81ea\u52a8\u88c5\u7bb1\uff0c\u81ea\u6211\u4fee\u590d\uff0c\u6c34\u5e73\u6269\u5c55\uff0c\u670d\u52a1\u53d1\u73b0\u548c\u8d1f\u8f7d\u5747\u8861\uff0c\u81ea\u52a8\u53d1\u5e03\u548c\u56de\u6eda \u5bc6\u94a5\u548c\u914d\u7f6e[\u6587\u4ef6]\u7ba1\u7406,\u5b58\u50a8\u7f16\u6392\uff0c\u6279\u91cf\u5904\u7406\u6267\u884c \u96c6\u7fa4\uff0cAPI Server,Scheduler master/node Mater:API server ,scheduler,Controller-Manager Node\uff1a kubelet,\u7a97\u53e3\u5f15\u64ce\uff08Docker\u2026) Pod,Lable,Lable Selector master / nodes(works)","title":"Kubernetes\u67b6\u6784"},{"location":"Docker&KUBERNETES/Kubernetes\u67b6\u6784/#k8s","text":"\u81ea\u52a8\u88c5\u7bb1\uff0c\u81ea\u6211\u4fee\u590d\uff0c\u6c34\u5e73\u6269\u5c55\uff0c\u670d\u52a1\u53d1\u73b0\u548c\u8d1f\u8f7d\u5747\u8861\uff0c\u81ea\u52a8\u53d1\u5e03\u548c\u56de\u6eda \u5bc6\u94a5\u548c\u914d\u7f6e[\u6587\u4ef6]\u7ba1\u7406,\u5b58\u50a8\u7f16\u6392\uff0c\u6279\u91cf\u5904\u7406\u6267\u884c \u96c6\u7fa4\uff0cAPI Server,Scheduler master/node Mater:API server ,scheduler,Controller-Manager Node\uff1a kubelet,\u7a97\u53e3\u5f15\u64ce\uff08Docker\u2026) Pod,Lable,Lable Selector master / nodes(works)","title":"K8S\u7279\u70b9"},{"location":"Docker&KUBERNETES/Docker/00.Docker\u955c\u50cf\u52a0\u901f\u8bbe\u7f6e/","text":"\u56fd\u5185\u7684\u955c\u50cf\u5730\u5740 Docker\u914d\u7f6e\u6587\u4ef6 /etc/docker/deamon.json \u5f02\u5e38\u5904\u7406 \u56fd\u5185\u7684\u955c\u50cf\u5730\u5740 \u7f51\u6613\u4e91\u52a0\u901f\u5668 https://hub-mirror.c.163.com \u767e\u5ea6\u4e91\u52a0\u901f\u5668 https://mirror.baidubce.com Docker\u914d\u7f6e\u6587\u4ef6 /etc/docker/deamon.json { registry-mirrors :[ https://hub-mirror.c.163.com , https://mirror.baidubce.com ] } \u4e00\u5b9a\u8981\u7b26\u5408Json\u683c\u5f0f,\u5426\u5219Docker\u4e0d\u80fd\u542f\u52a8. systemctl daemon-reload systemctl restart docker \u5f02\u5e38\u5904\u7406 Dokcer\u8d77\u4e0d\u6765 \u67e5\u770b\u65e5\u5fd7 /var/log/messages ,\u5982\u89c1\u4ee5\u4e0b\u62a5\u9519: Aug 30 00:39:15 mysql dockerd-current: unable to configure the Docker daemon with file /etc/docker/daemon.json: the following directives are specified both as a flag and in the configuration file: registry-mirrors: (from flag: [https://docker.mirrors.ustc.edu.cn/], from file: https://hub-mirror.c.162.com) 1.1. \u89e3\u51b3\u65b9\u6848: \u67e5\u770b\u5e76\u4fee\u6539\u4ee5\u4e0b\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff1a /usr/lib/systemd/system/docker.service /etc/sysconfig/docker \u53bb\u6389\u4ee5\u4e0b\u7c97\u4f53\u5185\u5bb9 --registry-mirror=https://docker.mirrors.ustc.edu.cn grep registry /etc/sysconfig/docker /usr/lib/systemd/system/docker.service OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false --registry-mirror=https://docker.mirrors.ustc.edu.cn' \u518d\u91cd\u542f\uff1a systemctl daemon-reload systemctl restart docker https://github.com/yeasy/docker_practice/blob/master/install/mirror.md","title":"00.Docker\u955c\u50cf\u52a0\u901f\u8bbe\u7f6e"},{"location":"Docker&KUBERNETES/Docker/00.Docker\u955c\u50cf\u52a0\u901f\u8bbe\u7f6e/#_1","text":"\u7f51\u6613\u4e91\u52a0\u901f\u5668 https://hub-mirror.c.163.com \u767e\u5ea6\u4e91\u52a0\u901f\u5668 https://mirror.baidubce.com","title":"\u56fd\u5185\u7684\u955c\u50cf\u5730\u5740"},{"location":"Docker&KUBERNETES/Docker/00.Docker\u955c\u50cf\u52a0\u901f\u8bbe\u7f6e/#docker","text":"","title":"Docker\u914d\u7f6e\u6587\u4ef6"},{"location":"Docker&KUBERNETES/Docker/00.Docker\u955c\u50cf\u52a0\u901f\u8bbe\u7f6e/#etcdockerdeamonjson","text":"{ registry-mirrors :[ https://hub-mirror.c.163.com , https://mirror.baidubce.com ] } \u4e00\u5b9a\u8981\u7b26\u5408Json\u683c\u5f0f,\u5426\u5219Docker\u4e0d\u80fd\u542f\u52a8. systemctl daemon-reload systemctl restart docker","title":"/etc/docker/deamon.json"},{"location":"Docker&KUBERNETES/Docker/00.Docker\u955c\u50cf\u52a0\u901f\u8bbe\u7f6e/#_2","text":"Dokcer\u8d77\u4e0d\u6765 \u67e5\u770b\u65e5\u5fd7 /var/log/messages ,\u5982\u89c1\u4ee5\u4e0b\u62a5\u9519: Aug 30 00:39:15 mysql dockerd-current: unable to configure the Docker daemon with file /etc/docker/daemon.json: the following directives are specified both as a flag and in the configuration file: registry-mirrors: (from flag: [https://docker.mirrors.ustc.edu.cn/], from file: https://hub-mirror.c.162.com) 1.1. \u89e3\u51b3\u65b9\u6848: \u67e5\u770b\u5e76\u4fee\u6539\u4ee5\u4e0b\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff1a /usr/lib/systemd/system/docker.service /etc/sysconfig/docker \u53bb\u6389\u4ee5\u4e0b\u7c97\u4f53\u5185\u5bb9 --registry-mirror=https://docker.mirrors.ustc.edu.cn grep registry /etc/sysconfig/docker /usr/lib/systemd/system/docker.service OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false --registry-mirror=https://docker.mirrors.ustc.edu.cn' \u518d\u91cd\u542f\uff1a systemctl daemon-reload systemctl restart docker https://github.com/yeasy/docker_practice/blob/master/install/mirror.md","title":"\u5f02\u5e38\u5904\u7406"},{"location":"Docker&KUBERNETES/Docker/02.Docker\u5b9e\u6218\u4e4b\u5bb9\u5668\u57fa\u7840\u547d\u4ee4\u7cfb\u5217/","text":"Docker\u5b89\u88c5\u90e8\u7f72 Docker\u5b89\u88c5\u90e8\u7f72 [root@mysql ~]# docker search java INDEX NAME DESCRIPTION STARS OFFICIAL AUTOMATED docker.io docker.io/node Node.js is a JavaScript-based platform for... 9162 [OK] docker.io docker.io/tomcat Apache Tomcat is an open source implementa... 2819 [OK] docker.io docker.io/openjdk OpenJDK is an open-source implementation o... 2403 [OK] docker.io docker.io/java Java is a concurrent, class-based, and obj... 1976 [OK] docker.io docker.io/ghost Ghost is a free and open source blogging p... 1242 [OK] docker.io docker.io/couchdb CouchDB is a database that uses JSON for d... 364 [OK] docker.io docker.io/jetty Jetty provides a Web server and javax.serv... 344 [OK] docker.io docker.io/groovy Apache Groovy is a multi-faceted language ... 100 [OK] docker.io docker.io/ibmjava Official IBM\u00ae SDK, Java\u2122 Technology Editio... 80 [OK] docker.io docker.io/lwieske/java-8 Oracle Java 8 Container - Full + Slim - Ba... 47 [OK] docker.io docker.io/nimmis/java-centos This is docker images of CentOS 7 with dif... 42 [OK] docker.io docker.io/fabric8/java-jboss-openjdk8-jdk Fabric8 Java Base Image (JBoss, OpenJDK 8) 28 [OK] docker.io docker.io/cloudbees/java-build-tools Docker image with commonly used tools to b... 15 [OK] docker.io docker.io/frekele/java docker run --rm --name java frekele/java 12 [OK] docker.io docker.io/blacklabelops/java Java Base Images. 8 [OK] docker.io docker.io/bitnami/java Bitnami Java Docker Image 5 [OK] docker.io docker.io/rightctrl/java Oracle Java 3 [OK] docker.io docker.io/cfje/java-test-applications Java Test Applications CI Image 2 docker.io docker.io/buildo/java8-wkhtmltopdf Java 8 + wkhtmltopdf 1 [OK] docker.io docker.io/cfje/java-buildpack Java Buildpack CI Image 1 docker.io docker.io/cfje/java-resource Java Concourse Resource 1 docker.io docker.io/cfje/java-buildpack-dependency-builder Java Buildpack Dependencies Builder Image 0 docker.io docker.io/cfje/java-buildpack-memory-calculator Java Buildpack Memory Calculator CI Image 0 docker.io docker.io/jelastic/javaengine An image of the Java Engine server maintai... 0 docker.io docker.io/thingswise/java-docker Java + dcd 0 [OK]","title":"02.Docker\u5b9e\u6218\u4e4b\u5bb9\u5668\u57fa\u7840\u547d\u4ee4\u7cfb\u5217"},{"location":"Docker&KUBERNETES/Docker/02.Docker\u5b9e\u6218\u4e4b\u5bb9\u5668\u57fa\u7840\u547d\u4ee4\u7cfb\u5217/#docker","text":"[root@mysql ~]# docker search java INDEX NAME DESCRIPTION STARS OFFICIAL AUTOMATED docker.io docker.io/node Node.js is a JavaScript-based platform for... 9162 [OK] docker.io docker.io/tomcat Apache Tomcat is an open source implementa... 2819 [OK] docker.io docker.io/openjdk OpenJDK is an open-source implementation o... 2403 [OK] docker.io docker.io/java Java is a concurrent, class-based, and obj... 1976 [OK] docker.io docker.io/ghost Ghost is a free and open source blogging p... 1242 [OK] docker.io docker.io/couchdb CouchDB is a database that uses JSON for d... 364 [OK] docker.io docker.io/jetty Jetty provides a Web server and javax.serv... 344 [OK] docker.io docker.io/groovy Apache Groovy is a multi-faceted language ... 100 [OK] docker.io docker.io/ibmjava Official IBM\u00ae SDK, Java\u2122 Technology Editio... 80 [OK] docker.io docker.io/lwieske/java-8 Oracle Java 8 Container - Full + Slim - Ba... 47 [OK] docker.io docker.io/nimmis/java-centos This is docker images of CentOS 7 with dif... 42 [OK] docker.io docker.io/fabric8/java-jboss-openjdk8-jdk Fabric8 Java Base Image (JBoss, OpenJDK 8) 28 [OK] docker.io docker.io/cloudbees/java-build-tools Docker image with commonly used tools to b... 15 [OK] docker.io docker.io/frekele/java docker run --rm --name java frekele/java 12 [OK] docker.io docker.io/blacklabelops/java Java Base Images. 8 [OK] docker.io docker.io/bitnami/java Bitnami Java Docker Image 5 [OK] docker.io docker.io/rightctrl/java Oracle Java 3 [OK] docker.io docker.io/cfje/java-test-applications Java Test Applications CI Image 2 docker.io docker.io/buildo/java8-wkhtmltopdf Java 8 + wkhtmltopdf 1 [OK] docker.io docker.io/cfje/java-buildpack Java Buildpack CI Image 1 docker.io docker.io/cfje/java-resource Java Concourse Resource 1 docker.io docker.io/cfje/java-buildpack-dependency-builder Java Buildpack Dependencies Builder Image 0 docker.io docker.io/cfje/java-buildpack-memory-calculator Java Buildpack Memory Calculator CI Image 0 docker.io docker.io/jelastic/javaengine An image of the Java Engine server maintai... 0 docker.io docker.io/thingswise/java-docker Java + dcd 0 [OK]","title":"Docker\u5b89\u88c5\u90e8\u7f72"},{"location":"Docker&KUBERNETES/Docker/1.Docker\u57fa\u672c\u6982\u5ff5/","text":"\u57fa\u672c\u6982\u5ff5 Docker Image Docker Container \u57fa\u672c\u6982\u5ff5 Docker Image Docker Container Image\u7684\u5b9e\u4f8b \u751f\u547d\u5468\u671f Docker Daemon \u5408\u5efa\u548c\u8fd0\u884cContainer\u7684\u5b88\u62a4\u8fdb\u7a0b\u3002\u6838\u5fc3\u7684\u7ec4\u4ef6 \u7406\u89e3\u4e3aContainer\u7684Container \u7ed1\u5b9a\u672c\u5730\u7aef\u53e3\u5e76\u63d0\u4f9bRest API\u670d\u52a1\uff0c\u7528\u6765\u8fdc\u7a0b\u8bbf\u95ee\u4e0e\u63a7\u5236\u3002 Docker Registry/Hub","title":"1.Docker\u57fa\u672c\u6982\u5ff5"},{"location":"Docker&KUBERNETES/Docker/1.Docker\u57fa\u672c\u6982\u5ff5/#_1","text":"","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"Docker&KUBERNETES/Docker/1.Docker\u57fa\u672c\u6982\u5ff5/#docker-image","text":"","title":"Docker Image"},{"location":"Docker&KUBERNETES/Docker/1.Docker\u57fa\u672c\u6982\u5ff5/#docker-container","text":"Image\u7684\u5b9e\u4f8b \u751f\u547d\u5468\u671f Docker Daemon \u5408\u5efa\u548c\u8fd0\u884cContainer\u7684\u5b88\u62a4\u8fdb\u7a0b\u3002\u6838\u5fc3\u7684\u7ec4\u4ef6 \u7406\u89e3\u4e3aContainer\u7684Container \u7ed1\u5b9a\u672c\u5730\u7aef\u53e3\u5e76\u63d0\u4f9bRest API\u670d\u52a1\uff0c\u7528\u6765\u8fdc\u7a0b\u8bbf\u95ee\u4e0e\u63a7\u5236\u3002 Docker Registry/Hub","title":"Docker Container"},{"location":"Docker&KUBERNETES/Docker/Docker\u57fa\u672c\u6982\u5ff5.assets/03\u81ea\u5b9a\u4e49Image/","text":"","title":"03\u81ea\u5b9a\u4e49Image"},{"location":"English/1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed/","text":"\u9b4f\u6c0f\u82f1\u8bed\u5b66\u4e60 1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed 1.\u4e0d\u80cc\u5355\u8bcd\u8868 2. \u53cd\u8fc7\u6765\u5b66\u4e60\u8bed\u6cd5 3 . \u62b1\u6709\u201c\u8d5a\u5230\u4e86\u201d\u7684\u5fc3\u6001 \u4e8c\u3001\u5982\u4f55\u7ec3\u4e60\u9605\u8bfb \u4e09\u3001\u5982\u4f55\u7ec3\u4e60\u542c\u529b 1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed 1.\u4e0d\u80cc\u5355\u8bcd\u8868 \u53e5\u5b50\u4ee3\u66ff\u5355\u8bcd\uff0c\u7ed3\u5408\u8bed\u5883\u7406\u89e3\u5355\u8bcd\u542b\u4e49 2. \u53cd\u8fc7\u6765\u5b66\u4e60\u8bed\u6cd5 \u5229\u7528\u8bed\u6cd5\u4ee3\u66ff\u80cc\u8bf5\u8bed\u6cd5\uff0c\u524d\u4eba\u5df2\u7ecf\u603b\u7ed3\u51fa\u89c4\u5f8b\uff0c\u81ea\u5df1\u65e0\u9700\u6d6a\u8d39\u65f6\u95f4\uff0c\u5229\u7528\u5373\u53ef\u3002 3 . \u62b1\u6709\u201c\u8d5a\u5230\u4e86\u201d\u7684\u5fc3\u6001 \u6b66\u529f\u79d8\u7c4d\u4ee3\u66ff\u6b7b\u5543\u8bfe\u672c\uff0c\u6559\u6750\u662f\u7531\u6613\u5230\u96be\u5faa\u5e8f\u6e10\u8fdb\uff0c\u7b26\u5408\u5b66\u4e60\u8fdb\u7a0b\u3002 \u4e8c\u3001\u5982\u4f55\u7ec3\u4e60\u9605\u8bfb \u591a\u770b\u82f1\u6587\u4e66\u7c4d\uff0c\u62a5\u7eb8\u6742\u5fd7\u7b49\uff0c\u552f\u6709 \u5806\u91cf \u90fd\u6709\u611f\u89c9 \u638c\u63e1\u4e0d\u540c\u6587\u7ae0\u7684 \u7ed3\u6784 \u7279\u70b9\uff0c\u5168\u7403\u5feb\u901f\u7406\u89e3\u5185\u5bb9 \u5feb\u901f\u8bfb \u548c \u6162\u901f\u7cbe\u8bfb \u76f8\u7ed3\u5408 \u4e0d\u8981\u4e00\u9047\u5230 \u751f\u8bcd \u5c31\u67e5\u5b57\u5178\uff0c \u5708\u4e00\u4e0b \u7ee7\u7eed \u591a\u505a \u9650\u65f6 \u9605\u8bfb\u8bad\u7ec3 \u4e09\u3001\u5982\u4f55\u7ec3\u4e60\u542c\u529b \u6269\u5927 \u5355\u8bcd\u91cf \u501f\u52a9\u590d\u8bfb\u673a\uff0c\u4e00\u53e5\u53e5\u8ddf\u8bfb\uff0c\u53cd\u590d\u7ec3\u4e60 \u7cbe\u542c\u548c\u6cdb\u542c\u7ed3\u5408 \u7684\u6750\u6599\u662f\u5e0c\u671b\u81ea\u5df1\u80fd\u80cc\u4e0b\u6765\uff0c\u5e76\u80fd\u8131\u53e3\u800c\u51fa\uff1b \u6cdb\u542c \u662f\u4e13\u95e8\u6765\u7ed9\u81ea\u5df1 \u78e8\u8033\u6735 \uff0c\u4f46\u4e5f\u9700\u8981\u8ba4\u771f\u542c\u3002","title":"1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed"},{"location":"English/1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed/#1","text":"","title":"1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed"},{"location":"English/1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed/#1_1","text":"\u53e5\u5b50\u4ee3\u66ff\u5355\u8bcd\uff0c\u7ed3\u5408\u8bed\u5883\u7406\u89e3\u5355\u8bcd\u542b\u4e49","title":"1.\u4e0d\u80cc\u5355\u8bcd\u8868"},{"location":"English/1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed/#2","text":"\u5229\u7528\u8bed\u6cd5\u4ee3\u66ff\u80cc\u8bf5\u8bed\u6cd5\uff0c\u524d\u4eba\u5df2\u7ecf\u603b\u7ed3\u51fa\u89c4\u5f8b\uff0c\u81ea\u5df1\u65e0\u9700\u6d6a\u8d39\u65f6\u95f4\uff0c\u5229\u7528\u5373\u53ef\u3002","title":"2. \u53cd\u8fc7\u6765\u5b66\u4e60\u8bed\u6cd5"},{"location":"English/1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed/#3","text":"\u6b66\u529f\u79d8\u7c4d\u4ee3\u66ff\u6b7b\u5543\u8bfe\u672c\uff0c\u6559\u6750\u662f\u7531\u6613\u5230\u96be\u5faa\u5e8f\u6e10\u8fdb\uff0c\u7b26\u5408\u5b66\u4e60\u8fdb\u7a0b\u3002","title":"3 . \u62b1\u6709\u201c\u8d5a\u5230\u4e86\u201d\u7684\u5fc3\u6001"},{"location":"English/1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed/#_1","text":"\u591a\u770b\u82f1\u6587\u4e66\u7c4d\uff0c\u62a5\u7eb8\u6742\u5fd7\u7b49\uff0c\u552f\u6709 \u5806\u91cf \u90fd\u6709\u611f\u89c9 \u638c\u63e1\u4e0d\u540c\u6587\u7ae0\u7684 \u7ed3\u6784 \u7279\u70b9\uff0c\u5168\u7403\u5feb\u901f\u7406\u89e3\u5185\u5bb9 \u5feb\u901f\u8bfb \u548c \u6162\u901f\u7cbe\u8bfb \u76f8\u7ed3\u5408 \u4e0d\u8981\u4e00\u9047\u5230 \u751f\u8bcd \u5c31\u67e5\u5b57\u5178\uff0c \u5708\u4e00\u4e0b \u7ee7\u7eed \u591a\u505a \u9650\u65f6 \u9605\u8bfb\u8bad\u7ec3","title":"\u4e8c\u3001\u5982\u4f55\u7ec3\u4e60\u9605\u8bfb"},{"location":"English/1.\u5982\u4f55\u5b66\u4e60\u82f1\u8bed/#_2","text":"\u6269\u5927 \u5355\u8bcd\u91cf \u501f\u52a9\u590d\u8bfb\u673a\uff0c\u4e00\u53e5\u53e5\u8ddf\u8bfb\uff0c\u53cd\u590d\u7ec3\u4e60 \u7cbe\u542c\u548c\u6cdb\u542c\u7ed3\u5408 \u7684\u6750\u6599\u662f\u5e0c\u671b\u81ea\u5df1\u80fd\u80cc\u4e0b\u6765\uff0c\u5e76\u80fd\u8131\u53e3\u800c\u51fa\uff1b \u6cdb\u542c \u662f\u4e13\u95e8\u6765\u7ed9\u81ea\u5df1 \u78e8\u8033\u6735 \uff0c\u4f46\u4e5f\u9700\u8981\u8ba4\u771f\u542c\u3002","title":"\u4e09\u3001\u5982\u4f55\u7ec3\u4e60\u542c\u529b"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/","text":"\u65e5\u672c\u4f7f\u9986 \u5404\u804c\u80fd\u90e8\u95e8 : \u516c\u4f7f \u200b \u90ed\u71d5 \u200b \u7535\u8bdd\uff1a03\u20143403\u20143388 \u200b \u4f20\u771f\uff1a03\u20143403\u20143382 \u653f\u6cbb\u5904 \u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u6768\u5b87 \u7535\u8bdd\uff1a03-3403-3388\u8f6c8536 \u4f20\u771f\uff1a03-3403-3381 \u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u502a\u5065 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8503 \u4f20\u771f\uff1a03\u20143403\u20143381 \u53c2\u8d5e\u3000 \u5f20\u4e9a\u5f3a \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8510 \u4f20\u771f\uff1a03\u20143403\u20143381 \u53c2\u8d5e\u3000 \u8042\u4f73 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8531 \u4f20\u771f\uff1a03\u20143403\u20143381 \u653f\u7b56\u7814\u7a76\u5904 \u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u5f8b\u6842\u519b \u7535\u8bdd\uff1a03-3403-3388\u8f6c8535 \u4f20\u771f\uff1a03-3403-338 \u53c2\u8d5e\u3000 \u6881\u6797\u51b2 \u7535\u8bdd\uff1a03-3403-3388\u5185\u7dda8535 \u4f20\u771f\uff1a03-3403-3390 \u53c2\u8d5e \u5b59\u6653\u7433 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8608 \u4f20\u771f\uff1a03\u20143403\u20143382 \u65b0\u95fb\u548c\u516c\u5171\u5916\u4ea4\u5904 \u53c2\u8d5e\u3000 \u5f20\u6885 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8517 \u4f20\u771f\uff1a03\u20143403\u20143384 \u7ecf\u6d4e\u5546\u52a1\u5904 \u516c\u4f7f\u3000 \u5b8b\u8000\u660e \u7535\u8bdd\uff1a03\u20143440\u20142011 \u4f20\u771f\uff1a03\u20143446\u20148242 \u53c2\u8d5e\u3000 \u666f\u6625\u6d77 \u7535\u8bdd\uff1a03\u20143440\u20142011 \u4f20\u771f\uff1a03\u20143446\u20148242 \u6559\u80b2\u5904 \u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u80e1\u5fd7\u5e73 \u7535\u8bdd\uff1a03\u20143643\u20140305 \u4f20\u771f\uff1a03\u20143643\u20140296 \u79d1\u6280\u5904 \u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u590f\u9e23\u4e5d \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8624 \u4f20\u771f\uff1a03\u20143403\u20143385 \u6587\u5316\u5904 \u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u77f3\u6c38\u83c1 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8606 \u4f20\u771f\uff1a03\u20143403\u20143386 \u6b66\u5b98\u5904 \u9646\u519b\u6b66\u5b98\u3000 \u5f20\u79c0\u826f \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8618 \u4f20\u771f\uff1a03\u20143403\u20143387 \u9886\u4e8b\u4fa8\u52a1\u5904 \u53c2\u8d5e\u517c\u603b\u9886\u4e8b\u3000\u8a79\u5b54\u671d \u7535\u8bdd\uff1a03\u20143403\u20143064 \u4f20\u771f\uff1a03\u20143403\u20145447 \u53c2\u8d5e \u6731\u660e \u7535\u8bdd\uff1a03\u20143403\u20143064 \u4f20\u771f\uff1a03\u20143403\u20143697 \u53c2\u8d5e \u590f\u5b8f\u6d77 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8332 \u4f20\u771f\uff1a03\u20143403\u20143392 \u7b7e\u8bc1\u3001\u8bc1\u4ef6\u67e5\u8be2\uff1a03\u20145785-6868 \u9886\u4fa8\u54a8\u8be2\uff1a03\u20143403\u20143064 \u9886\u4e8b\u90e8\u4f20\u771f\uff1a03\u20143403\u20145447 \u529e\u516c\u5ba4 \u516c\u4f7f\u8854\u53c2\u8d5e \u8521\u7ea2 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8101 \u4f20\u771f\uff1a03\u20143403\u20143345","title":"\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_1","text":"","title":"\u65e5\u672c\u4f7f\u9986"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_2","text":"","title":"\u5404\u804c\u80fd\u90e8\u95e8:"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_3","text":"\u200b \u90ed\u71d5 \u200b \u7535\u8bdd\uff1a03\u20143403\u20143388 \u200b \u4f20\u771f\uff1a03\u20143403\u20143382","title":"\u516c\u4f7f"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_4","text":"\u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u6768\u5b87 \u7535\u8bdd\uff1a03-3403-3388\u8f6c8536 \u4f20\u771f\uff1a03-3403-3381 \u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u502a\u5065 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8503 \u4f20\u771f\uff1a03\u20143403\u20143381 \u53c2\u8d5e\u3000 \u5f20\u4e9a\u5f3a \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8510 \u4f20\u771f\uff1a03\u20143403\u20143381 \u53c2\u8d5e\u3000 \u8042\u4f73 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8531 \u4f20\u771f\uff1a03\u20143403\u20143381","title":"\u653f\u6cbb\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_5","text":"\u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u5f8b\u6842\u519b \u7535\u8bdd\uff1a03-3403-3388\u8f6c8535 \u4f20\u771f\uff1a03-3403-338 \u53c2\u8d5e\u3000 \u6881\u6797\u51b2 \u7535\u8bdd\uff1a03-3403-3388\u5185\u7dda8535 \u4f20\u771f\uff1a03-3403-3390 \u53c2\u8d5e \u5b59\u6653\u7433 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8608 \u4f20\u771f\uff1a03\u20143403\u20143382","title":"\u653f\u7b56\u7814\u7a76\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_6","text":"\u53c2\u8d5e\u3000 \u5f20\u6885 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8517 \u4f20\u771f\uff1a03\u20143403\u20143384","title":"\u65b0\u95fb\u548c\u516c\u5171\u5916\u4ea4\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_7","text":"\u516c\u4f7f\u3000 \u5b8b\u8000\u660e \u7535\u8bdd\uff1a03\u20143440\u20142011 \u4f20\u771f\uff1a03\u20143446\u20148242 \u53c2\u8d5e\u3000 \u666f\u6625\u6d77 \u7535\u8bdd\uff1a03\u20143440\u20142011 \u4f20\u771f\uff1a03\u20143446\u20148242","title":"\u7ecf\u6d4e\u5546\u52a1\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_8","text":"\u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u80e1\u5fd7\u5e73 \u7535\u8bdd\uff1a03\u20143643\u20140305 \u4f20\u771f\uff1a03\u20143643\u20140296","title":"\u6559\u80b2\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_9","text":"\u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u590f\u9e23\u4e5d \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8624 \u4f20\u771f\uff1a03\u20143403\u20143385","title":"\u79d1\u6280\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_10","text":"\u516c\u4f7f\u8854\u53c2\u8d5e\u3000 \u77f3\u6c38\u83c1 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8606 \u4f20\u771f\uff1a03\u20143403\u20143386","title":"\u6587\u5316\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_11","text":"\u9646\u519b\u6b66\u5b98\u3000 \u5f20\u79c0\u826f \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8618 \u4f20\u771f\uff1a03\u20143403\u20143387","title":"\u6b66\u5b98\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_12","text":"\u53c2\u8d5e\u517c\u603b\u9886\u4e8b\u3000\u8a79\u5b54\u671d \u7535\u8bdd\uff1a03\u20143403\u20143064 \u4f20\u771f\uff1a03\u20143403\u20145447 \u53c2\u8d5e \u6731\u660e \u7535\u8bdd\uff1a03\u20143403\u20143064 \u4f20\u771f\uff1a03\u20143403\u20143697 \u53c2\u8d5e \u590f\u5b8f\u6d77 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8332 \u4f20\u771f\uff1a03\u20143403\u20143392 \u7b7e\u8bc1\u3001\u8bc1\u4ef6\u67e5\u8be2\uff1a03\u20145785-6868 \u9886\u4fa8\u54a8\u8be2\uff1a03\u20143403\u20143064 \u9886\u4e8b\u90e8\u4f20\u771f\uff1a03\u20143403\u20145447","title":"\u9886\u4e8b\u4fa8\u52a1\u5904"},{"location":"Life/\u65e5\u672c\u4f7f\u9986\u5404\u804c\u80fd\u90e8\u95e8/#_13","text":"\u516c\u4f7f\u8854\u53c2\u8d5e \u8521\u7ea2 \u7535\u8bdd\uff1a03\u20143403\u20143388\u8f6c8101 \u4f20\u771f\uff1a03\u20143403\u20143345","title":"\u529e\u516c\u5ba4"},{"location":"Life/\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807/","text":"[toc] \u76ee\u6807 \u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807 \u4e09\u4e2a\u6708\u5b8c\u6210OCP/OCM\u8003\u8bd5\uff08\u5207\u52ff\u597d\u5927\u559c\u529f\u548c\u597d\u9ad8\u9a9b\u8fdc\uff0c\u6bd4\u5982\u4e00\u5468\u5b8c\u6210OCM\u3001OCP\u7b49\uff09\uff08\u6bd4\u5982\u4e09\u4e2a\u6708\u5b8c\u6210OCM\u5b66\u4e60\uff0c\u79ef\u7d2f\uff0c\u7b14\u8bb0\uff0c\u7ec3\u4e60\u7b49\uff0c\u4e00\u4e2a\u6708\u8fbe\u6210ACE\uff09 \u5c06\u76ee\u6807\u5206\u89e3\u6210\u77ed\u5c0f\u5177\u4f53\u7684\u8ff7\u4f60\u76ee\u6807 \u6bcf\u5929\u5b8c\u6210\u7684\u5b66\u4e60/\u8bad\u7ec3\u76ee\u6807\u662f\u4ec0\u4e48 \u96be\u5ea6\u9002\u4e2d\u504f\u96be \u5bfb\u6c42 \u5916\u5728 \u9a71\u52a8\u529b\u4e0e \u5185\u5728 \u9a71\u52a8\u529b \u6309\u90e8\u5c31\u73ed\u5b8c\u6210 \u5927\u76ee\u6807\u62c6\u89e3\u5c0f\u76ee\u6807\u4e4b\u540e\uff0c\u5728\u5185\u5728\u9a71\u52a8\u529b\u4e0e\u5916\u90e8\u9a71\u52a8\u529b\u90fd\u6709\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u4f7f\u81ea\u5df1\u6bcf\u5929\u6216\u8005\u6bcf\u5468\u7684\u5c0f\u76ee\u6807\uff0c\u6309\u90e8\u5c31\u73ed\u5730\u5b8c\u6210\u3002 \u65f6\u95f4 \u5fc3\u6001\uff1a \u73b0\u5b9e\u5730\u5bf9\u5f85\u65f6\u95f4\uff0c\u628a\u63e1\u65f6\u95f4\u5f00\u9500 \u5bf9\u4efb\u52a1\u548c\u5b66\u4e60\u65f6\u95f4\u6709 \u5207\u5b9e \u7684\u4f30\u8ba1\u548c\u628a\u63a7 \u65b9\u6cd5\uff1a \u5bf9\u65f6\u95f4\u6709\u628a\u63e1\uff0c\u5bf9\u65f6\u95f4\u7684\u5ea6\u91cf\uff0c\u6709\u81ea\u5df1\u7684\u7ecf\u9a8c \u5bf9\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u5b66\u4e60\u7684\u8fdb\u5ea6\u6709\u975e\u5e38\u597d\u7684\u7684\u628a\u63e1 \u7ec6\u5316\u6807\u51c6\uff1a \u660e\u786e\u4e00\u5206\u949f\u3001\u4e00\u5c0f\u65f6\u80fd\u591f\u505a\u4ec0\u4e48\u3002\u6548\u7387\u628a\u63a7 \u53ea\u7ba1\u5f00\u59cb\u505a\uff0cJust Do It\uff08\u5bf9\u76ee\u6807\u6ca1\u660e\u767d\u7684\uff0c\u8bf4\u505a\u5c31\u505a\uff09 \u5fc3\u6001\uff1a \u4e0d\u8981\u60f3\u4e00\u4e0b\u5b50\u5b8c\u6210\u6240\u6709\u4e8b \u628a\u81ea\u5df1\u7684\u9a71\u52a8\u529b\u63d0\u4e0a\u5230\u4e00\u4e2a\u7ea7\u522b\u4e0a\u6765\u3002\u8ba9\u81ea\u5df1\u771f\u6b63\u7684\u9759\u4e0b\u5fc3\u6765\uff0c\u5fc3\u65e0\u6742\u5ff5\u7684\uff0c\u4ec0\u4e48\u4e8b\u90fd\u4e0d\u505a\u7684\uff0c\u4e13\u95e8\u5b8c\u6210\u4e00\u4ef6\u4e8b\u3002\u4e0d\u5b8c\u6210\u4e0d\u505a\u5176\u5b83\u4e8b\u60c5\uff0c\u76f4\u63a5\u5b8c\u6210\u3002 \u79ef\u7d2f\u4e0b\u6765\u4f1a\u53d1\u73b0\u81ea\u5df1\u80fd\u505a\u7684\u4e8b\u60c5\u771f\u7684\u975e\u5e38\u975e\u5e38\u591a\u3002 \u65b9\u6cd5\uff1a \u505a\u5b8c\u540e\u4e0d\u65adreview\uff0c\u4e0d\u65ad\u8fed\u4ee3\uff0c\u7136\u540e\u4fbf\u81ea\u5df1\u4f18\u79c0\u8d77\u6765\u3002\u540e\u9762\u5c31\u6709\u81ea\u5df1\u53ef\u89c2\u7684\u63d0\u9ad8\u3002 \u540c\u65f6\u7f16\u8f91\u76849\uff1a2\u6587\u7ae0\u3002 \u5199\u7b14\u8bb0\u53ea\u4f1a\u5bf9\u81ea\u5df1\u6709\u66f4\u5927\u7684\u4f5c\u7528\u3002 \u6280\u5de7\uff1a \u5c06\u62d6\u5ef6\u770b\u6210\u4e00\u4e2a\u4fe1\u53f7 \u62d6\u5ef6\u65f6\uff0c\u628a\u5b83\u5f53\u6210\u4e00\u4e2a\u4fe1\u53f7\uff08\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u53ea\u7ba1\u505a\u5c31\u53ef\u4ee5\u4e86\u3002\uff09 4:30\u8d77\u5e8a","title":"\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807"},{"location":"Life/\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807/#_1","text":"","title":"\u76ee\u6807"},{"location":"Life/\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807/#_2","text":"\u4e09\u4e2a\u6708\u5b8c\u6210OCP/OCM\u8003\u8bd5\uff08\u5207\u52ff\u597d\u5927\u559c\u529f\u548c\u597d\u9ad8\u9a9b\u8fdc\uff0c\u6bd4\u5982\u4e00\u5468\u5b8c\u6210OCM\u3001OCP\u7b49\uff09\uff08\u6bd4\u5982\u4e09\u4e2a\u6708\u5b8c\u6210OCM\u5b66\u4e60\uff0c\u79ef\u7d2f\uff0c\u7b14\u8bb0\uff0c\u7ec3\u4e60\u7b49\uff0c\u4e00\u4e2a\u6708\u8fbe\u6210ACE\uff09","title":"\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807"},{"location":"Life/\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807/#_3","text":"\u6bcf\u5929\u5b8c\u6210\u7684\u5b66\u4e60/\u8bad\u7ec3\u76ee\u6807\u662f\u4ec0\u4e48 \u96be\u5ea6\u9002\u4e2d\u504f\u96be \u5bfb\u6c42 \u5916\u5728 \u9a71\u52a8\u529b\u4e0e \u5185\u5728 \u9a71\u52a8\u529b \u6309\u90e8\u5c31\u73ed\u5b8c\u6210 \u5927\u76ee\u6807\u62c6\u89e3\u5c0f\u76ee\u6807\u4e4b\u540e\uff0c\u5728\u5185\u5728\u9a71\u52a8\u529b\u4e0e\u5916\u90e8\u9a71\u52a8\u529b\u90fd\u6709\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u4f7f\u81ea\u5df1\u6bcf\u5929\u6216\u8005\u6bcf\u5468\u7684\u5c0f\u76ee\u6807\uff0c\u6309\u90e8\u5c31\u73ed\u5730\u5b8c\u6210\u3002","title":"\u5c06\u76ee\u6807\u5206\u89e3\u6210\u77ed\u5c0f\u5177\u4f53\u7684\u8ff7\u4f60\u76ee\u6807"},{"location":"Life/\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807/#_4","text":"\u5fc3\u6001\uff1a \u73b0\u5b9e\u5730\u5bf9\u5f85\u65f6\u95f4\uff0c\u628a\u63e1\u65f6\u95f4\u5f00\u9500 \u5bf9\u4efb\u52a1\u548c\u5b66\u4e60\u65f6\u95f4\u6709 \u5207\u5b9e \u7684\u4f30\u8ba1\u548c\u628a\u63a7 \u65b9\u6cd5\uff1a \u5bf9\u65f6\u95f4\u6709\u628a\u63e1\uff0c\u5bf9\u65f6\u95f4\u7684\u5ea6\u91cf\uff0c\u6709\u81ea\u5df1\u7684\u7ecf\u9a8c \u5bf9\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u5b66\u4e60\u7684\u8fdb\u5ea6\u6709\u975e\u5e38\u597d\u7684\u7684\u628a\u63e1 \u7ec6\u5316\u6807\u51c6\uff1a \u660e\u786e\u4e00\u5206\u949f\u3001\u4e00\u5c0f\u65f6\u80fd\u591f\u505a\u4ec0\u4e48\u3002\u6548\u7387\u628a\u63a7","title":"\u65f6\u95f4"},{"location":"Life/\u786e\u5b9a\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u76ee\u6807/#just-do-it","text":"\u5fc3\u6001\uff1a \u4e0d\u8981\u60f3\u4e00\u4e0b\u5b50\u5b8c\u6210\u6240\u6709\u4e8b \u628a\u81ea\u5df1\u7684\u9a71\u52a8\u529b\u63d0\u4e0a\u5230\u4e00\u4e2a\u7ea7\u522b\u4e0a\u6765\u3002\u8ba9\u81ea\u5df1\u771f\u6b63\u7684\u9759\u4e0b\u5fc3\u6765\uff0c\u5fc3\u65e0\u6742\u5ff5\u7684\uff0c\u4ec0\u4e48\u4e8b\u90fd\u4e0d\u505a\u7684\uff0c\u4e13\u95e8\u5b8c\u6210\u4e00\u4ef6\u4e8b\u3002\u4e0d\u5b8c\u6210\u4e0d\u505a\u5176\u5b83\u4e8b\u60c5\uff0c\u76f4\u63a5\u5b8c\u6210\u3002 \u79ef\u7d2f\u4e0b\u6765\u4f1a\u53d1\u73b0\u81ea\u5df1\u80fd\u505a\u7684\u4e8b\u60c5\u771f\u7684\u975e\u5e38\u975e\u5e38\u591a\u3002 \u65b9\u6cd5\uff1a \u505a\u5b8c\u540e\u4e0d\u65adreview\uff0c\u4e0d\u65ad\u8fed\u4ee3\uff0c\u7136\u540e\u4fbf\u81ea\u5df1\u4f18\u79c0\u8d77\u6765\u3002\u540e\u9762\u5c31\u6709\u81ea\u5df1\u53ef\u89c2\u7684\u63d0\u9ad8\u3002 \u540c\u65f6\u7f16\u8f91\u76849\uff1a2\u6587\u7ae0\u3002 \u5199\u7b14\u8bb0\u53ea\u4f1a\u5bf9\u81ea\u5df1\u6709\u66f4\u5927\u7684\u4f5c\u7528\u3002 \u6280\u5de7\uff1a \u5c06\u62d6\u5ef6\u770b\u6210\u4e00\u4e2a\u4fe1\u53f7 \u62d6\u5ef6\u65f6\uff0c\u628a\u5b83\u5f53\u6210\u4e00\u4e2a\u4fe1\u53f7\uff08\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u53ea\u7ba1\u505a\u5c31\u53ef\u4ee5\u4e86\u3002\uff09 4:30\u8d77\u5e8a","title":"\u53ea\u7ba1\u5f00\u59cb\u505a\uff0cJust Do It\uff08\u5bf9\u76ee\u6807\u6ca1\u660e\u767d\u7684\uff0c\u8bf4\u505a\u5c31\u505a\uff09"},{"location":"Life/\u8bb0\u5fc6/","text":"\u6211\u63d0\u524d\u8b66\u544a\u4f60\u6211\u4f1a\u8ba9\u4f60\u8bb0\u4f4f\u4e00\u4e9b\u4e1c\u897f\u4e86\u3002\u8fd9\u662f\u8ba9\u4f60\u80fd\u638c\u63e1\u67d0\u4e9b\u6280\u80fd\u7684\u6700\u5feb\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u8bb0\u5fc6\u53ef\u80fd\u662f\u5f88\u75db\u82e6\u7684 \u4e8b\u60c5\u8bb0\u5fc6\u5bf9\u4e8e\u5b66\u4e60\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u5f88\u91cd\u8981\u7684\u6280\u80fd\uff0c\u6240\u4ee5\uff0c\u4f60\u5e94\u8be5\u6050\u60e7\u5b83\u3002 \u8fd9\u91cc\u662f\u4f60\u5982\u4f55\u8bb0\u4f4f\u4e1c\u897f\u7684\u65b9\u6cd5\uff1a \u544a\u8bc9\u81ea\u5df1\uff0c\u4f60\u80fd\u8bb0\u4f4f\u5b83\u3002\u4e0d\u8981\u8bd5\u56fe\u5bfb\u627e\u7a8d\u95e8\u6216\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u53ea\u8981\u5750\u5728\u90a3\u5f00\u59cb\u8bb0\u5fc6\u5c31\u597d\u3002 \u5728\u7d22\u5f15\u5361\u7247\u4e0a\u5199\u4e0b\u4f60\u8981\u8bb0\u4f4f\u7684\u4e1c\u897f.\u628a\u4f60\u8981\u5b66\u7684\u5185\u5bb9\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4e00\u534a\u5199\u5728\u5361\u7247\u7684\u6b63\u9762\uff0c\u4e00\u534a\u5199\u5728\u80cc\u9762\u3002 \u6bcf\u5929\u62ff\u51fa15-30\u5206\u949f\u65f6\u95f4\uff0c\u7528\u505a\u597d\u7684\u5361\u7247\u8bad\u7ec3\u81ea\u5df1\uff0c\u5c1d\u8bd5\u56de\u5fc6\u6bcf\u4e00\u5f20\u5361\u7247\u7684\u5185\u5bb9\u3002\u628a\u4efb\u4f55\u4f60\u6ca1\u6709\u6b63\u786e\u8bf4\u51fa\u7b54\u6848\u7684\u5361 \u7247\u653e\u5230\u4e00\u8fb9\uff0c\u9488\u5bf9\u8fd9\u4e9b\u5361\u7247\u8fdb\u884c\u8bad\u7ec3\uff0c\u76f4\u5230\u4f60\u89c9\u5f97\u538c\u70e6\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u56de\u5fc6\u6240\u6709\u7684\u5361\u7247\uff0c\u770b\u4f60\u662f\u5426\u6709\u6240\u8fdb\u6b65\u3002 \u7761\u89c9\u4e4b\u524d\uff0c\u5bf9\u4f60\u5f04\u9519\u4e86\u7684\u5361\u5728\u7ec3\u4e605\u5206\u949f\u3002 \u8fd8\u6709\u5176\u4ed6\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u628a\u4f60\u8981\u5b66\u4e60\u7684\u5185\u5bb9\u5199\u5728\u4e00\u5f20\u7eb8\u4e0a\uff0c\u7136\u540e\u5c06\u5b83\u8d34\u5728\u4f60\u6d74\u5ba4\u7684\u5899\u4e0a\uff0c\u5f53\u4f60\u6d17\u6f31\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u53ef\u4ee5\u4e0d\u770b\u7740\u5899\u4e0a\u7684\u7eb8\u7ec3\u4e60\u8bb0\u5fc6\u8fd9\u4e9b\u5185\u5bb9\uff0c\u5f53\u4f60\u9047\u5230\u95ee\u9898\u7684\u65f6\u5019\u53ef\u4ee5\u770b\u4e00\u773c\uff0c\u5237\u65b0\u4f60\u7684\u8bb0\u5fc6\u3002 \u5982\u679c\u4f60\u575a\u6301\u6bcf\u5929\u90fd\u8fd9\u6837\u505a\uff0c\u4f60\u5e94\u8be5\u80fd\u8bb0\u4f4f\u6700\u591a\u7684\u4e8b\u3002 \u6211\u60f3\u544a\u8bc9\u4f60\uff0c\u7ec3\u4e60\u8bb0\u5fc6\u5927\u7ea6\u8981\u4e00\u4e2a\u661f\u671f\u5230\u4e00\u4e2a\u6708\u3002\u5982\u679c\u4f60\u8fd9\u6837\u505a\u4e86\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u4e00\u5207\u90fd\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u548c\u76f4\u89c2\uff0c\u8fd9\u5c31\u662f\u8bb0\u5fc6\u7684\u76ee\u7684\u3002 \u8fd9\u5e76\u4e0d\u662f\u6559\u4f60\u4ec0\u4e48\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u800c\u662f\u4e00\u4e9b\u6839\u6df1\u8482\u56fa\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4f60\u4e0d\u9700\u8981\u601d\u8003\u5b83\u4eec\u5c31\u80fd\u8131\u53e3\u800c\u51fa\u7684\u77e5\u8bc6\u3002\u5982\u679c\u4f60\u8bb0\u4f4f\u4e86\u8fd9\u4e9b\u57fa\u7840\u77e5\u8bc6\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u518d\u662f\u5f71\u54cd\u4f60\u5b66\u4e60\u66f4\u9ad8\u7ea7\u5185\u5bb9\u7684\u62e6\u8def\u864e\u4e86\u3002 \u4e8c\u8fdb\u5236\u4e0e\u5341\u8fdb\u5236","title":"\u8bb0\u5fc6"},{"location":"Life/GeneralEducation/Wine/\u9152/","text":"\u9152 \u4e59\u9187\u7684\u4ee3\u8c22\u6574\u6d41\u7a0b \u200b \u809d\u4e2d\u7684 \u4e59\u9187 \u8131\u6c22\u9176\u8d1f\u8d23\u5c06\u9152\uff08\u4e59\u9187\uff09\u6c27\u5316\u6210\u4e59\u919b\uff0c \u4e59\u919b \u8131\u6c22\u9176 \u5c06\u751f\u6210\u7684\u4e59\u919b\u50ac\u5316\u6210\u65e0\u5bb3\u7684\u4e59\u9178\uff08\u918b\u6210\u5206\uff09\u3002\u4ece\u8fd9\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u4e59\u9187\u8131\u6c27\u9176\u50ac\u5316\u53cd\u5e94\u4e0e\u4e59\u919b\u8131\u6c22\u9176\u7684\u53cd\u5e94\u5982\u679c\u5e73\u8861\u7684\u8bdd\uff0c\u559d\u5230\u809a\u5b50\u7684\u662f\u767d\u918b\u3002 \u9152\u7cbe\u53cd\u5e94 \u4e5f\u79f0\u9152\u7cbe\u8138\u7ea2\u53cd\u5e94\uff0c\u4e9a\u6d32\u4eba\u8138\u7ea2\u7efc\u5408\u75c7\uff0c\u4fd7\u79f0\u201c\u4e0a\u8138\u201d\u3002 \u6307\u90e8\u5206\u4eba\u5728\u996e\u7528\u201c\u9152\u7cbe\u996e\u6599\u201d\u540e\uff0c\u9152\u7cbe\uff08\u4e59\u9187\uff09\u5728\u809d\u4ee3\u8c22\u6210\u4e3a\u4e59\u919b\uff0c\u5728\u5b83\u523a\u6fc0\u4e0b\u7684\u76ae\u80a4\u53d1\u7ea2\uff0c\u6591\u70b9\u6216\u8005\u8d77\u7599\u7629\u7684\u4e00\u7cfb\u5217\u53cd\u5e94\uff0c\u591a\u89c1\u4e8e\u201c\u4e9a\u6d32\u4eba\u201d \u9152\u7cbe\u4e2d\u6bd2 \u8f7b\u5ea6\u79f0\u201c\u9152\u9189\u201d\uff0c\u662f\u4eba \u8840\u6db2\u9152\u7cbe \u6d53\u5ea6\u8fbe\u5230\u4e00\u5b9a\u6d53\u5ea6\u540e\u53d1\u751f\u7684\u4e00\u79cd\u751f\u7406\u73b0\u8c61\u3002\u8f83\u4e3a\u5e38\u89c1\u7684\u75c7\u72b6\u5305\u62ec\u8bed\u8a00\u542b\u6df7\u3001\u591a\u5e78\u798f\u611f\u3001\u5e73\u8861\u5931\u63a7\u3001\u808c\u8089\u5931\u8c03\u3001\u76ae\u80a4\u8f6c\u7ea2\u3001\u773c\u90e8\u5145\u8840\u3001\u5455\u5410\u3001\u4e3e\u6b62\u4e0d\u5f53\uff0c\u4e25\u91cd\u65f6\u4e43\u81f3\u660f\u8ff7\u751a\u81f3\u6b7b\u4ea1\u3002 \u6cbb\u7597\u548c\u9884\u9632 \u51cf\u5c11\u4e59\u919b\u7684\u751f\u6210\u3002 \u52a0\u901f\u4e59\u919b\u7684\u5904\u7406\u3002 \u539f\u7406\u5206\u6790\uff1a \u4e59\u919b\u662f\u81f4\u764c\u7269\u8d28\u3002\u4e0e\u80bf\u7624\u6709\u4e00\u5b9a\u5173\u7cfb\u3002 \u98df\u9053\u764c\uff0c\u54bd\u5589\u764c\u548c\u809d\u764c \u4e0eALDH2*2\uff08\u53d8\u5f02\u57fa\u56e0\uff09\u6709\u5173\u3002 \u4e59\u919b\u5927\u91cf\u5b58\u5728\u5c31\u4f1a\u51fa\u73b0\u9152\u7cbe\u53cd\u5e94\u3002 \u4e59\u919b\u662f\u5bbf\u9189\u7684\u4e3b\u8981\u539f\u56e0\u4e4b\u4e00\u3002 80%\u7684\u4e9a\u6d32\u4eba\uff08\u6cf0\u56fd\u5370\u5ea6\u8f83\u4f4e\uff09\u4f53\u5185\u542b\u6709\u6709\u4e00\u4e2a\u4e59\u9187\u8131\u6c27\u9176\uff08ADH1B\uff09\u3002\u4e2d\u56fd\u5927\u90e8\u5206\u4eba\u548c\u671d\u9c9c\u4eba\u90fd\u6709\u7684\uff08ADH1C\uff09\uff0c\u8fd9\u4e24\u79cd\u9176\u4f1a\u8fc5\u901f\u50ac\u5316\u9152\u7cbe\uff08\u4e59\u9187\uff09\uff0c\u4f7f\u5176\u751f\u6210\u4e59\u919b\u3002 \u8138\u7ea2\u662f\u4ec0\u4e48\u9020\u6210\u7684\u5462\uff1f \u4e59\u919b\u91cf\u79ef\u7d2f\u8fc7\u591a\u5bfc\u81f4\uff0c\u4e3a\u4ec0\u4e48\u79ef\u7d2f\u8fc7\u591a\u5462\uff1f \u4e59\u919b\u8f6c\u5316\u6210\u4e59\u9178\u7684\u80fd\u529b\u8fc7\u6162\u5bfc\u81f4\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6162\u5462\uff1f \u56e0\u4e3a\u7ea6\u4e00\u534a\u7684\u4e9a\u6d32\u4eba\u6709\u7ebf\u7c92\u4f53\u53d8\u5f02\u57fa\u56e0ALDH2*2,\u5b83\u4f1a\u6291\u5236\u4e59\u919b\u8131\u6c22\u9176\u7684\u6d3b\u6027\uff0c\u4ece\u800c\u5bfc\u81f4\u4e59\u919b\u8f6c\u5316\u6210\u4e59\u9178\u7684\u80fd\u529b\u4e0b\u964d\uff0c\u4e59\u919b\u91cf\u5c31\u79ef\u7d2f\u8d8a\u6765\u8d8a\u591a\u3002 \u6240\u4ee5\u8138\u7ea2\u7684\u539f\u56e0\u662f\uff1ars671\u7b49\u4f4d\u57fa\u56e0\u4e0a\u7684\u5355\u78b1\u57fa\u7a81\u53d8\u7684\u7b49\u4f4d\u57fa\u56e0\u8bb0\u4e3aALDH2*2\u57fa\u56e0\u3002 \u8138\u7ea2\u7684\u79cd\u65cf\u5206\u5e03\uff1a \u5e38\u89c1\uff1a\u4e1c\u4e9a\uff0c\u4e2d\u56fd\u4e1c\u5357\u90e8\u5730\u533a\u3002 \u539f\u56e0\u662f\u57fa\u56e0\u81f3\u5c11\u542b\u6709\u4e00\u4e2aALDH2*2\u57fa\u56e0\u3002\u4e3a\u4ec0\u4e48\u4e2d\u56fd\u4e1c\u5357\u90e8\u5e38\u89c1\u5462\uff1f \u53ef\u80fd1.\u4e1c\u5357\u90e8\u7684\u6c49\u65cf\u4ebaALDH2*2\u57fa\u56e0\u9009\u62e9\u6027\u79ef\u6781\u9057\u4f20\u3002 \u53ef\u80fd2.\u57fa\u56e0\u79ef\u6781\u4f20\u64ad\u53ef\u80fd\u4e5f\u5357\u65b9\u6c34\u7a3b\u79cd\u690d\u4f20\u64ad\u6709\u5173\u3002 \u53ef\u80fd3.\u73af\u5883\u9009\u62e9\u3002\u9ad8\u6d53\u5ea6\u7684\u4e59\u919b\u4f1a\u4fdd\u62a4\u8eab\u4f53\u514d\u53d7\u75e2\u75be\uff0c\u963f\u7c73\u5df4\u866b\u7b49\u5bc4\u751f\u866b\u7684\u611f\u67d3\u3002 \u6b27\u6d32\uff0c\u975e\u6d32\u4eba\u7f55\u89c1\uff0c\u58a8\u897f\u54e5\u88d4\u7f8e\u56fd\u4eba\u7a00\u5c11\u3002 \u57fa\u56e0\u91cc\u6ca1\u6709\uff0c\u6216\u8005\u542b\u6709\u5c11\u91cfALDH2*2\u57fa\u56e0\u3002","title":"\u9152"},{"location":"Life/GeneralEducation/Wine/\u9152/#_1","text":"","title":"\u9152"},{"location":"Life/GeneralEducation/Wine/\u9152/#_2","text":"\u200b \u809d\u4e2d\u7684 \u4e59\u9187 \u8131\u6c22\u9176\u8d1f\u8d23\u5c06\u9152\uff08\u4e59\u9187\uff09\u6c27\u5316\u6210\u4e59\u919b\uff0c \u4e59\u919b \u8131\u6c22\u9176 \u5c06\u751f\u6210\u7684\u4e59\u919b\u50ac\u5316\u6210\u65e0\u5bb3\u7684\u4e59\u9178\uff08\u918b\u6210\u5206\uff09\u3002\u4ece\u8fd9\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u4e59\u9187\u8131\u6c27\u9176\u50ac\u5316\u53cd\u5e94\u4e0e\u4e59\u919b\u8131\u6c22\u9176\u7684\u53cd\u5e94\u5982\u679c\u5e73\u8861\u7684\u8bdd\uff0c\u559d\u5230\u809a\u5b50\u7684\u662f\u767d\u918b\u3002","title":"\u4e59\u9187\u7684\u4ee3\u8c22\u6574\u6d41\u7a0b"},{"location":"Life/GeneralEducation/Wine/\u9152/#_3","text":"\u4e5f\u79f0\u9152\u7cbe\u8138\u7ea2\u53cd\u5e94\uff0c\u4e9a\u6d32\u4eba\u8138\u7ea2\u7efc\u5408\u75c7\uff0c\u4fd7\u79f0\u201c\u4e0a\u8138\u201d\u3002 \u6307\u90e8\u5206\u4eba\u5728\u996e\u7528\u201c\u9152\u7cbe\u996e\u6599\u201d\u540e\uff0c\u9152\u7cbe\uff08\u4e59\u9187\uff09\u5728\u809d\u4ee3\u8c22\u6210\u4e3a\u4e59\u919b\uff0c\u5728\u5b83\u523a\u6fc0\u4e0b\u7684\u76ae\u80a4\u53d1\u7ea2\uff0c\u6591\u70b9\u6216\u8005\u8d77\u7599\u7629\u7684\u4e00\u7cfb\u5217\u53cd\u5e94\uff0c\u591a\u89c1\u4e8e\u201c\u4e9a\u6d32\u4eba\u201d","title":"\u9152\u7cbe\u53cd\u5e94"},{"location":"Life/GeneralEducation/Wine/\u9152/#_4","text":"\u8f7b\u5ea6\u79f0\u201c\u9152\u9189\u201d\uff0c\u662f\u4eba \u8840\u6db2\u9152\u7cbe \u6d53\u5ea6\u8fbe\u5230\u4e00\u5b9a\u6d53\u5ea6\u540e\u53d1\u751f\u7684\u4e00\u79cd\u751f\u7406\u73b0\u8c61\u3002\u8f83\u4e3a\u5e38\u89c1\u7684\u75c7\u72b6\u5305\u62ec\u8bed\u8a00\u542b\u6df7\u3001\u591a\u5e78\u798f\u611f\u3001\u5e73\u8861\u5931\u63a7\u3001\u808c\u8089\u5931\u8c03\u3001\u76ae\u80a4\u8f6c\u7ea2\u3001\u773c\u90e8\u5145\u8840\u3001\u5455\u5410\u3001\u4e3e\u6b62\u4e0d\u5f53\uff0c\u4e25\u91cd\u65f6\u4e43\u81f3\u660f\u8ff7\u751a\u81f3\u6b7b\u4ea1\u3002","title":"\u9152\u7cbe\u4e2d\u6bd2"},{"location":"Life/GeneralEducation/Wine/\u9152/#_5","text":"\u51cf\u5c11\u4e59\u919b\u7684\u751f\u6210\u3002 \u52a0\u901f\u4e59\u919b\u7684\u5904\u7406\u3002","title":"\u6cbb\u7597\u548c\u9884\u9632"},{"location":"Life/GeneralEducation/Wine/\u9152/#_6","text":"\u4e59\u919b\u662f\u81f4\u764c\u7269\u8d28\u3002\u4e0e\u80bf\u7624\u6709\u4e00\u5b9a\u5173\u7cfb\u3002 \u98df\u9053\u764c\uff0c\u54bd\u5589\u764c\u548c\u809d\u764c \u4e0eALDH2*2\uff08\u53d8\u5f02\u57fa\u56e0\uff09\u6709\u5173\u3002 \u4e59\u919b\u5927\u91cf\u5b58\u5728\u5c31\u4f1a\u51fa\u73b0\u9152\u7cbe\u53cd\u5e94\u3002 \u4e59\u919b\u662f\u5bbf\u9189\u7684\u4e3b\u8981\u539f\u56e0\u4e4b\u4e00\u3002 80%\u7684\u4e9a\u6d32\u4eba\uff08\u6cf0\u56fd\u5370\u5ea6\u8f83\u4f4e\uff09\u4f53\u5185\u542b\u6709\u6709\u4e00\u4e2a\u4e59\u9187\u8131\u6c27\u9176\uff08ADH1B\uff09\u3002\u4e2d\u56fd\u5927\u90e8\u5206\u4eba\u548c\u671d\u9c9c\u4eba\u90fd\u6709\u7684\uff08ADH1C\uff09\uff0c\u8fd9\u4e24\u79cd\u9176\u4f1a\u8fc5\u901f\u50ac\u5316\u9152\u7cbe\uff08\u4e59\u9187\uff09\uff0c\u4f7f\u5176\u751f\u6210\u4e59\u919b\u3002 \u8138\u7ea2\u662f\u4ec0\u4e48\u9020\u6210\u7684\u5462\uff1f \u4e59\u919b\u91cf\u79ef\u7d2f\u8fc7\u591a\u5bfc\u81f4\uff0c\u4e3a\u4ec0\u4e48\u79ef\u7d2f\u8fc7\u591a\u5462\uff1f \u4e59\u919b\u8f6c\u5316\u6210\u4e59\u9178\u7684\u80fd\u529b\u8fc7\u6162\u5bfc\u81f4\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6162\u5462\uff1f \u56e0\u4e3a\u7ea6\u4e00\u534a\u7684\u4e9a\u6d32\u4eba\u6709\u7ebf\u7c92\u4f53\u53d8\u5f02\u57fa\u56e0ALDH2*2,\u5b83\u4f1a\u6291\u5236\u4e59\u919b\u8131\u6c22\u9176\u7684\u6d3b\u6027\uff0c\u4ece\u800c\u5bfc\u81f4\u4e59\u919b\u8f6c\u5316\u6210\u4e59\u9178\u7684\u80fd\u529b\u4e0b\u964d\uff0c\u4e59\u919b\u91cf\u5c31\u79ef\u7d2f\u8d8a\u6765\u8d8a\u591a\u3002 \u6240\u4ee5\u8138\u7ea2\u7684\u539f\u56e0\u662f\uff1ars671\u7b49\u4f4d\u57fa\u56e0\u4e0a\u7684\u5355\u78b1\u57fa\u7a81\u53d8\u7684\u7b49\u4f4d\u57fa\u56e0\u8bb0\u4e3aALDH2*2\u57fa\u56e0\u3002 \u8138\u7ea2\u7684\u79cd\u65cf\u5206\u5e03\uff1a \u5e38\u89c1\uff1a\u4e1c\u4e9a\uff0c\u4e2d\u56fd\u4e1c\u5357\u90e8\u5730\u533a\u3002 \u539f\u56e0\u662f\u57fa\u56e0\u81f3\u5c11\u542b\u6709\u4e00\u4e2aALDH2*2\u57fa\u56e0\u3002\u4e3a\u4ec0\u4e48\u4e2d\u56fd\u4e1c\u5357\u90e8\u5e38\u89c1\u5462\uff1f \u53ef\u80fd1.\u4e1c\u5357\u90e8\u7684\u6c49\u65cf\u4ebaALDH2*2\u57fa\u56e0\u9009\u62e9\u6027\u79ef\u6781\u9057\u4f20\u3002 \u53ef\u80fd2.\u57fa\u56e0\u79ef\u6781\u4f20\u64ad\u53ef\u80fd\u4e5f\u5357\u65b9\u6c34\u7a3b\u79cd\u690d\u4f20\u64ad\u6709\u5173\u3002 \u53ef\u80fd3.\u73af\u5883\u9009\u62e9\u3002\u9ad8\u6d53\u5ea6\u7684\u4e59\u919b\u4f1a\u4fdd\u62a4\u8eab\u4f53\u514d\u53d7\u75e2\u75be\uff0c\u963f\u7c73\u5df4\u866b\u7b49\u5bc4\u751f\u866b\u7684\u611f\u67d3\u3002 \u6b27\u6d32\uff0c\u975e\u6d32\u4eba\u7f55\u89c1\uff0c\u58a8\u897f\u54e5\u88d4\u7f8e\u56fd\u4eba\u7a00\u5c11\u3002 \u57fa\u56e0\u91cc\u6ca1\u6709\uff0c\u6216\u8005\u542b\u6709\u5c11\u91cfALDH2*2\u57fa\u56e0\u3002","title":"\u539f\u7406\u5206\u6790\uff1a"},{"location":"Life/GeneralEducation/Wine/\u9152\u7684\u8bef\u533a/","text":"\u9152\u91cf\u662f\u7ec3\u51fa\u6765\u7684\u5417? \u8bef\u533a\u4e00\uff1a\u9152\u91cf\u771f\u7684\u53ef\u4ee5\u7ec3\u51fa\u6765\u5417\uff1f \u7ed3\u8bba\uff1a\u9152\u91cf\u662f\u9057\u4f20\u7684 \u9152\u91cf\u5b9a\u4e49\uff1a\u9152\u91cf\u662f\u9152\u7cbe\u4ee3\u8c22\u7684\u80fd\u529b\u3002 \u8fd9\u80fd\u529b\u5b83\u662f\u7531\u4f53\u5185\u7684\u809d\u810f\u4e2d\u7684\u201c \u4e59\u919b\u8131\u6c22\u9176 \u201d\u7684\u6570\u91cf\u51b3\u5b9a\u3002 \u90a3\u6570\u91cf\u54ea\u513f\u6765\u7684\u5462\uff1f\u9057\u4f20\uff01\uff01","title":"\u9152\u7684\u8bef\u533a"},{"location":"Life/GeneralEducation/Wine/\u9152\u7684\u8bef\u533a/#_1","text":"\u7ed3\u8bba\uff1a\u9152\u91cf\u662f\u9057\u4f20\u7684 \u9152\u91cf\u5b9a\u4e49\uff1a\u9152\u91cf\u662f\u9152\u7cbe\u4ee3\u8c22\u7684\u80fd\u529b\u3002 \u8fd9\u80fd\u529b\u5b83\u662f\u7531\u4f53\u5185\u7684\u809d\u810f\u4e2d\u7684\u201c \u4e59\u919b\u8131\u6c22\u9176 \u201d\u7684\u6570\u91cf\u51b3\u5b9a\u3002 \u90a3\u6570\u91cf\u54ea\u513f\u6765\u7684\u5462\uff1f\u9057\u4f20\uff01\uff01","title":"\u8bef\u533a\u4e00\uff1a\u9152\u91cf\u771f\u7684\u53ef\u4ee5\u7ec3\u51fa\u6765\u5417\uff1f"},{"location":"Life/GeneralEducation/Wine/\u9152\u7cbe\u4e2d\u6bd2/","text":"\u9152\u7cbe\u4e2d\u6bd2 \u8f7b\u5ea6\u79f0\u201c\u9152\u9189\u201d\uff0c\u662f\u4eba \u8840\u6db2\u9152\u7cbe \u6d53\u5ea6\u8fbe\u5230\u4e00\u5b9a\u6d53\u5ea6\u540e\u53d1\u751f\u7684\u4e00\u79cd\u751f\u7406\u73b0\u8c61\u3002\u8f83\u4e3a\u5e38\u89c1\u7684\u75c7\u72b6\u5305\u62ec\u8bed\u8a00\u542b\u6df7\u3001\u591a\u5e78\u798f\u611f\u3001\u5e73\u8861\u5931\u63a7\u3001\u808c\u8089\u5931\u8c03\u3001\u76ae\u80a4\u8f6c\u7ea2\u3001\u773c\u90e8\u5145\u8840\u3001\u5455\u5410\u3001\u4e3e\u6b62\u4e0d\u5f53\uff0c\u4e25\u91cd\u65f6\u4e43\u81f3\u660f\u8ff7\u751a\u81f3\u6b7b\u4ea1\u3002","title":"\u9152\u7cbe\u4e2d\u6bd2"},{"location":"Life/GeneralEducation/Wine/\u9152\u7cbe\u4e2d\u6bd2/#_1","text":"\u8f7b\u5ea6\u79f0\u201c\u9152\u9189\u201d\uff0c\u662f\u4eba \u8840\u6db2\u9152\u7cbe \u6d53\u5ea6\u8fbe\u5230\u4e00\u5b9a\u6d53\u5ea6\u540e\u53d1\u751f\u7684\u4e00\u79cd\u751f\u7406\u73b0\u8c61\u3002\u8f83\u4e3a\u5e38\u89c1\u7684\u75c7\u72b6\u5305\u62ec\u8bed\u8a00\u542b\u6df7\u3001\u591a\u5e78\u798f\u611f\u3001\u5e73\u8861\u5931\u63a7\u3001\u808c\u8089\u5931\u8c03\u3001\u76ae\u80a4\u8f6c\u7ea2\u3001\u773c\u90e8\u5145\u8840\u3001\u5455\u5410\u3001\u4e3e\u6b62\u4e0d\u5f53\uff0c\u4e25\u91cd\u65f6\u4e43\u81f3\u660f\u8ff7\u751a\u81f3\u6b7b\u4ea1\u3002","title":"\u9152\u7cbe\u4e2d\u6bd2"},{"location":"Life/GeneralEducation/Wine/define/\u4e59\u919b\u8131\u6c22\u9176/","text":"\u4e59\u919b\u8131\u6c22\u9176 ALDH \u5c5e\u4e8e\u919b\u8131\u6c22\u9176\u7684\u4e00\u79cd\u3002\u8d1f\u8d23\u50ac\u5316\u4e59\u919b\u6c27\u5316\u6210\u4e59\u9178\u7684\u53cd\u5e94\u3002\u5316\u5b66\u5f0f\uff1a CH3CHO + NAD+ + CoA \u2194 \u4e59\u9170CoA + NADH + H+ \u4e59\u919b\u8131\u6c22\u9176\u7531\u4e09\u4e2a\u57fa\u56e0\u6240\u7f16\u7801\uff1a ALDH1A1\uff08\u4f4d\u4e8e\u80de\u8d28\u6eb6\u80f6\uff09\uff0c ALDH2\uff08\u4f4d\u4e8e\u7ebf\u7c92\u4f53\uff09 ALDH5\uff08ALDH1B1\uff0c\u6700\u8fd1\u53d1\u73b0\uff09 CH3CHO + NAD+ + CoA \u2194 \u4e59\u9170CoA + NADH + H+ \u5206\u522b\u5206\u5e03\u65bc\u80de\u8d28\u6eb6\u80f6\uff08ALDH1\uff09\u4e0e\u7ebf\u7c92\u4f53\uff08ALDH2\uff09","title":"\u4e59\u919b\u8131\u6c22\u9176"},{"location":"Life/GeneralEducation/Wine/define/\u4e59\u919b\u8131\u6c22\u9176/#_1","text":"ALDH \u5c5e\u4e8e\u919b\u8131\u6c22\u9176\u7684\u4e00\u79cd\u3002\u8d1f\u8d23\u50ac\u5316\u4e59\u919b\u6c27\u5316\u6210\u4e59\u9178\u7684\u53cd\u5e94\u3002\u5316\u5b66\u5f0f\uff1a CH3CHO + NAD+ + CoA \u2194 \u4e59\u9170CoA + NADH + H+ \u4e59\u919b\u8131\u6c22\u9176\u7531\u4e09\u4e2a\u57fa\u56e0\u6240\u7f16\u7801\uff1a ALDH1A1\uff08\u4f4d\u4e8e\u80de\u8d28\u6eb6\u80f6\uff09\uff0c ALDH2\uff08\u4f4d\u4e8e\u7ebf\u7c92\u4f53\uff09 ALDH5\uff08ALDH1B1\uff0c\u6700\u8fd1\u53d1\u73b0\uff09 CH3CHO + NAD+ + CoA \u2194 \u4e59\u9170CoA + NADH + H+ \u5206\u522b\u5206\u5e03\u65bc\u80de\u8d28\u6eb6\u80f6\uff08ALDH1\uff09\u4e0e\u7ebf\u7c92\u4f53\uff08ALDH2\uff09","title":"\u4e59\u919b\u8131\u6c22\u9176"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/","text":"1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b 1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"\u6a21\u677f (copy)"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#1","text":"","title":"1. \u5de5\u4f5c"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_1","text":"","title":"\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_2","text":"","title":"\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_3","text":"","title":"\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_4","text":"","title":"\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_5","text":"","title":"\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_6","text":"","title":"\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_7","text":"","title":"\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_8","text":"","title":"\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_9","text":"","title":"\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_10","text":"","title":"\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#2","text":"1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"2. \u751f\u6d3b"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_11","text":"","title":"\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_12","text":"","title":"\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_13","text":"","title":"\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_14","text":"","title":"\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_15","text":"","title":"\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_16","text":"","title":"\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_17","text":"","title":"\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_18","text":"","title":"\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_19","text":"","title":"\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f (copy)/#_20","text":"1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/","text":"1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b 1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"\u6a21\u677f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#1","text":"","title":"1. \u5de5\u4f5c"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_1","text":"","title":"\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_2","text":"","title":"\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_3","text":"","title":"\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_4","text":"","title":"\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_5","text":"","title":"\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_6","text":"","title":"\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_7","text":"","title":"\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_8","text":"","title":"\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_9","text":"","title":"\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_10","text":"","title":"\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#2","text":"1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"2. \u751f\u6d3b"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_11","text":"","title":"\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_12","text":"","title":"\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_13","text":"","title":"\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_14","text":"","title":"\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_15","text":"","title":"\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_16","text":"","title":"\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_17","text":"","title":"\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_18","text":"","title":"\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_19","text":"","title":"\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f/#_20","text":"1. \u5de5\u4f5c \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 2. \u751f\u6d3b \u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f \u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? \u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f \u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? \u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f \u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f \u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f \u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f \u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f \u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/","text":"_1._\u5de5\u4f5c _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f _2._\u751f\u6d3b _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f _1._\u5de5\u4f5c _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f 1. 2. _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? 1._ 2. 3. _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? 1._ 2. 3. _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f 1._ 2. 3. _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 1._ 2. 3. _2._\u751f\u6d3b _1._\u5de5\u4f5c _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f _2._\u751f\u6d3b _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f 1. 2. _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? 1._ 2. 3. _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? 1._ 2. 3. _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f 1._ 2. 3. _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f 1._ 2. 3. _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f 1._ 2. 3. _1._\u5de5\u4f5c _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f _2._\u751f\u6d3b _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"\u6a21\u677f_(copy)"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#_1_","text":"","title":"_1._\u5de5\u4f5c"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#_","text":"1. 2.","title":"_\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__1","text":"1._ 2. 3.","title":"_\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__2","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__3","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__4","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__5","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__6","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__7","text":"1._ 2. 3.","title":"_\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__8","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__9","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#_2_","text":"_1._\u5de5\u4f5c _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f _2._\u751f\u6d3b _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"_2._\u751f\u6d3b"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__10","text":"1. 2.","title":"_\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__11","text":"1._ 2. 3.","title":"_\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__12","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__13","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417?"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__14","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__15","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__16","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__17","text":"1._ 2. 3.","title":"_\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__18","text":"1._ 2. 3.","title":"_\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f"},{"location":"Life/\u68a6\u5453/\u6a21\u677f_(copy)/#__19","text":"1._ 2. 3. _1._\u5de5\u4f5c _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f _2._\u751f\u6d3b _\u6211\u7684\u9519\u90fd\u6539\u6b63\u4e86\u5417\uff1f _\u6211\u7684\u96be\u9898\u90fd\u89e3\u51b3\u4e86\u5417? _\u6211\u4eca\u5929\u89e6\u78b0\u5230\u54ea\u4e9b\u672a\u77e5\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u662f\u5426\u5f04\u61c2\u4e86\uff1f _\u6211\u4eca\u5929\u611f\u5230\u7591\u60d1\uff0c\u56f0\u60d1\u6709\u54ea\u4e9b\uff0c\u6709\u6b63\u672c\u6e05\u6e90\u4e86\u5417? _\u6211\u4eca\u5929\u6709\u54ea\u4e9b\u91cd\u70b9\uff0c\u91cd\u70b9\u7684\u8fd9\u4e9b\u90fd\u719f\u6089\uff0c\u5e94\u7528\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u90fd\u6709\u54ea\u4e9b\u6587\u5b57\u8f93\u51fa\u4e86\uff1f _\u6211\u4eca\u5929\u5b8c\u6210\u9886\u5bfc\u7684\u4efb\u52a1\u4e86\u5417\uff1f _\u6211\u4eca\u5929\u9ad8\u6548\u80fd\u5b8c\u6210\u5de5\u4f5c\u4e86\u5417\uff1f _\u6211\u662f\u9886\u5bfc\u4ed6\u4eec\u7684\uff0c\u6211\u7684\u76ee\u7684\uff0c\u539f\u59d4\uff0c\u5904\u7406\uff0c\u90fd\u505a\u5f97\u6bd4\u4ed6\u597d\u5417\uff1f _\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f","title":"_\u6211\u4eca\u5929\u523b\u610f\u8bad\u7ec3\u4e86\u5417\uff08\u8c08\u8bdd\uff0c\u89c2\u5bdf\uff0c\u5f15\u71c3\uff09\uff1f"},{"location":"Linux/BasicCommand/VIM\u7528\u6cd5/","text":"\u7528\u6cd5\u5168\u56fe\uff1a \u4f7f\u7528\u65b9\u6cd5 \u770b\u6cd5\uff1a \u7528\u6cd5\u5168\u56fe\uff1a \u4f7f\u7528\u65b9\u6cd5 \u770b\u6cd5\uff1a \u5982\uff1a\u7eff\u8272\uff0c\u90fd\u8868\u793a\u5149\u6807\u79fb\u52a8\u7684\u547d\u4ee4,\u5982\uff1aE W","title":"VIM\u7528\u6cd5"},{"location":"Linux/BasicCommand/VIM\u7528\u6cd5/#_1","text":"","title":"\u7528\u6cd5\u5168\u56fe\uff1a"},{"location":"Linux/BasicCommand/VIM\u7528\u6cd5/#_2","text":"","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"Linux/BasicCommand/VIM\u7528\u6cd5/#_3","text":"\u5982\uff1a\u7eff\u8272\uff0c\u90fd\u8868\u793a\u5149\u6807\u79fb\u52a8\u7684\u547d\u4ee4,\u5982\uff1aE W","title":"\u770b\u6cd5\uff1a"},{"location":"Linux/BasicCommand/fdisk/","text":"fdisk /dev/sdb Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Command (m for help): m Command action a toggle a bootable flag b edit bsd disklabel #\u7f16\u8f91\u5206\u533a\u7684\u786c\u76d8\u6807\u7b7e c toggle the dos compatibility flag d delete a partition #\u5220\u9664\u5206\u533a\u4e0en\u5bf9\u5e94 g create a new empty GPT partition table G create an IRIX (SGI) partition table l list known partition types #\u5217\u51fa\u5df2\u77e5\u5206\u533a\u7684\u7c7b\u578b m print this menu #\u5e2e\u52a9\u4fe1\u606f n add a new partition #\u521b\u5efa\u65b0\u5206\u533a o create a new empty DOS partition table p print the partition table #\u6253\u5370\u5206\u533a\u8868 q quit without saving changes #\u4e0d\u4fdd\u5b58\u7684\u9000\u51fa s create a new empty Sun disklabel t change a partition's system id u change display/entry units v verify the partition table w write table to disk and exit #\u4fdd\u5b58\u5206\u533a\u4fe1\u606f\u5230\u786c\u76d8\uff0c\u5e76\u9000\u51fa\u3002 x extra functionality (experts only) Command (m for help): n Partition type: p primary (1 primary, 0 extended, 3 free) #p:\u4e3b\u5206\u533a\uff0ce\u4e3a\u6269\u5c55\u5206\u533a\u5165\u53e3\u3002\uff08\uff09\u4e3a\u6c47\u603b\uff1a1 \u4e2a\u4e3b\u5206\u533a\uff0c #0\u4e2a\u6269\u5c55\u5206\u533a\uff0c3\u4e2a\u81ea\u7531\u4e3b\u5206\u533a\uff0c\u5c31\u662f\u53ef\u7528\u7684\u989d\u3002 e extended Select (default p): p Partition number (2-4, default 2): #\u9ed8\u8ba4\u4e3a2\u5206\u533a\uff0c\u5982\u60f3\u9ed8\u8ba4\uff0c\u56de\u8f66\u4e0b\u4e00\u6b65\u3002 First sector (4196352-79691775, default 4196352): #\u5982\u60f3\u9ed8\u8ba4\uff0c\u56de\u8f66\u4e0b\u4e00\u6b65\u3002 Using default value 4196352 Last sector, +sectors or +size{K,M,G} (4196352-79691775, default 79691775): +2G #s\u683c\u5f0f\u5fc5\u987b\u4e3a+{\u6570\u5b57}{\u5927\u5199\u5355\u4f4d}+size{K,M,G}\uff0c\u5c0f\u5199\u4f1a\u5982\u4e0b\u62a5\u9519 #Unsupported suffix: 'g'. #Supported: 10^N: KB (KiloByte), MB (MegaByte), GB (GigaByte) # 2^N: K (KibiByte), M (MebiByte), G (GibiByte) Partition 2 of type Linux and of size 2 GiB is set","title":"fdisk"},{"location":"Linux/DOCKER/Docker\u57fa\u672c\u547d\u4ee4/","text":"Docker\u57fa\u672c\u547d\u4ee4 docker serach ** \u641c\u7d22\u5173\u952e\u5b57\u7684\u8f6f\u4ef6 docker create \u2013name mysqlsrv1 -e MYSQL_ROTT_PASSWORD=123456 #start docker docker start mysqlsrv1 #check All image docker ps -a #check running image docker ps #query net netstat -tlp #into docker docker exec -it $name /bin/bash #configuration file #templete image ,delete it when run; docker run -rm $name ...","title":"Docker\u57fa\u672c\u547d\u4ee4"},{"location":"Linux/DOCKER/Docker\u57fa\u672c\u547d\u4ee4/#docker","text":"docker serach ** \u641c\u7d22\u5173\u952e\u5b57\u7684\u8f6f\u4ef6 docker create \u2013name mysqlsrv1 -e MYSQL_ROTT_PASSWORD=123456 #start docker docker start mysqlsrv1 #check All image docker ps -a #check running image docker ps #query net netstat -tlp #into docker docker exec -it $name /bin/bash #configuration file #templete image ,delete it when run; docker run -rm $name ...","title":"Docker\u57fa\u672c\u547d\u4ee4"},{"location":"Linux/DOCKER/Docker\u914d\u7f6e\u6587\u4ef6/","text":"Docker\u914d\u7f6e\u6587\u4ef6 \u65e5\u5fd7\uff1a /var/log/message","title":"Docker\u914d\u7f6e\u6587\u4ef6"},{"location":"Linux/DOCKER/docker_1/","text":"DOCKer\u7684\u955c\u50cf\u6e90\u53ca\u5982\u4f55\u4fee\u6539 \u7f16\u8f91OPTIONS\uff0c\u6dfb\u52a0\u4e2d\u56fd\u79d1\u6280\u5927\u5b66\u7684\u955c\u50cf\u6e90 DOCKer\u7684\u955c\u50cf\u6e90\u53ca\u5982\u4f55\u4fee\u6539 \u65b9\u6cd5\u4e00\uff1a vi /etc/docker/daemon.json #\u6dfb\u52a0\u5982\u4e0b\u7f51\u6613\u955c\u50cf\u6e90 { registry-mirrors : [ http://hub-mirror.c.163.com ] } \u65b9\u6cd5\u4e8c\uff1a \u7f16\u8f91/etc/sysconfig/docker\uff0c\u5728OPTIONS\u53d8\u91cf\u540e\u8ffd\u52a0\u53c2\u6570 --registry-mirror=\u955c\u50cf\u6e90\u5730\u5740 \u7f16\u8f91OPTIONS\uff0c\u6dfb\u52a0\u4e2d\u56fd\u79d1\u6280\u5927\u5b66\u7684\u955c\u50cf\u6e90 OPTIONS='--selinux-enabled --log-driver=journald --registry mirror=https://docker.mirrors.ustc.edu.cn' \u65b9\u6cd5\u4e09\uff1a vi /etc/container/registries.conf [registries.search] registries = ['docker.mirrors.ustc.edu.cn'] [root@mysql ~]# docker info Containers: 0 Running: 0 Paused: 0 Stopped: 0 Images: 0 Server Version: 1.13.1 Storage Driver: overlay2 Backing Filesystem: xfs Supports d_type: false Native Overlay Diff: true Logging Driver: journald Cgroup Driver: systemd Plugins: Volume: local Network: bridge host macvlan null overlay Swarm: inactive Runtimes: docker-runc runc Default Runtime: docker-runc Init Binary: /usr/libexec/docker/docker-init-current containerd version: (expected: aa8187dbd3b7ad67d8e5e3a15115d3eef43a7ed1) runc version: 66aedde759f33c190954815fb765eedc1d782dd9 (expected: 9df8b306d01f59d3a8029be411de015b7304dd8f) init version: fec3683b971d9c3ef73f284f176672c44b448662 (expected: 949e6facb77383876aeff8a6944dde66b3089574) Security Options: seccomp WARNING: You're not using the default seccomp profile Profile: /etc/docker/seccomp.json Kernel Version: 3.10.0-1062.9.1.el7.x86_64 Operating System: CentOS Linux 7 (Core) OSType: linux Architecture: x86_64 Number of Docker Hooks: 3 CPUs: 3 Total Memory: 5.669 GiB Name: mysql ID: ZYNS:LN63:V7R3:ZJZE:ZHZS:C234:553A:STLN:IXK7:TP7E:5CGX:OIZS Docker Root Dir: /var/lib/docker Debug Mode (client): false Debug Mode (server): false Registry: https://index.docker.io/v1/ Experimental: false Insecure Registries: 127.0.0.0/8 Live Restore Enabled: false Registries: docker.io (secure) [root@mysql ~]# docker version Client: Version: 1.13.1 API version: 1.26 Package version: docker-1.13.1-162.git64e9980.el7.centos.x86_64 Go version: go1.10.3 Git commit: 64e9980/1.13.1 Built: Wed Jul 1 14:56:42 2020 OS/Arch: linux/amd64 Server: Version: 1.13.1 API version: 1.26 (minimum version 1.12) Package version: docker-1.13.1-162.git64e9980.el7.centos.x86_64 Go version: go1.10.3 Git commit: 64e9980/1.13.1 Built: Wed Jul 1 14:56:42 2020 OS/Arch: linux/amd64 Experimental: false [root@mysql ~]# ip addr 1: lo: LOOPBACK,UP,LOWER_UP mtu 65536 qdisc noqueue state UNKNOWN qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: enp0s3: BROADCAST,MULTICAST,UP,LOWER_UP mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 08:00:27:50:33:ad brd ff:ff:ff:ff:ff:ff inet 192.168.6.22/24 brd 192.168.6.255 scope global enp0s3 valid_lft forever preferred_lft forever inet6 fe80::a00:27ff:fe50:33ad/64 scope link valid_lft forever preferred_lft forever 3: enp0s9: BROADCAST,MULTICAST,UP,LOWER_UP mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 08:00:27:0f:53:79 brd ff:ff:ff:ff:ff:ff inet 192.168.1.170/24 brd 192.168.1.255 scope global dynamic enp0s9 valid_lft 85972sec preferred_lft 85972sec inet6 2409:8a55:670:cd0:a00:27ff:fe0f:5379/64 scope global dynamic valid_lft 86363sec preferred_lft 86363sec inet6 fe80::a00:27ff:fe0f:5379/64 scope link valid_lft forever preferred_lft forever 4: docker0: NO-CARRIER,BROADCAST,MULTICAST,UP mtu 1500 qdisc noqueue state DOWN link/ether 02:42:57:38:47:c8 brd ff:ff:ff:ff:ff:ff inet 172.17.0.1/16 scope global docker0 valid_lft forever preferred_lft forever","title":"Docker 1"},{"location":"Linux/DOCKER/docker_1/#docker","text":"\u65b9\u6cd5\u4e00\uff1a vi /etc/docker/daemon.json #\u6dfb\u52a0\u5982\u4e0b\u7f51\u6613\u955c\u50cf\u6e90 { registry-mirrors : [ http://hub-mirror.c.163.com ] } \u65b9\u6cd5\u4e8c\uff1a \u7f16\u8f91/etc/sysconfig/docker\uff0c\u5728OPTIONS\u53d8\u91cf\u540e\u8ffd\u52a0\u53c2\u6570 --registry-mirror=\u955c\u50cf\u6e90\u5730\u5740","title":"DOCKer\u7684\u955c\u50cf\u6e90\u53ca\u5982\u4f55\u4fee\u6539"},{"location":"Linux/DOCKER/docker_1/#options","text":"OPTIONS='--selinux-enabled --log-driver=journald --registry mirror=https://docker.mirrors.ustc.edu.cn' \u65b9\u6cd5\u4e09\uff1a vi /etc/container/registries.conf [registries.search] registries = ['docker.mirrors.ustc.edu.cn'] [root@mysql ~]# docker info Containers: 0 Running: 0 Paused: 0 Stopped: 0 Images: 0 Server Version: 1.13.1 Storage Driver: overlay2 Backing Filesystem: xfs Supports d_type: false Native Overlay Diff: true Logging Driver: journald Cgroup Driver: systemd Plugins: Volume: local Network: bridge host macvlan null overlay Swarm: inactive Runtimes: docker-runc runc Default Runtime: docker-runc Init Binary: /usr/libexec/docker/docker-init-current containerd version: (expected: aa8187dbd3b7ad67d8e5e3a15115d3eef43a7ed1) runc version: 66aedde759f33c190954815fb765eedc1d782dd9 (expected: 9df8b306d01f59d3a8029be411de015b7304dd8f) init version: fec3683b971d9c3ef73f284f176672c44b448662 (expected: 949e6facb77383876aeff8a6944dde66b3089574) Security Options: seccomp WARNING: You're not using the default seccomp profile Profile: /etc/docker/seccomp.json Kernel Version: 3.10.0-1062.9.1.el7.x86_64 Operating System: CentOS Linux 7 (Core) OSType: linux Architecture: x86_64 Number of Docker Hooks: 3 CPUs: 3 Total Memory: 5.669 GiB Name: mysql ID: ZYNS:LN63:V7R3:ZJZE:ZHZS:C234:553A:STLN:IXK7:TP7E:5CGX:OIZS Docker Root Dir: /var/lib/docker Debug Mode (client): false Debug Mode (server): false Registry: https://index.docker.io/v1/ Experimental: false Insecure Registries: 127.0.0.0/8 Live Restore Enabled: false Registries: docker.io (secure) [root@mysql ~]# docker version Client: Version: 1.13.1 API version: 1.26 Package version: docker-1.13.1-162.git64e9980.el7.centos.x86_64 Go version: go1.10.3 Git commit: 64e9980/1.13.1 Built: Wed Jul 1 14:56:42 2020 OS/Arch: linux/amd64 Server: Version: 1.13.1 API version: 1.26 (minimum version 1.12) Package version: docker-1.13.1-162.git64e9980.el7.centos.x86_64 Go version: go1.10.3 Git commit: 64e9980/1.13.1 Built: Wed Jul 1 14:56:42 2020 OS/Arch: linux/amd64 Experimental: false [root@mysql ~]# ip addr 1: lo: LOOPBACK,UP,LOWER_UP mtu 65536 qdisc noqueue state UNKNOWN qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: enp0s3: BROADCAST,MULTICAST,UP,LOWER_UP mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 08:00:27:50:33:ad brd ff:ff:ff:ff:ff:ff inet 192.168.6.22/24 brd 192.168.6.255 scope global enp0s3 valid_lft forever preferred_lft forever inet6 fe80::a00:27ff:fe50:33ad/64 scope link valid_lft forever preferred_lft forever 3: enp0s9: BROADCAST,MULTICAST,UP,LOWER_UP mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 08:00:27:0f:53:79 brd ff:ff:ff:ff:ff:ff inet 192.168.1.170/24 brd 192.168.1.255 scope global dynamic enp0s9 valid_lft 85972sec preferred_lft 85972sec inet6 2409:8a55:670:cd0:a00:27ff:fe0f:5379/64 scope global dynamic valid_lft 86363sec preferred_lft 86363sec inet6 fe80::a00:27ff:fe0f:5379/64 scope link valid_lft forever preferred_lft forever 4: docker0: NO-CARRIER,BROADCAST,MULTICAST,UP mtu 1500 qdisc noqueue state DOWN link/ether 02:42:57:38:47:c8 brd ff:ff:ff:ff:ff:ff inet 172.17.0.1/16 scope global docker0 valid_lft forever preferred_lft forever","title":"\u7f16\u8f91OPTIONS\uff0c\u6dfb\u52a0\u4e2d\u56fd\u79d1\u6280\u5927\u5b66\u7684\u955c\u50cf\u6e90"},{"location":"Linux/DOCKER/\u6253\u5305\u955c\u50cf/","text":"\u6253\u5305\u955c\u50cf \u5c06\u5bb9\u5668\u8fd8\u539f\u6210\u955c\u50cf docker commit container [repo:tag] container\u4e2d\u7684\u4fee\u6539\u4f1a\u5728\u518d\u6b21\u542f\u52a8\u65f6\u6d88\u5931\uff0c\u56e0\u6b64\u9700\u8981commit docker commit **python buildfile \u7cfb\u7edf\u6253\u5305\u955c\u50cf \u4e00\u4e2aJava\u955c\u50cf\u7684buildfile # FROM nimmis/ubuntu:14.04 #\u8c01\u7ef4\u62a4\u4fe1\u606f MAINTAINER nimmis kjell.havneskold@gmail.com # disable interactive functions ENV DEBIAN_FRONTEND noninteractive # set default java environment variable ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64 RUN apt-get install -y software-properties-common \\ add-apt-repository ppa:openjdk-r/ppa -y \\ apt-get update \\ apt-get install -y --no-install-recommends openjdk-8-jre \\ rm -rf /var/lib/apt/lists/*","title":"\u6253\u5305\u955c\u50cf"},{"location":"Linux/DOCKER/\u6253\u5305\u955c\u50cf/#_1","text":"","title":"\u6253\u5305\u955c\u50cf"},{"location":"Linux/DOCKER/\u6253\u5305\u955c\u50cf/#_2","text":"docker commit container [repo:tag] container\u4e2d\u7684\u4fee\u6539\u4f1a\u5728\u518d\u6b21\u542f\u52a8\u65f6\u6d88\u5931\uff0c\u56e0\u6b64\u9700\u8981commit docker commit **python","title":"\u5c06\u5bb9\u5668\u8fd8\u539f\u6210\u955c\u50cf"},{"location":"Linux/DOCKER/\u6253\u5305\u955c\u50cf/#buildfile","text":"\u4e00\u4e2aJava\u955c\u50cf\u7684buildfile # FROM nimmis/ubuntu:14.04 #\u8c01\u7ef4\u62a4\u4fe1\u606f MAINTAINER nimmis kjell.havneskold@gmail.com # disable interactive functions ENV DEBIAN_FRONTEND noninteractive # set default java environment variable ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64 RUN apt-get install -y software-properties-common \\ add-apt-repository ppa:openjdk-r/ppa -y \\ apt-get update \\ apt-get install -y --no-install-recommends openjdk-8-jre \\ rm -rf /var/lib/apt/lists/*","title":"buildfile \u7cfb\u7edf\u6253\u5305\u955c\u50cf"},{"location":"Project/AI\u4fee\u56fe/","text":"\u4e0b\u8f7d\u5230\u672c\u5730\u8fd0\u884c \u8c03\u7528API\u8fd0\u884c https://colab.research.google.com/github/jantic/DeOldify/blob/master/ImageColorizerColab.ipynb https://colab.research.google.com/github/jantic/DeOldify/blob/master/ImageColorizerColab.ipynb#scrollTo=00_GcC_trpdE https://www.myheritage.com/incolor","title":"AI\u4fee\u56fe"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/","text":"An Archaeology-Inspired Database Yoav Rubin \u200b Yoav Rubin is a Senior Software Engineer at Microsoft, and prior to that was a Research Staff Member and a Master Inventor at IBM Research. He works now in the domain of data security in the cloud, and in the past his work focused on developing cloud or web based development environments. Yoav holds an M.Sc. in Medical Research in the field of Neuroscience and B.Sc in Information Systems Engineering. He goes by @yoavrubin on Twitter, and occasionally blogs at http://yoavrubin.blogspot.com. Introduction Software development is often viewed as a rigorous process, where the inputs are requirements and the output is the working product. However, software developers are people, with their own perspectives and biases which color the outcome of their work. In this chapter, we will explore how a change in a common perspective affects the design and implementation of a well-studied type of software: a database. Database systems are designed to store and query data. This is something that all information workers do; however, the systems themselves were designed by computer scientists. As a result, modern database systems are highly influenced by computer scientists\u2019 definition of what data is, and what can be done with it. For example, most modern databases implement updates by overwriting old data in-place instead of appending the new data and keeping the old. This mechanism, nicknamed \"place-oriented programming\" by Rich Hickey , saves storage space but makes it impossible to retrieve the entire history of a particular record. This design decision reflects the computer scientist\u2019s perspective that \"history\" is less important than the price of its storage. If you were to instead ask an archaeologist where the old data can be found, the answer would be \"hopefully, it's just buried underneath\". (Disclaimer: My understanding of the views of a typical archaeologist is based on visiting a few museums, reading several Wikipedia articles, and watching the entire Indiana Jones series.) Designing a Database Like an Archaeologist If we were to ask our friendly archaeologist to design a database, we might expect the requirements to reflect what would be found at an excavation site: All data is found and catalogued at the site. Digging deeper will expose the state of things in times past. Artifacts found at the same layer are from the same period. Each artifact will consist of state that it accumulated in different periods. For example, a wall may have Roman symbols on it on one layer, and in a lower layer there may be Greek symbols. Both these observations are recorded as part of the wall's state. This analogy is visualized in Figure 10.1 : The entire circle is the excavation site. Each ring is a layer (here numbered from 0 to 4). Each slice is a labeled artifact (\u2018A\u2019 through \u2018E\u2019). Each artifact has a \u2018symbol\u2019 attribute (where a blank means that no update was made). Solid arrows denote a change in symbol between layers Dotted arrows are arbitrary relationships of interest between artifacts (e.g., from \u2018E\u2019 to \u2018A\u2019). Figure 10.1 - The Excavation Site If we translate the archaeologist's language into terms a database designer would use: The excavation site is a database . Each artifact is an entity with a corresponding ID . Each entity has a set of attributes , which may change over time. Each attribute has a specific value at a specific time. This may look very different from the kinds of databases you are used to working with. This design is sometimes referred to as \"functional database\", since it uses ideas from the domain of functional programming. The rest of the chapter describes how to implement such a database. Since we are building a functional database, we will be using a functional programming language called Clojure. Clojure has several qualities that make it a good implementation language for a functional database, such as out-of-the-box immutability, higher order functions, and metaprogramming facilities. But ultimately, the reason Clojure was chosen was its emphasis on clean, rigorous design, which few programming languages possess. Laying the Foundation Let\u2019s start by declaring the core constructs that make up our database. (defrecord Database [layers top-id curr-time]) A database consists of: Layers of entities, each with its own unique timestamp (the rings in Figure 1). A top-id value which is the next available unique ID. The time at which the database was last updated. (defrecord Layer [storage VAET AVET VEAT EAVT]) Each layer consists of: A data store for entities. Indexes that are used to speed up queries to the database. (These indexes and the meaning of their names will be explained later.) In our design, a single conceptual \u2018database\u2019 may consist of many Database instances, each of which represents a snapshot of the database at curr-time . A Layer may share the exact same entity with another Layer if the entity\u2019s state hasn\u2019t changed between the times that they represent. Entities Our database wouldn't be of any use without entities to store, so we define those next. As discussed before, an entity has an ID and a list of attributes; we create them using the make-entity function. (defrecord Entity [id attrs]) (defn make-entity ([] (make-entity :db/no-id-yet)) ([id] (Entity. id {}))) Note that if no ID is given, the entity\u2019s ID is set to be :db/no-id-yet , which means that something else is responsible for giving it an ID. We\u2019ll see how that works later. Attributes Each attribute consists of its name, value, and the timestamps of its most recent update as well as the one before that. Each attribute also has two fields that describe its type and cardinality . In the case that an attribute is used to represent a relationship to another entity, its type will be :db/ref and its value will be the ID of the related entity. This simple type system also acts as an extension point. Users are free to define their own types and leverage them to provide additional semantics for their data. An attribute's cardinality specifies whether the attribute represents a single value or a set of values. We use this field to determine the set of operations that are permitted on this attribute. Creating an attribute is done using the make-attr function. (defrecord Attr [name value ts prev-ts]) (defn make-attr ([name value type ; these ones are required {:keys [cardinality] :or {cardinality :db/single}} ] {:pre [(contains? #{:db/single :db/multiple} cardinality)]} (with-meta (Attr. name value -1 -1) {:type type :cardinality cardinality}))) There are a couple of interesting patterns used in this constructor function: We use Clojure\u2019s Design by Contract pattern to validate that the cardinality parameter is a permissible value. We use Clojure\u2019s destructuring mechanism to provide a default value of :db/single if one is not given. We use Clojure\u2019s metadata capabilities to distinguish between an attribute's data (name, value and timestamps) and its metadata (type and cardinality). In Clojure, metadata handling is done using the functions with-meta (to set) and meta (to read). Attributes only have meaning if they are part of an entity. We make this connection with the add-attr function, which adds a given attribute to an entity's attribute map (called :attrs ). Note that instead of using the attribute\u2019s name directly, we first convert it into a keyword to adhere to Clojure\u2019s idiomatic usage of maps. (defn add-attr [ent attr] (let [attr-id (keyword (:name attr))] (assoc-in ent [:attrs attr-id] attr))) Storage So far we have talked a lot about what we are going to store, without thinking about where we are going to store it. In this chapter, we resort to the simplest storage mechanism: storing the data in memory. This is certainly not reliable, but it simplifies development and debugging and allows us to focus on more interesting parts of the program. We will access the storage via a simple protocol , which will make it possible to define additional storage providers for a database owner to select from. (defprotocol Storage (get-entity [storage e-id] ) (write-entity [storage entity]) (drop-entity [storage entity])) And here's our in-memory implementation of the protocol, which uses a map as the store: (defrecord InMemory [] Storage (get-entity [storage e-id] (e-id storage)) (write-entity [storage entity] (assoc storage (:id entity) entity)) (drop-entity [storage entity] (dissoc storage (:id entity)))) Indexing the Data Now that we've defined the basic elements of our database, we can start thinking about how we're going to query it. By virtue of how we've structured our data, any query is necessarily going to be interested in at least one of an entity's ID, and the name and value of some of its attributes. This triplet of (entity-id, attribute-name, attribute-value) is important enough to our query process that we give it an explicit name: a datom . Datoms are important because they represent facts, and our database accumulates facts. If you've used a database system before, you are probably already familiar with the concept of an index , which is a supporting data structure that consumes extra space in order to decrease the average query time. In our database, an index is a three-leveled structure which stores the components of a datom in a specific order. Each index derives its name from the order it stores the datom's components in. For example, let\u2019s look at at the index sketched in Figure 10.2 : The first level stores entity-IDs The second level stores the related attribute-names The third level stores the related value This index is named EAVT, as the top level map holds Entity IDs, the second level holds Attribute names, and the leaves hold Values. The \"T\" comes from the fact that each layer in the database has its own indexes, hence the index itself is relevant for a specific Time. Figure 10.2 - EAVT Figure 10.3 shows an index that would be called AVET since: The first level map holds attribute-name. The second level map holds the values (of the attributes). The third level set holds the entity-IDs (of the entities whose attribute is at the first level). Figure 10.3 - AVET Our indexes are implemented as a map of maps, where the keys of the root map act as the first level, each such key points to a map whose keys act as the index\u2019s second-level and the values are the index\u2019s third level. Each element in the third level is a set, holding the leaves of the index. Each index stores the components of a datom as some permutation of its canonical 'EAV' ordering (entity_id, attribute-name, attribute-value). However, when we are working with datoms outside of the index, we expect them to be in canonical format. We thus provide each index with functions from-eav and to-eav to convert to and from these orderings. In most database systems, indexes are an optional component; for example, in an RDBMS (Relational Database Management System) like PostgreSQL or MySQL, you will choose to add indexes only to certain columns in a table. We provide each index with a usage-pred function that determines for an attribute whether it should be included in this index or not. (defn make-index [from-eav to-eav usage-pred] (with-meta {} {:from-eav from-eav :to-eav to-eav :usage-pred usage-pred})) (defn from-eav [index] (:from-eav (meta index))) (defn to-eav [index] (:to-eav (meta index))) (defn usage-pred [index] (:usage-pred (meta index))) In our database there are four indexes: EAVT (see Figure 10.2 ), AVET (see Figure 10.3 ), VEAT and VAET. We can access these as a vector of values returned from the indexes function. (defn indexes[] [:VAET :AVET :VEAT :EAVT]) To demonstrate how all of this comes together, the result of indexing the following five entities is visualized in Table 10.1. Julius Caesar (also known as JC) lives in Rome Brutus (also known as B) lives in Rome Cleopatra (also known as Cleo) lives in Egypt Rome\u2019s river is the Tiber Egypt\u2019s river is the Nile EAVT index AVET index JC \u21d2 {lives-in \u21d2 {Rome}} B \u21d2 {lives-in \u21d2 {Rome}} Cleo \u21d2 {lives-in \u21d2 {Egypt}} Rome \u21d2 {river \u21d2 {Tiber}} Egypt \u21d2 {river \u21d2 {Nile}} lives-in \u21d2 {Rome \u21d2 {JC, B}} {Egypt \u21d2 {Cleo}} river \u21d2 {Rome \u21d2 {Tiber}} {Egypt \u21d2 {Nile}} VEAT index VAET index Rome \u21d2 {JC \u21d2 {lives-in}} {B \u21d2 {lives-in}} Egypt \u21d2 {Cleo \u21d2 {lives-in}} Tiber \u21d2 {Rome \u21d2 {river}} Nile \u21d2 {Egypt \u21d2 {river}} Rome \u21d2 {lives-in \u21d2 {JC, B}} Egypt \u21d2 {lives-in \u21d2 {Cleo}} Tiber \u21d2 {river \u21d2 {Rome}} Nile \u21d2 {river \u21d2 {Egypt}} : Table 10.1 - Indexes Database We now have all the components we need to construct our database. Initializing our database means: creating an initial empty layer with no data creating a set of empty indexes setting its top-id and curr-time to be 0 (defn ref? [attr] (= :db/ref (:type (meta attr)))) (defn always[ more] true) (defn make-db [] (atom (Database. [(Layer. (fdb.storage.InMemory.) ; storage (make-index #(vector %3 %2 %1) #(vector %3 %2 %1) #(ref? %));VAET (make-index #(vector %2 %3 %1) #(vector %3 %1 %2) always);AVET (make-index #(vector %3 %1 %2) #(vector %2 %3 %1) always);VEAT (make-index #(vector %1 %2 %3) #(vector %1 %2 %3) always);EAVT )] 0 0))) There is one snag, though: all collections in Clojure are immutable. Since write operations are pretty critical in a database, we define our structure to be an Atom , which is a Clojure reference type that provides the capability of atomic writes. You may be wondering why we use the always function for the AVET, VEAT and EAVT indexes, and the ref? predicate for the VAET index. This is because these indexes are used in different scenarios, which we\u2019ll see later when we explore queries in depth. Basic Accessors Before we can build complex querying facilities for our database, we need to provide a lower-level API that different parts of the system can use to retrieve the components we've built by their associated identifiers from any point in time. Consumers of the database can also use this API; however, it is more likely that they will be using the more fully-featured components built on top of it. This lower-level API is composed of the following four accessor functions: (defn entity-at ([db ent-id] (entity-at db (:curr-time db) ent-id)) ([db ts ent-id] (get-entity (get-in db [:layers ts :storage]) ent-id))) (defn attr-at ([db ent-id attr-name] (attr-at db ent-id attr-name (:curr-time db))) ([db ent-id attr-name ts] (get-in (entity-at db ts ent-id) [:attrs attr-name]))) (defn value-of-at ([db ent-id attr-name] (:value (attr-at db ent-id attr-name))) ([db ent-id attr-name ts] (:value (attr-at db ent-id attr-name ts)))) (defn indx-at ([db kind] (indx-at db kind (:curr-time db))) ([db kind ts] (kind ((:layers db) ts)))) Since we treat our database just like any other value, each of these functions take a database as an argument. Each element is retrieved by its associated identifier, and optionally the timestamp of interest. This timestamp is used to find the corresponding layer that our lookup should be applied to. Evolution A first usage of the basic accessors is to provide a \"read-into-the-past\" API. This is possible as, in our database, an update operation is done by appending a new layer (as opposed to overwriting). Therefore we can use the prev-ts property to look at the attribute at that layer, and continue looking deeper into history to observe how the attribute\u2019s value evolved throughout time. The function evolution-of does exactly that. It returns a sequence of pairs, each consisting of the timestamp and value of an attribute\u2019s update. (defn evolution-of [db ent-id attr-name] (loop [res [] ts (:curr-time db)] (if (= -1 ts) (reverse res) (let [attr (attr-at db ent-id attr-name ts)] (recur (conj res {(:ts attr) (:value attr)}) (:prev-ts attr)))))) Data Behavior and Life Cycle So far, our discussion has focused on the structure of our data: what the core components are and how they are aggregated together. It's time to explore the dynamics of our system: how data is changed over time through the add--update--remove data lifecycle . As we've already discussed, data in an archaeologist's world never actually changes. Once it is created, it exists forever and can only be hidden from the world by data in a newer layer. The term \"hidden\" is crucial here. Older data does not \"disappear\"\u2014it is buried, and can be revealed again by exposing an older layer. Conversely, updating data means obscuring the old by adding a new layer on top of it with something else. We can thus \"delete\" data by adding a layer of \"nothing\" on top of it. This means that when we talk about data lifecycle, we are really talking about adding layers to our data over time. The Bare Necessities The data lifecycle consists of three basic operations: adding an entity with the add-entity function removing an entity with the remove-entity function updating an entity with the update-entity function Remember that, even though these functions provide the illusion of mutability, all that we are really doing in each case is adding another layer to the data. Also, since we are using Clojure's persistent data structures, from the caller's perspective we pay the same price for these operations as for an \"in-place\" change (i.e., negligible performance overhead), while maintaining immutability for all other users of the data structure. Adding an Entity Adding an entity requires us to do three things: prepare the entity for addition (by giving it an ID and a timestamp) place the entity in storage update indexes as necessary These steps are performed in the add-entity function. (defn add-entity [db ent] (let [[fixed-ent next-top-id] (fix-new-entity db ent) layer-with-updated-storage (update-in (last (:layers db)) [:storage] write-entity fixed-ent) add-fn (partial add-entity-to-index fixed-ent) new-layer (reduce add-fn layer-with-updated-storage (indexes))] (assoc db :layers (conj (:layers db) new-layer) :top-id next-top-id))) Preparing an entity is done by calling the fix-new-entity function and its auxiliary functions next-id , next-ts and update-creation-ts . These latter two helper functions are responsible for finding the next timestamp of the database (done by next-ts ), and updating the creation timestamp of the given entity (done by update-creation-ts ). Updating the creation timestamp of an entity means going over the attributes of the entity and updating their :ts fields. (defn- next-ts [db] (inc (:curr-time db))) (defn- update-creation-ts [ent ts-val] (reduce #(assoc-in %1 [:attrs %2 :ts ] ts-val) ent (keys (:attrs ent)))) (defn- next-id [db ent] (let [top-id (:top-id db) ent-id (:id ent) increased-id (inc top-id)] (if (= ent-id :db/no-id-yet) [(keyword (str increased-id)) increased-id] [ent-id top-id]))) (defn- fix-new-entity [db ent] (let [[ent-id next-top-id] (next-id db ent) new-ts (next-ts db)] [(update-creation-ts (assoc ent :id ent-id) new-ts) next-top-id])) To add the entity to storage, we locate the most recent layer in the database and update the storage in that layer with a new layer, the results of which are stored in layer-with-updated-storage . Finally, we must update the indexes. This means, for each of the indexes (done by the combination of reduce and the partial -ed add-entity-to-index at the add-entity function): Find the attributes that should be indexed (see the combination of filter with the index\u2019s usage-pred that operates on the attributes in add-entity-to-index ) Build an index-path from the the entity\u2019s ID (see the combination of the partial -ed update-entry-in-index with from-eav at the update-attr-in-index function) Add that path to the index (see the update-entry-in-index function) (defn- add-entity-to-index [ent layer ind-name] (let [ent-id (:id ent) index (ind-name layer) all-attrs (vals (:attrs ent)) relevant-attrs (filter #((usage-pred index) %) all-attrs) add-in-index-fn (fn [ind attr] (update-attr-in-index ind ent-id (:name attr) (:value attr) :db/add))] (assoc layer ind-name (reduce add-in-index-fn index relevant-attrs)))) (defn- update-attr-in-index [index ent-id attr-name target-val operation] (let [colled-target-val (collify target-val) update-entry-fn (fn [ind vl] (update-entry-in-index ind ((from-eav index) ent-id attr-name vl) operation))] (reduce update-entry-fn index colled-target-val))) (defn- update-entry-in-index [index path operation] (let [update-path (butlast path) update-value (last path) to-be-updated-set (get-in index update-path #{})] (assoc-in index update-path (conj to-be-updated-set update-value)))) All of these components are added as a new layer to the given database. All that\u2019s left is to update the database\u2019s timestamp and top-id fields. That last step occurs on the last line of add-entity , which also returns the updated database. We also provide an add-entities convenience function that adds multiple entities to the database in one call by iteratively applying add-entity . (defn add-entities [db ents-seq] (reduce add-entity db ents-seq)) Removing an Entity Removing an entity from our database means adding a layer in which it does not exist. To do this, we need to: Remove the entity itself Update any attributes of other entities that reference it Clear the entity from our indexes This \"construct-without\" process is executed by the remove-entity function, which looks very similar to add-entity : (defn remove-entity [db ent-id] (let [ent (entity-at db ent-id) layer (remove-back-refs db ent-id (last (:layers db))) no-ref-layer (update-in layer [:VAET] dissoc ent-id) no-ent-layer (assoc no-ref-layer :storage (drop-entity (:storage no-ref-layer) ent)) new-layer (reduce (partial remove-entity-from-index ent) no-ent-layer (indexes))] (assoc db :layers (conj (:layers db) new-layer)))) Reference removal is done by the remove-back-refs function: (defn- remove-back-refs [db e-id layer] (let [reffing-datoms (reffing-to e-id layer) remove-fn (fn[d [e a]] (update-entity db e a e-id :db/remove)) clean-db (reduce remove-fn db reffing-datoms)] (last (:layers clean-db)))) We begin by using reffing-datoms-to to find all entities that reference ours in the given layer; it returns a sequence of triplets that contain the ID of the referencing entity, as well as the attribute name and the ID of the removed entity. (defn- reffing-to [e-id layer] (let [vaet (:VAET layer)] (for [[attr-name reffing-set] (e-id vaet) reffing reffing-set] [reffing attr-name]))) We then apply update-entity to each triplet to update the attributes that reference our removed entity. (We'll explore how update-entity works in the next section.) The last step of remove-back-refs is to clear the reference itself from our indexes, and more specifically from the VAET index, since it is the only index that stores reference information. Updating an Entity At its essence, an update is the modification of an entity\u2019s attribute\u2019s value. The modification process itself depends on the cardinality of the attribute: an attribute with cardinality :db/multiple holds a set of values, so we must allow items to be added to or removed from this set, or the set to be replaced entirely. An attribute with cardinality :db/single holds a single value, and thus only allows replacement. Since we also have indexes that provide lookups directly on attributes and their values, these will also have to be updated. As with add-entity and remove-entity , we won't actually be modifying our entity in place, but will instead add a new layer which contains the updated entity. (defn update-entity ([db ent-id attr-name new-val] (update-entity db ent-id attr-name new-val :db/reset-to)) ([db ent-id attr-name new-val operation] (let [update-ts (next-ts db) layer (last (:layers db)) attr (attr-at db ent-id attr-name) updated-attr (update-attr attr new-val update-ts operation) fully-updated-layer (update-layer layer ent-id attr updated-attr new-val operation)] (update-in db [:layers] conj fully-updated-layer)))) To update an attribute, we locate it with attr-at and then use update-attr to perform the actual update. (defn- update-attr [attr new-val new-ts operation] {:pre [(if (single? attr) (contains? #{:db/reset-to :db/remove} operation) (contains? #{:db/reset-to :db/add :db/remove} operation))]} (- attr (update-attr-modification-time new-ts) (update-attr-value new-val operation))) We use two helper functions to perform the update. update-attr-modification-time updates timestamps to reflect the creation of the black arrows in Figure 1: (defn- update-attr-modification-time [attr new-ts] (assoc attr :ts new-ts :prev-ts (:ts attr))) update-attr-value actually updates the value: (defn- update-attr-value [attr value operation] (cond (single? attr) (assoc attr :value #{value}) ; now we're talking about an attribute of multiple values (= :db/reset-to operation) (assoc attr :value value) (= :db/add operation) (assoc attr :value (CS/union (:value attr) value)) (= :db/remove operation) (assoc attr :value (CS/difference (:value attr) value)))) All that remains is to remove the old value from the indexes and add the new one to them, and then construct the new layer with all of our updated components. Luckily, we can leverage the code we wrote for adding and removing entities to do this. Transactions Each of the operations in our low-level API acts on a single entity. However, nearly all databases have a way for users to do multiple operations as a single transaction . This means: The batch of operations is viewed as a single atomic operation, so all of the operations either succeed together or fail together. The database is in a valid state before and after the transaction. The batch update appears to be isolated ; other queries should never see a database state in which only some of the operations have been applied. We can fulfill these requirements through an interface that consumes a database and a set of operations to be performed, and produces a database whose state reflects the given changes. All of the changes submitted in the batch should be applied through the addition of a single layer. However, we have a problem: All of the functions we wrote in our low-level API add a new layer to the database. If we were to perform a batch with n operations, we would thus see n new layers added, when what we would really like is to have exactly one new layer. The key here is that the layer we want is the top layer that would be produced by performing those updates in sequence. Therefore, the solution is to execute the user\u2019s operations one after another, each creating a new layer. When the last layer is created, we take only that top layer and place it on the initial database (leaving all the intermediate layers to pine for the fjords). Only after we've done all this will we update the database's timestamp. All this is done in the transact-on-db function, which receives the initial value of the database and the batch of operations to perform, and returns its updated value. (defn transact-on-db [initial-db ops] (loop [[op rst-ops] ops transacted initial-db] (if op (recur rst-ops (apply (first op) transacted (rest op))) (let [initial-layer (:layers initial-db) new-layer (last (:layers transacted))] (assoc initial-db :layers (conj initial-layer new-layer) :curr-time (next-ts initial-db) :top-id (:top-id transacted)))))) Note here that we used the term value , meaning that only the caller to this function is exposed to the updated state; all other users of the database are unaware of this change (as a database is a value, and therefore cannot change). In order to have a system where users can be exposed to state changes performed by others, users do not interact directly with the database, but rather refer to it using another level of indirection. This additional level is implemented using Clojure's Atom , a reference type. Here we leverage the main three key features of an Atom , which are: It references a value. It is possible to update the referencing of the Atom to another value by executing a transaction (using Clojure's Software Transaction Memory capabilities). The transaction accepts an Atom and a function. That function operates on the value of the Atom and returns a new value. After the execution of the transaction, the Atom references the value that was returned from the function. Getting to the value that is referenced by the Atom is done by dereferencing it, which returns the state of that Atom at that time. In between Clojure's Atom and the work done in transact-on-db , there's still a gap to be bridged; namely, to invoke the transaction with the right inputs. To have the simplest and clearest APIs, we would like users to just provide the Atom and the list of operations, and have the database transform the user input into a proper transaction. That transformation occurs in the following transaction call chain: transact \u2192 _transact \u2192 swap! \u2192 transact-on-db Users call transact with the Atom (i.e., the connection) and the operations to perform, which relays its input to _transact , adding to it the name of the function that updates the Atom ( swap! ). (defmacro transact [db-conn txs] `(_transact ~db-conn swap! ~@txs)) _transact prepares the call to swap! . It does so by creating a list that begins with swap! , followed by the Atom , then the transact-on-db symbol and the batch of operations. (defmacro _transact [db op txs] (when txs (loop [[frst-tx# rst-tx#] txs res# [op db `transact-on-db] accum-txs# []] (if frst-tx# (recur rst-tx# res# (conj accum-txs# (vec frst-tx#))) (list* (conj res# accum-txs#)))))) swap! invokes transact-on-db within a transaction (with the previously prepared arguments), and transact-on-db creates the new state of the database and returns it. At this point we can see that with few minor tweaks, we can also provide a way to ask \"what if\" questions. This can be done by replacing swap! with a function that would not make any change to the system. This scenario is implemented with the what-if call chain: what-if \u2192 _transact \u2192 _what-if \u2192 transact-on-db The user calls what-if with the database value and the operations to perform. It then relays these inputs to _transact , adding to them a function that mimics swap! 's APIs, without its effect (callled _what-if ). (defmacro what-if [db ops] `(_transact ~db _what-if ~@ops)) _transact prepares the call to _what-if . It does so by creating a list that begins with _what-if , followed by the database, then the transact-on-db symbol and the batch of operations. _what-if invokes transact-on-db , just like swap! does in the transaction scenario, but does not inflict any change on the system. (defn- _what-if [db f txs] (f db txs)) Note that we are not using functions, but macros. The reason for using macros here is that arguments to macros do not get evaluated as the call happens; this allows us to offer a cleaner API design where the user provides the operations structured in the same way that any function call is structured in Clojure. The above process can be seen in the following examples. For Transaction, the user call: (transact db-conn (add-entity e1) (update-entity e2 atr2 val2 :db/add)) changes into: (_transact db-conn swap! (add-entity e1) (update-entity e2 atr2 val2 :db/add)) which becomes: (swap! db-conn transact-on-db [[add-entity e1][update-entity e2 atr2 val2 :db/add]]) For what-if, the user call: (what-if my-db (add-entity e3) (remove-entity e4)) changes into: (_transact my-db _what-if (add-entity e3) (remove-entity e4)) then: (_what-if my-db transact-on-db [[add-entity e3] [remove-entity e4]]) and eventually: (transact-on-db my-db [[add-entity e3] [remove-entity e4]]) Insight Extraction as Libraries At this point we have the core functionality of the database in place, and it is time to add its raison d'\u00eatre : insights extraction. The architecture approach we used here is to allow adding these capabilities as libraries, as different usages of the database would need different such mechanisms. Graph Traversal A reference connection between entities is created when an entity\u2019s attribute\u2019s type is :db/ref , which means that the value of that attribute is an ID of another entity. When a referring entity is added to the database, the reference is indexed at the VAET index. The information found in the VAET index can be leveraged to extract all the incoming links to an entity. This is done in the incoming-refs function, which collects all the leaves that are reachable from the entity at that index: (defn incoming-refs [db ts ent-id ref-names] (let [vaet (indx-at db :VAET ts) all-attr-map (vaet ent-id) filtered-map (if ref-names (select-keys ref-names all-attr-map) all-attr-map)] (reduce into #{} (vals filtered-map)))) We can also go through all of a given entity\u2019s attributes and collect all the values of attributes of type :db/ref , and by that extract all the outgoing references from that entity. This is done by the outgoing-refs function. (defn outgoing-refs [db ts ent-id ref-names] (let [val-filter-fn (if ref-names #(vals (select-keys ref-names %)) vals)] (if-not ent-id [] (- (entity-at db ts ent-id) (:attrs) (val-filter-fn) (filter ref?) (mapcat :value))))) These two functions act as the basic building blocks for any graph traversal operation, as they are the ones that raise the level of abstraction from entities and attributes to nodes and links in a graph. Once we have the ability to look at our database as a graph, we can provide various graph traversing and querying APIs. We leave this as a solved exercise to the reader; one solution can be found in the chapter's source code (see graph.clj ). Querying the Database The second library we present provides querying capabilities, which is the main concern of this section. A database is not very useful to its users without a powerful query mechanism. This feature is usually exposed to users through a query language that is used to declaratively specify the set of data of interest. Our data model is based on accumulation of facts (i.e., datoms) over time. For this model, a natural place to look for the right query language is logic programming . A commonly used query language influenced by logic programming is Datalog which, in addition to being well-suited for our data model, has a very elegant adaptation to Clojure\u2019s syntax. Our query engine will implement a subset of the Datalog language from the Datomic database . Query Language Let's look at an example query in our proposed language. This query asks: \"What are the names and birthdays of entities who like pizza, speak English, and who have a birthday this month?\" { :find [?nm ?bd ] :where [ [?e :likes pizza ] [?e :name ?nm] [?e :speak English ] [?e :bday (bday-mo? ?bd)]]} Syntax We use the syntax of Clojure\u2019s data literals directly to provide the basic syntax for our queries. This allows us to avoid having to write a specialized parser, while still providing a form that is familiar and easily readable to programmers familiar with Clojure. A query is a map with two items: An item with :where as a key, and with a rule as a value. A rule is a vector of clauses , and a clause is a vector composed of three predicates , each of which operates on a different component of a datom. In the example above, [?e :likes \"pizza\"] is a clause. This :where item defines a rule that acts as a filter on datoms in our database (like a SQL WHERE clause.) An item with :find as a key, and with a vector as a value. The vector defines which components of the selected datom should be projected into the results (like a SQL SELECT clause.) The description above omits a crucial requirement: how to make different clauses sync on a value (i.e., make a join operation between them), and how to structure the found values in the output (specified by the :find part). We fulfill both of these requirements using variables , which are denoted with a leading ? . The only exception to this definition is the \"don't care\" variable _ (underscore). A clause in a query is composed of three predicates; Table 10.2 defines what can act as a predicate in our query language. Name Meaning Example Constant Is the value of the item in the datom equal to the constant? :likes Variable Bind the value of the item in the datom to the variable and return true. ?e Don\u2019t-care Always returns true. _ Unary operator Unary operation that takes a variable as its operand. Bind the datom's item's value to the variable (unless it's an '_'). Replace the variable with the value of the item in the datom. Return the application of the operation. (bday-mo? _) Binary operator A binary operation that must have a variable as one of its operands. Bind the datom's item's value to the variable (unless it's an '_'). Replace the variable with the value of the item in the datom. Return the result of the operation. ( ?age 20) : Table 10.2 - Predicates Limitations of our Query Language Engineering is all about managing tradeoffs, and designing our query engine is no different. In our case, the main tradeoff we must address is feature-richness versus complexity. Resolving this tradeoff requires us to look at common use-cases of the system, and from there deciding what limitations would be acceptable. In our database, we decided to build a query engine with the following limitations: Users cannot define logical operations between the clauses; they are always \u2018ANDed\u2019 together. (This can be worked around by using unary or binary predicates.) If there is more than one clause in a query, there must be one variable that is found in all of the clauses of that query. This variable acts as a joining variable. This limitation simplifies the query optimizer. A query is only executed on a single database. While these design decisions result in a query language that is less rich than Datalog, we are still able to support many types of simple but useful queries. Query Engine Design While our query language allows the user to specify what they want to access, it hides the details of how this will be accomplished. The query engine is the database component responsible for yielding the data for a given query. This involves four steps: Transformation to internal representation: Transform the query from its textual form into a data structure that is consumed by the query planner. Building a query plan: Determine an efficient plan for yielding the results of the given query. In our case, a query plan is a function to be invoked. Executing the plan: Execute the plan and send its results to the next phase. Unification and reporting: Extract only the results that need to be reported and format them as specified. Phase 1: Transformation In this phase, we transform the given query from a representation that is easy for the user to understand into a representation that can be consumed efficiently by the query planner. The :find part of the query is transformed into a set of the given variable names: (defmacro symbol-col-to-set [coll] (set (map str coll))) The :where part of the query retains its nested vector structure. However, each of the terms in each of the clauses is replaced with a predicate according to Table 10.2. (defmacro clause-term-expr [clause-term] (cond (variable? (str clause-term)) ;variable #(= % %) (not (coll? clause-term)) ;constant `#(= % ~clause-term) (= 2 (count clause-term)) ;unary operator `#(~(first clause-term) %) (variable? (str (second clause-term)));binary operator, 1st operand is variable `#(~(first clause-term) % ~(last clause-term)) (variable? (str (last clause-term)));binary operator, 2nd operand is variable `#(~(first clause-term) ~(second clause-term) %))) For each clause, a vector with the variable names used in that clause is set as its metadata. (defmacro clause-term-meta [clause-term] (cond (coll? clause-term) (first (filter #(variable? % false) (map str clause-term))) (variable? (str clause-term) false) (str clause-term) :no-variable-in-clause nil)) We use pred-clause to iterate over the terms in each clause: (defmacro pred-clause [clause] (loop [[trm# rst-trm#] clause exprs# [] metas# []] (if trm# (recur rst-trm# (conj exprs# `(clause-term-expr ~ trm#)) (conj metas#`(clause-term-meta ~ trm#))) (with-meta exprs# {:db/variable metas#})))) Iterating over the clauses themselves happens in q-clauses-to-pred-clauses : (defmacro q-clauses-to-pred-clauses [clauses] (loop [[frst# rst#] clauses preds-vecs# []] (if-not frst# preds-vecs# (recur rst# `(conj ~preds-vecs# (pred-clause ~frst#)))))) We are once again relying on the fact that macros do not eagerly evaluate their arguments. This allows us to define a simpler API where users provide variable names as symbols (e.g., ?name ) instead of asking the user to understand the internals of the engine by providing variable names as strings ( e.g., \"?name\" ), or even worse, quoting the variable name (e.g., '?name ). At the end of this phase, our example yields the following set for the :find part: #{ ?nm ?bd } and the following structure in Table 10.3 for the :where part. (Each cell in the Predicate Clause column holds the metadata found in its neighbor at the Meta Clause column.) Query Clause Predicate Clause Meta Clause [?e :likes \"pizza\"] [#(= % %) #(= % :likes) #(= % \"pizza\")] [\"?e\" nil nil] [?e :name ?nm] [#(= % %) #(= % :name) #(= % %)] [\"?e\" nil \"?nm\"] [?e :speak \"English\"] [#(= % %) #(= % :speak) #(= % \"English\")] [\"?e\" nil nil] [?e :bday (bday-mo? ?bd)] [#(= % %) #(= % :bday) #(bday-mo? %)] [\"?e\" nil \"?bd\"] : Table 10.3 - Clauses This structure acts as the query that is executed in a later phase, once the engine decides on the right plan of execution. Phase 2: Making a Plan In this phase, we inspect the query in order to construct a good plan to produce the result it describes. In general, this will involve choosing the appropriate index (Table 10.4) and constructing a plan in the form of a function. We choose the index based on the single joining variable (that can operate on only a single kind of element). Joining variable operates on Index to use Entity IDs AVET Attribute names VEAT Attribute values EAVT : Table 10.4 - Index Selection The reasoning behind this mapping will become clearer in the next section, when we actually execute the plan produced. For now, just note that the key here is to select an index whose leaves hold the elements that the joining variable operates on. Locating the index of the joining variable is done by index-of-joining-variable : (defn index-of-joining-variable [query-clauses] (let [metas-seq (map #(:db/variable (meta %)) query-clauses) collapsing-fn (fn [accV v] (map #(when (= %1 %2) %1) accV v)) collapsed (reduce collapsing-fn metas-seq)] (first (keep-indexed #(when (variable? %2 false) %1) collapsed)))) We begin by extracting the metadata of each clause in the query. This extracted metadata is a 3-element vector; each element is either a variable name or nil. (Note that there is no more than one variable name in that vector.) Once the vector is extracted, we produce from it (by reducing it) a single value, which is either a variable name or nil. If a variable name is produced, then it appeared in all of the metadata vectors at the same index; i.e., this is the joining variable. We can thus choose to use the index relevant for this joining variable based on the mapping described above. Once the index is chosen, we construct our plan, which is a function that closes over the query and the index name and executes the operations necessary to return the query results. (defn build-query-plan [query] (let [term-ind (index-of-joining-variable query) ind-to-use (case term-ind 0 :AVET 1 :VEAT 2 :EAVT)] (partial single-index-query-plan query ind-to-use))) In our example the chosen index is the AVET index, as the joining variable acts on the entity IDs. Phase 3: Execution of the Plan We saw in the previous phase that our query plan ends by calling single-index-query-plan . This function will: Apply each predicate clause on an index (each predicate on its appropriate index level). Perform an AND operation across the results. Merge the results into a simpler data structure. (defn single-index-query-plan [query indx db] (let [q-res (query-index (indx-at db indx) query)] (bind-variables-to-query q-res (indx-at db indx)))) To better explain this process we'll demonstrate it using our exemplary query, assuming that our database holds the entities in Table 10.5. Entity ID Attribute Name Attribute Value 1 :name :likes :speak :bday USA Pizza English July 4, 1776 2 :name :likes :speak :bday France Red wine French July 14, 1789 3 :name :likes :speak :bday Canada Snow English July 1, 1867 : Table 10.5 - Example entities Now it is time to go deeper into the rabbit hole and take a look at the query-index function, where our query finally begins to yield some results: (defn query-index [index pred-clauses] (let [result-clauses (filter-index index pred-clauses) relevant-items (items-that-answer-all-conditions (map last result-clauses) (count pred-clauses)) cleaned-result-clauses (map (partial mask-path-leaf-with-items relevant-items) result-clauses)] (filter #(not-empty (last %)) cleaned-result-clauses))) This function starts by applying the predicate clauses on the previously chosen index. Each application of a predicate clause on an index returns a result clause . The main characteristics of a result are: It is built of three items, each from a different level of the index, and each passed its respective predicate. The order of items matches the index's levels structure. (Predicate clauses are always in EAV order.) The re-ordering is done when applying the index's from-eav on the predicate clause. The metadata of the predicate clause is attached to it. All of this is done in the function filter-index . (defn filter-index [index predicate-clauses] (for [pred-clause predicate-clauses :let [[lvl1-prd lvl2-prd lvl3-prd] (apply (from-eav index) pred-clause)] [k1 l2map] index ; keys and values of the first level :when (try (lvl1-prd k1) (catch Exception e false)) [k2 l3-set] l2map ; keys and values of the second level :when (try (lvl2-prd k2) (catch Exception e false)) :let [res (set (filter lvl3-prd l3-set))] ] (with-meta [k1 k2 res] (meta pred-clause)))) Assuming the query was executed on July 4th, the results of executing it on the above data are seen in Table 10.6. Result Clause Result Meta [:likes Pizza #{1}] [\"?e\" nil nil] [:name USA #{1}] [\"?e\" nil \"?nm\"] [:speak \"English\" #{1, 3}] [\"?e\" nil nil] [:bday \"July 4, 1776\" #{1}] [\"?e\" nil \"?bd\"] [:name France #{2}] [\"?e\" nil \"?nm\"] [:bday \"July 14, 1789\" #{2}] [\"?e\" nil \"?bd\"] [:name Canada #{3}] [\"?e\" nil \"?nm\"] [:bday \"July 1, 1867\" {3}] [\"?e\" nil \"?bd\"] : Table 10.6 - Query results Once we have produced all of the result clauses, we need to perform an AND operation between them. This is done by finding all of the elements that passed all the predicate clauses: (defn items-that-answer-all-conditions [items-seq num-of-conditions] (- items-seq ; take the items-seq (map vec) ; make each collection (actually a set) into a vector (reduce into []) ;reduce all the vectors into one vector (frequencies) ;count for each item in how many collections (sets) it was in (filter #( = num-of-conditions (last %))) ;items that answered all conditions (map first) ; take from the duos the items themselves (set))) ; return it as set In our example, the result of this step is a set that holds the value 1 (which is the entity ID of USA). We now have to remove the items that didn\u2019t pass all of the conditions: (defn mask-path-leaf-with-items [relevant-items path] (update-in path [2] CS/intersection relevant-items)) Finally, we remove all of the result clauses that are \"empty\" (i.e., their last item is empty). We do this in the last line of the query-index function. Our example leaves us with the items in Table 10.7. Result Clause Result Meta [:likes Pizza #{1}] [\"?e\" nil nil] [:name USA #{1}] [\"?e\" nil \"?nm\"] [:bday \"July 4, 1776\" #{1}] [\"?e\" nil \"?bd\"] [:speak \"English\" #{1}] [\"?e\" nil nil] : Table 10.7 - Filtered query results We are now ready to report the results. The result clause structure is unwieldy for this purpose, so we will convert it into an an index-like structure (map of maps)\u2014with a significant twist. To understand the twist, we must first introduce the idea of a binding pair , which is a pair that matches a variable name to its value. The variable name is the one used at the predicate clauses, and the value is the value found in the result clauses. The twist to the index structure is that now we hold a binding pair of the entity-id / attr-name / value in the location where we held an entity-id / attr-name / value in an index: (defn bind-variables-to-query [q-res index] (let [seq-res-path (mapcat (partial combine-path-and-meta (from-eav index)) q-res) res-path (map #(- %1 (partition 2)(apply (to-eav index))) seq-res-path)] (reduce #(assoc-in %1 (butlast %2) (last %2)) {} res-path))) (defn combine-path-and-meta [from-eav-fn path] (let [expanded-path [(repeat (first path)) (repeat (second path)) (last path)] meta-of-path (apply from-eav-fn (map repeat (:db/variable (meta path)))) combined-data-and-meta-path (interleave meta-of-path expanded-path)] (apply (partial map vector) combined-data-and-meta-path))) At the end of phase 3 of our example execution, we have the following structure at hand: {[1 ?e ]{ {[:likes nil] [ Pizza nil]} {[:name nil] [ USA ?nm ]} {[:speaks nil] [ English nil]} {[:bday nil] [ July 4, 1776 ?bd ]} }} Phase 4: Unify and Report At this point, we\u2019ve produced a superset of the results that the user initially asked for. In this phase, we'll extract the values that the user wants. This process is called unification : it is here that we will unify the binding pairs structure with the vector of variable names that the user defined in the :find clause of the query. (defn unify [binded-res-col needed-vars] (map (partial locate-vars-in-query-res needed-vars) binded-res-col)) Each unification step is handled by locate-vars-in-query-result , which iterates over a query result (structured as an index entry, but with binding pairs) to detect all the variables and values that the user asked for. (defn locate-vars-in-query-res [vars-set q-res] (let [[e-pair av-map] q-res e-res (resultify-bind-pair vars-set [] e-pair)] (map (partial resultify-av-pair vars-set e-res) av-map))) (defn resultify-bind-pair [vars-set accum pair] (let [[ var-name _] pair] (if (contains? vars-set var-name) (conj accum pair) accum))) (defn resultify-av-pair [vars-set accum-res av-pair] (reduce (partial resultify-bind-pair vars-set) accum-res av-pair)) At the end of this phase, the results for our example are: [( ?nm USA ) ( ?bd July 4, 1776 )] Running the Show We've finally built all of the components we need for our user-facing query mechanism, the q macro, which receives as arguments a database and a query. (defmacro q [db query] `(let [pred-clauses# (q-clauses-to-pred-clauses ~(:where query)) needed-vars# (symbol-col-to-set ~(:find query)) query-plan# (build-query-plan pred-clauses#) query-internal-res# (query-plan# ~db)] (unify query-internal-res# needed-vars#))) Summary Our journey started with a conception of a different kind of database, and ended with one that: Supports ACI transactions (durability was lost when we decided to have the data stored in-memory). Supports \"what if\" interactions. Answers time-related questions. Handles simple datalog queries that are optimized with indexes. Provides APIs for graph queries. Introduces and implements the notion of evolutionary queries. There are still many things that we could improve: We could add caching to several components to improve performance; support richer queries; and add real storage support to provide data durability, to name a few. However, our final product can do a great many things, and was implemented in 488 lines of Clojure source code, 73 of which are blank lines and 55 of which are docstrings. Finally, there's one thing that is still missing: a name. The only sensible option for an in-memory, index-optimized, query-supporting, library developer-friendly, time-aware functional database implemented in 360 lines of Clojure code is CircleDB.","title":"An Archaeology-Inspired Database"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#an-archaeology-inspired-database","text":"","title":"An Archaeology-Inspired Database"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#yoav-rubin","text":"\u200b Yoav Rubin is a Senior Software Engineer at Microsoft, and prior to that was a Research Staff Member and a Master Inventor at IBM Research. He works now in the domain of data security in the cloud, and in the past his work focused on developing cloud or web based development environments. Yoav holds an M.Sc. in Medical Research in the field of Neuroscience and B.Sc in Information Systems Engineering. He goes by @yoavrubin on Twitter, and occasionally blogs at http://yoavrubin.blogspot.com.","title":"Yoav Rubin"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#introduction","text":"Software development is often viewed as a rigorous process, where the inputs are requirements and the output is the working product. However, software developers are people, with their own perspectives and biases which color the outcome of their work. In this chapter, we will explore how a change in a common perspective affects the design and implementation of a well-studied type of software: a database. Database systems are designed to store and query data. This is something that all information workers do; however, the systems themselves were designed by computer scientists. As a result, modern database systems are highly influenced by computer scientists\u2019 definition of what data is, and what can be done with it. For example, most modern databases implement updates by overwriting old data in-place instead of appending the new data and keeping the old. This mechanism, nicknamed \"place-oriented programming\" by Rich Hickey , saves storage space but makes it impossible to retrieve the entire history of a particular record. This design decision reflects the computer scientist\u2019s perspective that \"history\" is less important than the price of its storage. If you were to instead ask an archaeologist where the old data can be found, the answer would be \"hopefully, it's just buried underneath\". (Disclaimer: My understanding of the views of a typical archaeologist is based on visiting a few museums, reading several Wikipedia articles, and watching the entire Indiana Jones series.)","title":"Introduction"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#designing-a-database-like-an-archaeologist","text":"If we were to ask our friendly archaeologist to design a database, we might expect the requirements to reflect what would be found at an excavation site: All data is found and catalogued at the site. Digging deeper will expose the state of things in times past. Artifacts found at the same layer are from the same period. Each artifact will consist of state that it accumulated in different periods. For example, a wall may have Roman symbols on it on one layer, and in a lower layer there may be Greek symbols. Both these observations are recorded as part of the wall's state. This analogy is visualized in Figure 10.1 : The entire circle is the excavation site. Each ring is a layer (here numbered from 0 to 4). Each slice is a labeled artifact (\u2018A\u2019 through \u2018E\u2019). Each artifact has a \u2018symbol\u2019 attribute (where a blank means that no update was made). Solid arrows denote a change in symbol between layers Dotted arrows are arbitrary relationships of interest between artifacts (e.g., from \u2018E\u2019 to \u2018A\u2019). Figure 10.1 - The Excavation Site If we translate the archaeologist's language into terms a database designer would use: The excavation site is a database . Each artifact is an entity with a corresponding ID . Each entity has a set of attributes , which may change over time. Each attribute has a specific value at a specific time. This may look very different from the kinds of databases you are used to working with. This design is sometimes referred to as \"functional database\", since it uses ideas from the domain of functional programming. The rest of the chapter describes how to implement such a database. Since we are building a functional database, we will be using a functional programming language called Clojure. Clojure has several qualities that make it a good implementation language for a functional database, such as out-of-the-box immutability, higher order functions, and metaprogramming facilities. But ultimately, the reason Clojure was chosen was its emphasis on clean, rigorous design, which few programming languages possess.","title":"Designing a Database Like an Archaeologist"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#laying-the-foundation","text":"Let\u2019s start by declaring the core constructs that make up our database. (defrecord Database [layers top-id curr-time]) A database consists of: Layers of entities, each with its own unique timestamp (the rings in Figure 1). A top-id value which is the next available unique ID. The time at which the database was last updated. (defrecord Layer [storage VAET AVET VEAT EAVT]) Each layer consists of: A data store for entities. Indexes that are used to speed up queries to the database. (These indexes and the meaning of their names will be explained later.) In our design, a single conceptual \u2018database\u2019 may consist of many Database instances, each of which represents a snapshot of the database at curr-time . A Layer may share the exact same entity with another Layer if the entity\u2019s state hasn\u2019t changed between the times that they represent.","title":"Laying the Foundation"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#entities","text":"Our database wouldn't be of any use without entities to store, so we define those next. As discussed before, an entity has an ID and a list of attributes; we create them using the make-entity function. (defrecord Entity [id attrs]) (defn make-entity ([] (make-entity :db/no-id-yet)) ([id] (Entity. id {}))) Note that if no ID is given, the entity\u2019s ID is set to be :db/no-id-yet , which means that something else is responsible for giving it an ID. We\u2019ll see how that works later.","title":"Entities"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#attributes","text":"Each attribute consists of its name, value, and the timestamps of its most recent update as well as the one before that. Each attribute also has two fields that describe its type and cardinality . In the case that an attribute is used to represent a relationship to another entity, its type will be :db/ref and its value will be the ID of the related entity. This simple type system also acts as an extension point. Users are free to define their own types and leverage them to provide additional semantics for their data. An attribute's cardinality specifies whether the attribute represents a single value or a set of values. We use this field to determine the set of operations that are permitted on this attribute. Creating an attribute is done using the make-attr function. (defrecord Attr [name value ts prev-ts]) (defn make-attr ([name value type ; these ones are required {:keys [cardinality] :or {cardinality :db/single}} ] {:pre [(contains? #{:db/single :db/multiple} cardinality)]} (with-meta (Attr. name value -1 -1) {:type type :cardinality cardinality}))) There are a couple of interesting patterns used in this constructor function: We use Clojure\u2019s Design by Contract pattern to validate that the cardinality parameter is a permissible value. We use Clojure\u2019s destructuring mechanism to provide a default value of :db/single if one is not given. We use Clojure\u2019s metadata capabilities to distinguish between an attribute's data (name, value and timestamps) and its metadata (type and cardinality). In Clojure, metadata handling is done using the functions with-meta (to set) and meta (to read). Attributes only have meaning if they are part of an entity. We make this connection with the add-attr function, which adds a given attribute to an entity's attribute map (called :attrs ). Note that instead of using the attribute\u2019s name directly, we first convert it into a keyword to adhere to Clojure\u2019s idiomatic usage of maps. (defn add-attr [ent attr] (let [attr-id (keyword (:name attr))] (assoc-in ent [:attrs attr-id] attr)))","title":"Attributes"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#storage","text":"So far we have talked a lot about what we are going to store, without thinking about where we are going to store it. In this chapter, we resort to the simplest storage mechanism: storing the data in memory. This is certainly not reliable, but it simplifies development and debugging and allows us to focus on more interesting parts of the program. We will access the storage via a simple protocol , which will make it possible to define additional storage providers for a database owner to select from. (defprotocol Storage (get-entity [storage e-id] ) (write-entity [storage entity]) (drop-entity [storage entity])) And here's our in-memory implementation of the protocol, which uses a map as the store: (defrecord InMemory [] Storage (get-entity [storage e-id] (e-id storage)) (write-entity [storage entity] (assoc storage (:id entity) entity)) (drop-entity [storage entity] (dissoc storage (:id entity))))","title":"Storage"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#indexing-the-data","text":"Now that we've defined the basic elements of our database, we can start thinking about how we're going to query it. By virtue of how we've structured our data, any query is necessarily going to be interested in at least one of an entity's ID, and the name and value of some of its attributes. This triplet of (entity-id, attribute-name, attribute-value) is important enough to our query process that we give it an explicit name: a datom . Datoms are important because they represent facts, and our database accumulates facts. If you've used a database system before, you are probably already familiar with the concept of an index , which is a supporting data structure that consumes extra space in order to decrease the average query time. In our database, an index is a three-leveled structure which stores the components of a datom in a specific order. Each index derives its name from the order it stores the datom's components in. For example, let\u2019s look at at the index sketched in Figure 10.2 : The first level stores entity-IDs The second level stores the related attribute-names The third level stores the related value This index is named EAVT, as the top level map holds Entity IDs, the second level holds Attribute names, and the leaves hold Values. The \"T\" comes from the fact that each layer in the database has its own indexes, hence the index itself is relevant for a specific Time. Figure 10.2 - EAVT Figure 10.3 shows an index that would be called AVET since: The first level map holds attribute-name. The second level map holds the values (of the attributes). The third level set holds the entity-IDs (of the entities whose attribute is at the first level). Figure 10.3 - AVET Our indexes are implemented as a map of maps, where the keys of the root map act as the first level, each such key points to a map whose keys act as the index\u2019s second-level and the values are the index\u2019s third level. Each element in the third level is a set, holding the leaves of the index. Each index stores the components of a datom as some permutation of its canonical 'EAV' ordering (entity_id, attribute-name, attribute-value). However, when we are working with datoms outside of the index, we expect them to be in canonical format. We thus provide each index with functions from-eav and to-eav to convert to and from these orderings. In most database systems, indexes are an optional component; for example, in an RDBMS (Relational Database Management System) like PostgreSQL or MySQL, you will choose to add indexes only to certain columns in a table. We provide each index with a usage-pred function that determines for an attribute whether it should be included in this index or not. (defn make-index [from-eav to-eav usage-pred] (with-meta {} {:from-eav from-eav :to-eav to-eav :usage-pred usage-pred})) (defn from-eav [index] (:from-eav (meta index))) (defn to-eav [index] (:to-eav (meta index))) (defn usage-pred [index] (:usage-pred (meta index))) In our database there are four indexes: EAVT (see Figure 10.2 ), AVET (see Figure 10.3 ), VEAT and VAET. We can access these as a vector of values returned from the indexes function. (defn indexes[] [:VAET :AVET :VEAT :EAVT]) To demonstrate how all of this comes together, the result of indexing the following five entities is visualized in Table 10.1. Julius Caesar (also known as JC) lives in Rome Brutus (also known as B) lives in Rome Cleopatra (also known as Cleo) lives in Egypt Rome\u2019s river is the Tiber Egypt\u2019s river is the Nile EAVT index AVET index JC \u21d2 {lives-in \u21d2 {Rome}} B \u21d2 {lives-in \u21d2 {Rome}} Cleo \u21d2 {lives-in \u21d2 {Egypt}} Rome \u21d2 {river \u21d2 {Tiber}} Egypt \u21d2 {river \u21d2 {Nile}} lives-in \u21d2 {Rome \u21d2 {JC, B}} {Egypt \u21d2 {Cleo}} river \u21d2 {Rome \u21d2 {Tiber}} {Egypt \u21d2 {Nile}} VEAT index VAET index Rome \u21d2 {JC \u21d2 {lives-in}} {B \u21d2 {lives-in}} Egypt \u21d2 {Cleo \u21d2 {lives-in}} Tiber \u21d2 {Rome \u21d2 {river}} Nile \u21d2 {Egypt \u21d2 {river}} Rome \u21d2 {lives-in \u21d2 {JC, B}} Egypt \u21d2 {lives-in \u21d2 {Cleo}} Tiber \u21d2 {river \u21d2 {Rome}} Nile \u21d2 {river \u21d2 {Egypt}} : Table 10.1 - Indexes","title":"Indexing the Data"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#database","text":"We now have all the components we need to construct our database. Initializing our database means: creating an initial empty layer with no data creating a set of empty indexes setting its top-id and curr-time to be 0 (defn ref? [attr] (= :db/ref (:type (meta attr)))) (defn always[ more] true) (defn make-db [] (atom (Database. [(Layer. (fdb.storage.InMemory.) ; storage (make-index #(vector %3 %2 %1) #(vector %3 %2 %1) #(ref? %));VAET (make-index #(vector %2 %3 %1) #(vector %3 %1 %2) always);AVET (make-index #(vector %3 %1 %2) #(vector %2 %3 %1) always);VEAT (make-index #(vector %1 %2 %3) #(vector %1 %2 %3) always);EAVT )] 0 0))) There is one snag, though: all collections in Clojure are immutable. Since write operations are pretty critical in a database, we define our structure to be an Atom , which is a Clojure reference type that provides the capability of atomic writes. You may be wondering why we use the always function for the AVET, VEAT and EAVT indexes, and the ref? predicate for the VAET index. This is because these indexes are used in different scenarios, which we\u2019ll see later when we explore queries in depth.","title":"Database"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#basic-accessors","text":"Before we can build complex querying facilities for our database, we need to provide a lower-level API that different parts of the system can use to retrieve the components we've built by their associated identifiers from any point in time. Consumers of the database can also use this API; however, it is more likely that they will be using the more fully-featured components built on top of it. This lower-level API is composed of the following four accessor functions: (defn entity-at ([db ent-id] (entity-at db (:curr-time db) ent-id)) ([db ts ent-id] (get-entity (get-in db [:layers ts :storage]) ent-id))) (defn attr-at ([db ent-id attr-name] (attr-at db ent-id attr-name (:curr-time db))) ([db ent-id attr-name ts] (get-in (entity-at db ts ent-id) [:attrs attr-name]))) (defn value-of-at ([db ent-id attr-name] (:value (attr-at db ent-id attr-name))) ([db ent-id attr-name ts] (:value (attr-at db ent-id attr-name ts)))) (defn indx-at ([db kind] (indx-at db kind (:curr-time db))) ([db kind ts] (kind ((:layers db) ts)))) Since we treat our database just like any other value, each of these functions take a database as an argument. Each element is retrieved by its associated identifier, and optionally the timestamp of interest. This timestamp is used to find the corresponding layer that our lookup should be applied to.","title":"Basic Accessors"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#evolution","text":"A first usage of the basic accessors is to provide a \"read-into-the-past\" API. This is possible as, in our database, an update operation is done by appending a new layer (as opposed to overwriting). Therefore we can use the prev-ts property to look at the attribute at that layer, and continue looking deeper into history to observe how the attribute\u2019s value evolved throughout time. The function evolution-of does exactly that. It returns a sequence of pairs, each consisting of the timestamp and value of an attribute\u2019s update. (defn evolution-of [db ent-id attr-name] (loop [res [] ts (:curr-time db)] (if (= -1 ts) (reverse res) (let [attr (attr-at db ent-id attr-name ts)] (recur (conj res {(:ts attr) (:value attr)}) (:prev-ts attr))))))","title":"Evolution"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#data-behavior-and-life-cycle","text":"So far, our discussion has focused on the structure of our data: what the core components are and how they are aggregated together. It's time to explore the dynamics of our system: how data is changed over time through the add--update--remove data lifecycle . As we've already discussed, data in an archaeologist's world never actually changes. Once it is created, it exists forever and can only be hidden from the world by data in a newer layer. The term \"hidden\" is crucial here. Older data does not \"disappear\"\u2014it is buried, and can be revealed again by exposing an older layer. Conversely, updating data means obscuring the old by adding a new layer on top of it with something else. We can thus \"delete\" data by adding a layer of \"nothing\" on top of it. This means that when we talk about data lifecycle, we are really talking about adding layers to our data over time.","title":"Data Behavior and Life Cycle"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#the-bare-necessities","text":"The data lifecycle consists of three basic operations: adding an entity with the add-entity function removing an entity with the remove-entity function updating an entity with the update-entity function Remember that, even though these functions provide the illusion of mutability, all that we are really doing in each case is adding another layer to the data. Also, since we are using Clojure's persistent data structures, from the caller's perspective we pay the same price for these operations as for an \"in-place\" change (i.e., negligible performance overhead), while maintaining immutability for all other users of the data structure.","title":"The Bare Necessities"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#adding-an-entity","text":"Adding an entity requires us to do three things: prepare the entity for addition (by giving it an ID and a timestamp) place the entity in storage update indexes as necessary These steps are performed in the add-entity function. (defn add-entity [db ent] (let [[fixed-ent next-top-id] (fix-new-entity db ent) layer-with-updated-storage (update-in (last (:layers db)) [:storage] write-entity fixed-ent) add-fn (partial add-entity-to-index fixed-ent) new-layer (reduce add-fn layer-with-updated-storage (indexes))] (assoc db :layers (conj (:layers db) new-layer) :top-id next-top-id))) Preparing an entity is done by calling the fix-new-entity function and its auxiliary functions next-id , next-ts and update-creation-ts . These latter two helper functions are responsible for finding the next timestamp of the database (done by next-ts ), and updating the creation timestamp of the given entity (done by update-creation-ts ). Updating the creation timestamp of an entity means going over the attributes of the entity and updating their :ts fields. (defn- next-ts [db] (inc (:curr-time db))) (defn- update-creation-ts [ent ts-val] (reduce #(assoc-in %1 [:attrs %2 :ts ] ts-val) ent (keys (:attrs ent)))) (defn- next-id [db ent] (let [top-id (:top-id db) ent-id (:id ent) increased-id (inc top-id)] (if (= ent-id :db/no-id-yet) [(keyword (str increased-id)) increased-id] [ent-id top-id]))) (defn- fix-new-entity [db ent] (let [[ent-id next-top-id] (next-id db ent) new-ts (next-ts db)] [(update-creation-ts (assoc ent :id ent-id) new-ts) next-top-id])) To add the entity to storage, we locate the most recent layer in the database and update the storage in that layer with a new layer, the results of which are stored in layer-with-updated-storage . Finally, we must update the indexes. This means, for each of the indexes (done by the combination of reduce and the partial -ed add-entity-to-index at the add-entity function): Find the attributes that should be indexed (see the combination of filter with the index\u2019s usage-pred that operates on the attributes in add-entity-to-index ) Build an index-path from the the entity\u2019s ID (see the combination of the partial -ed update-entry-in-index with from-eav at the update-attr-in-index function) Add that path to the index (see the update-entry-in-index function) (defn- add-entity-to-index [ent layer ind-name] (let [ent-id (:id ent) index (ind-name layer) all-attrs (vals (:attrs ent)) relevant-attrs (filter #((usage-pred index) %) all-attrs) add-in-index-fn (fn [ind attr] (update-attr-in-index ind ent-id (:name attr) (:value attr) :db/add))] (assoc layer ind-name (reduce add-in-index-fn index relevant-attrs)))) (defn- update-attr-in-index [index ent-id attr-name target-val operation] (let [colled-target-val (collify target-val) update-entry-fn (fn [ind vl] (update-entry-in-index ind ((from-eav index) ent-id attr-name vl) operation))] (reduce update-entry-fn index colled-target-val))) (defn- update-entry-in-index [index path operation] (let [update-path (butlast path) update-value (last path) to-be-updated-set (get-in index update-path #{})] (assoc-in index update-path (conj to-be-updated-set update-value)))) All of these components are added as a new layer to the given database. All that\u2019s left is to update the database\u2019s timestamp and top-id fields. That last step occurs on the last line of add-entity , which also returns the updated database. We also provide an add-entities convenience function that adds multiple entities to the database in one call by iteratively applying add-entity . (defn add-entities [db ents-seq] (reduce add-entity db ents-seq))","title":"Adding an Entity"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#removing-an-entity","text":"Removing an entity from our database means adding a layer in which it does not exist. To do this, we need to: Remove the entity itself Update any attributes of other entities that reference it Clear the entity from our indexes This \"construct-without\" process is executed by the remove-entity function, which looks very similar to add-entity : (defn remove-entity [db ent-id] (let [ent (entity-at db ent-id) layer (remove-back-refs db ent-id (last (:layers db))) no-ref-layer (update-in layer [:VAET] dissoc ent-id) no-ent-layer (assoc no-ref-layer :storage (drop-entity (:storage no-ref-layer) ent)) new-layer (reduce (partial remove-entity-from-index ent) no-ent-layer (indexes))] (assoc db :layers (conj (:layers db) new-layer)))) Reference removal is done by the remove-back-refs function: (defn- remove-back-refs [db e-id layer] (let [reffing-datoms (reffing-to e-id layer) remove-fn (fn[d [e a]] (update-entity db e a e-id :db/remove)) clean-db (reduce remove-fn db reffing-datoms)] (last (:layers clean-db)))) We begin by using reffing-datoms-to to find all entities that reference ours in the given layer; it returns a sequence of triplets that contain the ID of the referencing entity, as well as the attribute name and the ID of the removed entity. (defn- reffing-to [e-id layer] (let [vaet (:VAET layer)] (for [[attr-name reffing-set] (e-id vaet) reffing reffing-set] [reffing attr-name]))) We then apply update-entity to each triplet to update the attributes that reference our removed entity. (We'll explore how update-entity works in the next section.) The last step of remove-back-refs is to clear the reference itself from our indexes, and more specifically from the VAET index, since it is the only index that stores reference information.","title":"Removing an Entity"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#updating-an-entity","text":"At its essence, an update is the modification of an entity\u2019s attribute\u2019s value. The modification process itself depends on the cardinality of the attribute: an attribute with cardinality :db/multiple holds a set of values, so we must allow items to be added to or removed from this set, or the set to be replaced entirely. An attribute with cardinality :db/single holds a single value, and thus only allows replacement. Since we also have indexes that provide lookups directly on attributes and their values, these will also have to be updated. As with add-entity and remove-entity , we won't actually be modifying our entity in place, but will instead add a new layer which contains the updated entity. (defn update-entity ([db ent-id attr-name new-val] (update-entity db ent-id attr-name new-val :db/reset-to)) ([db ent-id attr-name new-val operation] (let [update-ts (next-ts db) layer (last (:layers db)) attr (attr-at db ent-id attr-name) updated-attr (update-attr attr new-val update-ts operation) fully-updated-layer (update-layer layer ent-id attr updated-attr new-val operation)] (update-in db [:layers] conj fully-updated-layer)))) To update an attribute, we locate it with attr-at and then use update-attr to perform the actual update. (defn- update-attr [attr new-val new-ts operation] {:pre [(if (single? attr) (contains? #{:db/reset-to :db/remove} operation) (contains? #{:db/reset-to :db/add :db/remove} operation))]} (- attr (update-attr-modification-time new-ts) (update-attr-value new-val operation))) We use two helper functions to perform the update. update-attr-modification-time updates timestamps to reflect the creation of the black arrows in Figure 1: (defn- update-attr-modification-time [attr new-ts] (assoc attr :ts new-ts :prev-ts (:ts attr))) update-attr-value actually updates the value: (defn- update-attr-value [attr value operation] (cond (single? attr) (assoc attr :value #{value}) ; now we're talking about an attribute of multiple values (= :db/reset-to operation) (assoc attr :value value) (= :db/add operation) (assoc attr :value (CS/union (:value attr) value)) (= :db/remove operation) (assoc attr :value (CS/difference (:value attr) value)))) All that remains is to remove the old value from the indexes and add the new one to them, and then construct the new layer with all of our updated components. Luckily, we can leverage the code we wrote for adding and removing entities to do this.","title":"Updating an Entity"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#transactions","text":"Each of the operations in our low-level API acts on a single entity. However, nearly all databases have a way for users to do multiple operations as a single transaction . This means: The batch of operations is viewed as a single atomic operation, so all of the operations either succeed together or fail together. The database is in a valid state before and after the transaction. The batch update appears to be isolated ; other queries should never see a database state in which only some of the operations have been applied. We can fulfill these requirements through an interface that consumes a database and a set of operations to be performed, and produces a database whose state reflects the given changes. All of the changes submitted in the batch should be applied through the addition of a single layer. However, we have a problem: All of the functions we wrote in our low-level API add a new layer to the database. If we were to perform a batch with n operations, we would thus see n new layers added, when what we would really like is to have exactly one new layer. The key here is that the layer we want is the top layer that would be produced by performing those updates in sequence. Therefore, the solution is to execute the user\u2019s operations one after another, each creating a new layer. When the last layer is created, we take only that top layer and place it on the initial database (leaving all the intermediate layers to pine for the fjords). Only after we've done all this will we update the database's timestamp. All this is done in the transact-on-db function, which receives the initial value of the database and the batch of operations to perform, and returns its updated value. (defn transact-on-db [initial-db ops] (loop [[op rst-ops] ops transacted initial-db] (if op (recur rst-ops (apply (first op) transacted (rest op))) (let [initial-layer (:layers initial-db) new-layer (last (:layers transacted))] (assoc initial-db :layers (conj initial-layer new-layer) :curr-time (next-ts initial-db) :top-id (:top-id transacted)))))) Note here that we used the term value , meaning that only the caller to this function is exposed to the updated state; all other users of the database are unaware of this change (as a database is a value, and therefore cannot change). In order to have a system where users can be exposed to state changes performed by others, users do not interact directly with the database, but rather refer to it using another level of indirection. This additional level is implemented using Clojure's Atom , a reference type. Here we leverage the main three key features of an Atom , which are: It references a value. It is possible to update the referencing of the Atom to another value by executing a transaction (using Clojure's Software Transaction Memory capabilities). The transaction accepts an Atom and a function. That function operates on the value of the Atom and returns a new value. After the execution of the transaction, the Atom references the value that was returned from the function. Getting to the value that is referenced by the Atom is done by dereferencing it, which returns the state of that Atom at that time. In between Clojure's Atom and the work done in transact-on-db , there's still a gap to be bridged; namely, to invoke the transaction with the right inputs. To have the simplest and clearest APIs, we would like users to just provide the Atom and the list of operations, and have the database transform the user input into a proper transaction. That transformation occurs in the following transaction call chain: transact \u2192 _transact \u2192 swap! \u2192 transact-on-db Users call transact with the Atom (i.e., the connection) and the operations to perform, which relays its input to _transact , adding to it the name of the function that updates the Atom ( swap! ). (defmacro transact [db-conn txs] `(_transact ~db-conn swap! ~@txs)) _transact prepares the call to swap! . It does so by creating a list that begins with swap! , followed by the Atom , then the transact-on-db symbol and the batch of operations. (defmacro _transact [db op txs] (when txs (loop [[frst-tx# rst-tx#] txs res# [op db `transact-on-db] accum-txs# []] (if frst-tx# (recur rst-tx# res# (conj accum-txs# (vec frst-tx#))) (list* (conj res# accum-txs#)))))) swap! invokes transact-on-db within a transaction (with the previously prepared arguments), and transact-on-db creates the new state of the database and returns it. At this point we can see that with few minor tweaks, we can also provide a way to ask \"what if\" questions. This can be done by replacing swap! with a function that would not make any change to the system. This scenario is implemented with the what-if call chain: what-if \u2192 _transact \u2192 _what-if \u2192 transact-on-db The user calls what-if with the database value and the operations to perform. It then relays these inputs to _transact , adding to them a function that mimics swap! 's APIs, without its effect (callled _what-if ). (defmacro what-if [db ops] `(_transact ~db _what-if ~@ops)) _transact prepares the call to _what-if . It does so by creating a list that begins with _what-if , followed by the database, then the transact-on-db symbol and the batch of operations. _what-if invokes transact-on-db , just like swap! does in the transaction scenario, but does not inflict any change on the system. (defn- _what-if [db f txs] (f db txs)) Note that we are not using functions, but macros. The reason for using macros here is that arguments to macros do not get evaluated as the call happens; this allows us to offer a cleaner API design where the user provides the operations structured in the same way that any function call is structured in Clojure. The above process can be seen in the following examples. For Transaction, the user call: (transact db-conn (add-entity e1) (update-entity e2 atr2 val2 :db/add)) changes into: (_transact db-conn swap! (add-entity e1) (update-entity e2 atr2 val2 :db/add)) which becomes: (swap! db-conn transact-on-db [[add-entity e1][update-entity e2 atr2 val2 :db/add]]) For what-if, the user call: (what-if my-db (add-entity e3) (remove-entity e4)) changes into: (_transact my-db _what-if (add-entity e3) (remove-entity e4)) then: (_what-if my-db transact-on-db [[add-entity e3] [remove-entity e4]]) and eventually: (transact-on-db my-db [[add-entity e3] [remove-entity e4]])","title":"Transactions"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#insight-extraction-as-libraries","text":"At this point we have the core functionality of the database in place, and it is time to add its raison d'\u00eatre : insights extraction. The architecture approach we used here is to allow adding these capabilities as libraries, as different usages of the database would need different such mechanisms.","title":"Insight Extraction as Libraries"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#graph-traversal","text":"A reference connection between entities is created when an entity\u2019s attribute\u2019s type is :db/ref , which means that the value of that attribute is an ID of another entity. When a referring entity is added to the database, the reference is indexed at the VAET index. The information found in the VAET index can be leveraged to extract all the incoming links to an entity. This is done in the incoming-refs function, which collects all the leaves that are reachable from the entity at that index: (defn incoming-refs [db ts ent-id ref-names] (let [vaet (indx-at db :VAET ts) all-attr-map (vaet ent-id) filtered-map (if ref-names (select-keys ref-names all-attr-map) all-attr-map)] (reduce into #{} (vals filtered-map)))) We can also go through all of a given entity\u2019s attributes and collect all the values of attributes of type :db/ref , and by that extract all the outgoing references from that entity. This is done by the outgoing-refs function. (defn outgoing-refs [db ts ent-id ref-names] (let [val-filter-fn (if ref-names #(vals (select-keys ref-names %)) vals)] (if-not ent-id [] (- (entity-at db ts ent-id) (:attrs) (val-filter-fn) (filter ref?) (mapcat :value))))) These two functions act as the basic building blocks for any graph traversal operation, as they are the ones that raise the level of abstraction from entities and attributes to nodes and links in a graph. Once we have the ability to look at our database as a graph, we can provide various graph traversing and querying APIs. We leave this as a solved exercise to the reader; one solution can be found in the chapter's source code (see graph.clj ).","title":"Graph Traversal"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#querying-the-database","text":"The second library we present provides querying capabilities, which is the main concern of this section. A database is not very useful to its users without a powerful query mechanism. This feature is usually exposed to users through a query language that is used to declaratively specify the set of data of interest. Our data model is based on accumulation of facts (i.e., datoms) over time. For this model, a natural place to look for the right query language is logic programming . A commonly used query language influenced by logic programming is Datalog which, in addition to being well-suited for our data model, has a very elegant adaptation to Clojure\u2019s syntax. Our query engine will implement a subset of the Datalog language from the Datomic database .","title":"Querying the Database"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#query-language","text":"Let's look at an example query in our proposed language. This query asks: \"What are the names and birthdays of entities who like pizza, speak English, and who have a birthday this month?\" { :find [?nm ?bd ] :where [ [?e :likes pizza ] [?e :name ?nm] [?e :speak English ] [?e :bday (bday-mo? ?bd)]]}","title":"Query Language"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#syntax","text":"We use the syntax of Clojure\u2019s data literals directly to provide the basic syntax for our queries. This allows us to avoid having to write a specialized parser, while still providing a form that is familiar and easily readable to programmers familiar with Clojure. A query is a map with two items: An item with :where as a key, and with a rule as a value. A rule is a vector of clauses , and a clause is a vector composed of three predicates , each of which operates on a different component of a datom. In the example above, [?e :likes \"pizza\"] is a clause. This :where item defines a rule that acts as a filter on datoms in our database (like a SQL WHERE clause.) An item with :find as a key, and with a vector as a value. The vector defines which components of the selected datom should be projected into the results (like a SQL SELECT clause.) The description above omits a crucial requirement: how to make different clauses sync on a value (i.e., make a join operation between them), and how to structure the found values in the output (specified by the :find part). We fulfill both of these requirements using variables , which are denoted with a leading ? . The only exception to this definition is the \"don't care\" variable _ (underscore). A clause in a query is composed of three predicates; Table 10.2 defines what can act as a predicate in our query language. Name Meaning Example Constant Is the value of the item in the datom equal to the constant? :likes Variable Bind the value of the item in the datom to the variable and return true. ?e Don\u2019t-care Always returns true. _ Unary operator Unary operation that takes a variable as its operand. Bind the datom's item's value to the variable (unless it's an '_'). Replace the variable with the value of the item in the datom. Return the application of the operation. (bday-mo? _) Binary operator A binary operation that must have a variable as one of its operands. Bind the datom's item's value to the variable (unless it's an '_'). Replace the variable with the value of the item in the datom. Return the result of the operation. ( ?age 20) : Table 10.2 - Predicates","title":"Syntax"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#limitations-of-our-query-language","text":"Engineering is all about managing tradeoffs, and designing our query engine is no different. In our case, the main tradeoff we must address is feature-richness versus complexity. Resolving this tradeoff requires us to look at common use-cases of the system, and from there deciding what limitations would be acceptable. In our database, we decided to build a query engine with the following limitations: Users cannot define logical operations between the clauses; they are always \u2018ANDed\u2019 together. (This can be worked around by using unary or binary predicates.) If there is more than one clause in a query, there must be one variable that is found in all of the clauses of that query. This variable acts as a joining variable. This limitation simplifies the query optimizer. A query is only executed on a single database. While these design decisions result in a query language that is less rich than Datalog, we are still able to support many types of simple but useful queries.","title":"Limitations of our Query Language"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#query-engine-design","text":"While our query language allows the user to specify what they want to access, it hides the details of how this will be accomplished. The query engine is the database component responsible for yielding the data for a given query. This involves four steps: Transformation to internal representation: Transform the query from its textual form into a data structure that is consumed by the query planner. Building a query plan: Determine an efficient plan for yielding the results of the given query. In our case, a query plan is a function to be invoked. Executing the plan: Execute the plan and send its results to the next phase. Unification and reporting: Extract only the results that need to be reported and format them as specified.","title":"Query Engine Design"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#phase-1-transformation","text":"In this phase, we transform the given query from a representation that is easy for the user to understand into a representation that can be consumed efficiently by the query planner. The :find part of the query is transformed into a set of the given variable names: (defmacro symbol-col-to-set [coll] (set (map str coll))) The :where part of the query retains its nested vector structure. However, each of the terms in each of the clauses is replaced with a predicate according to Table 10.2. (defmacro clause-term-expr [clause-term] (cond (variable? (str clause-term)) ;variable #(= % %) (not (coll? clause-term)) ;constant `#(= % ~clause-term) (= 2 (count clause-term)) ;unary operator `#(~(first clause-term) %) (variable? (str (second clause-term)));binary operator, 1st operand is variable `#(~(first clause-term) % ~(last clause-term)) (variable? (str (last clause-term)));binary operator, 2nd operand is variable `#(~(first clause-term) ~(second clause-term) %))) For each clause, a vector with the variable names used in that clause is set as its metadata. (defmacro clause-term-meta [clause-term] (cond (coll? clause-term) (first (filter #(variable? % false) (map str clause-term))) (variable? (str clause-term) false) (str clause-term) :no-variable-in-clause nil)) We use pred-clause to iterate over the terms in each clause: (defmacro pred-clause [clause] (loop [[trm# rst-trm#] clause exprs# [] metas# []] (if trm# (recur rst-trm# (conj exprs# `(clause-term-expr ~ trm#)) (conj metas#`(clause-term-meta ~ trm#))) (with-meta exprs# {:db/variable metas#})))) Iterating over the clauses themselves happens in q-clauses-to-pred-clauses : (defmacro q-clauses-to-pred-clauses [clauses] (loop [[frst# rst#] clauses preds-vecs# []] (if-not frst# preds-vecs# (recur rst# `(conj ~preds-vecs# (pred-clause ~frst#)))))) We are once again relying on the fact that macros do not eagerly evaluate their arguments. This allows us to define a simpler API where users provide variable names as symbols (e.g., ?name ) instead of asking the user to understand the internals of the engine by providing variable names as strings ( e.g., \"?name\" ), or even worse, quoting the variable name (e.g., '?name ). At the end of this phase, our example yields the following set for the :find part: #{ ?nm ?bd } and the following structure in Table 10.3 for the :where part. (Each cell in the Predicate Clause column holds the metadata found in its neighbor at the Meta Clause column.) Query Clause Predicate Clause Meta Clause [?e :likes \"pizza\"] [#(= % %) #(= % :likes) #(= % \"pizza\")] [\"?e\" nil nil] [?e :name ?nm] [#(= % %) #(= % :name) #(= % %)] [\"?e\" nil \"?nm\"] [?e :speak \"English\"] [#(= % %) #(= % :speak) #(= % \"English\")] [\"?e\" nil nil] [?e :bday (bday-mo? ?bd)] [#(= % %) #(= % :bday) #(bday-mo? %)] [\"?e\" nil \"?bd\"] : Table 10.3 - Clauses This structure acts as the query that is executed in a later phase, once the engine decides on the right plan of execution.","title":"Phase 1: Transformation"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#phase-2-making-a-plan","text":"In this phase, we inspect the query in order to construct a good plan to produce the result it describes. In general, this will involve choosing the appropriate index (Table 10.4) and constructing a plan in the form of a function. We choose the index based on the single joining variable (that can operate on only a single kind of element). Joining variable operates on Index to use Entity IDs AVET Attribute names VEAT Attribute values EAVT : Table 10.4 - Index Selection The reasoning behind this mapping will become clearer in the next section, when we actually execute the plan produced. For now, just note that the key here is to select an index whose leaves hold the elements that the joining variable operates on. Locating the index of the joining variable is done by index-of-joining-variable : (defn index-of-joining-variable [query-clauses] (let [metas-seq (map #(:db/variable (meta %)) query-clauses) collapsing-fn (fn [accV v] (map #(when (= %1 %2) %1) accV v)) collapsed (reduce collapsing-fn metas-seq)] (first (keep-indexed #(when (variable? %2 false) %1) collapsed)))) We begin by extracting the metadata of each clause in the query. This extracted metadata is a 3-element vector; each element is either a variable name or nil. (Note that there is no more than one variable name in that vector.) Once the vector is extracted, we produce from it (by reducing it) a single value, which is either a variable name or nil. If a variable name is produced, then it appeared in all of the metadata vectors at the same index; i.e., this is the joining variable. We can thus choose to use the index relevant for this joining variable based on the mapping described above. Once the index is chosen, we construct our plan, which is a function that closes over the query and the index name and executes the operations necessary to return the query results. (defn build-query-plan [query] (let [term-ind (index-of-joining-variable query) ind-to-use (case term-ind 0 :AVET 1 :VEAT 2 :EAVT)] (partial single-index-query-plan query ind-to-use))) In our example the chosen index is the AVET index, as the joining variable acts on the entity IDs.","title":"Phase 2: Making a Plan"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#phase-3-execution-of-the-plan","text":"We saw in the previous phase that our query plan ends by calling single-index-query-plan . This function will: Apply each predicate clause on an index (each predicate on its appropriate index level). Perform an AND operation across the results. Merge the results into a simpler data structure. (defn single-index-query-plan [query indx db] (let [q-res (query-index (indx-at db indx) query)] (bind-variables-to-query q-res (indx-at db indx)))) To better explain this process we'll demonstrate it using our exemplary query, assuming that our database holds the entities in Table 10.5. Entity ID Attribute Name Attribute Value 1 :name :likes :speak :bday USA Pizza English July 4, 1776 2 :name :likes :speak :bday France Red wine French July 14, 1789 3 :name :likes :speak :bday Canada Snow English July 1, 1867 : Table 10.5 - Example entities Now it is time to go deeper into the rabbit hole and take a look at the query-index function, where our query finally begins to yield some results: (defn query-index [index pred-clauses] (let [result-clauses (filter-index index pred-clauses) relevant-items (items-that-answer-all-conditions (map last result-clauses) (count pred-clauses)) cleaned-result-clauses (map (partial mask-path-leaf-with-items relevant-items) result-clauses)] (filter #(not-empty (last %)) cleaned-result-clauses))) This function starts by applying the predicate clauses on the previously chosen index. Each application of a predicate clause on an index returns a result clause . The main characteristics of a result are: It is built of three items, each from a different level of the index, and each passed its respective predicate. The order of items matches the index's levels structure. (Predicate clauses are always in EAV order.) The re-ordering is done when applying the index's from-eav on the predicate clause. The metadata of the predicate clause is attached to it. All of this is done in the function filter-index . (defn filter-index [index predicate-clauses] (for [pred-clause predicate-clauses :let [[lvl1-prd lvl2-prd lvl3-prd] (apply (from-eav index) pred-clause)] [k1 l2map] index ; keys and values of the first level :when (try (lvl1-prd k1) (catch Exception e false)) [k2 l3-set] l2map ; keys and values of the second level :when (try (lvl2-prd k2) (catch Exception e false)) :let [res (set (filter lvl3-prd l3-set))] ] (with-meta [k1 k2 res] (meta pred-clause)))) Assuming the query was executed on July 4th, the results of executing it on the above data are seen in Table 10.6. Result Clause Result Meta [:likes Pizza #{1}] [\"?e\" nil nil] [:name USA #{1}] [\"?e\" nil \"?nm\"] [:speak \"English\" #{1, 3}] [\"?e\" nil nil] [:bday \"July 4, 1776\" #{1}] [\"?e\" nil \"?bd\"] [:name France #{2}] [\"?e\" nil \"?nm\"] [:bday \"July 14, 1789\" #{2}] [\"?e\" nil \"?bd\"] [:name Canada #{3}] [\"?e\" nil \"?nm\"] [:bday \"July 1, 1867\" {3}] [\"?e\" nil \"?bd\"] : Table 10.6 - Query results Once we have produced all of the result clauses, we need to perform an AND operation between them. This is done by finding all of the elements that passed all the predicate clauses: (defn items-that-answer-all-conditions [items-seq num-of-conditions] (- items-seq ; take the items-seq (map vec) ; make each collection (actually a set) into a vector (reduce into []) ;reduce all the vectors into one vector (frequencies) ;count for each item in how many collections (sets) it was in (filter #( = num-of-conditions (last %))) ;items that answered all conditions (map first) ; take from the duos the items themselves (set))) ; return it as set In our example, the result of this step is a set that holds the value 1 (which is the entity ID of USA). We now have to remove the items that didn\u2019t pass all of the conditions: (defn mask-path-leaf-with-items [relevant-items path] (update-in path [2] CS/intersection relevant-items)) Finally, we remove all of the result clauses that are \"empty\" (i.e., their last item is empty). We do this in the last line of the query-index function. Our example leaves us with the items in Table 10.7. Result Clause Result Meta [:likes Pizza #{1}] [\"?e\" nil nil] [:name USA #{1}] [\"?e\" nil \"?nm\"] [:bday \"July 4, 1776\" #{1}] [\"?e\" nil \"?bd\"] [:speak \"English\" #{1}] [\"?e\" nil nil] : Table 10.7 - Filtered query results We are now ready to report the results. The result clause structure is unwieldy for this purpose, so we will convert it into an an index-like structure (map of maps)\u2014with a significant twist. To understand the twist, we must first introduce the idea of a binding pair , which is a pair that matches a variable name to its value. The variable name is the one used at the predicate clauses, and the value is the value found in the result clauses. The twist to the index structure is that now we hold a binding pair of the entity-id / attr-name / value in the location where we held an entity-id / attr-name / value in an index: (defn bind-variables-to-query [q-res index] (let [seq-res-path (mapcat (partial combine-path-and-meta (from-eav index)) q-res) res-path (map #(- %1 (partition 2)(apply (to-eav index))) seq-res-path)] (reduce #(assoc-in %1 (butlast %2) (last %2)) {} res-path))) (defn combine-path-and-meta [from-eav-fn path] (let [expanded-path [(repeat (first path)) (repeat (second path)) (last path)] meta-of-path (apply from-eav-fn (map repeat (:db/variable (meta path)))) combined-data-and-meta-path (interleave meta-of-path expanded-path)] (apply (partial map vector) combined-data-and-meta-path))) At the end of phase 3 of our example execution, we have the following structure at hand: {[1 ?e ]{ {[:likes nil] [ Pizza nil]} {[:name nil] [ USA ?nm ]} {[:speaks nil] [ English nil]} {[:bday nil] [ July 4, 1776 ?bd ]} }}","title":"Phase 3: Execution of the Plan"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#phase-4-unify-and-report","text":"At this point, we\u2019ve produced a superset of the results that the user initially asked for. In this phase, we'll extract the values that the user wants. This process is called unification : it is here that we will unify the binding pairs structure with the vector of variable names that the user defined in the :find clause of the query. (defn unify [binded-res-col needed-vars] (map (partial locate-vars-in-query-res needed-vars) binded-res-col)) Each unification step is handled by locate-vars-in-query-result , which iterates over a query result (structured as an index entry, but with binding pairs) to detect all the variables and values that the user asked for. (defn locate-vars-in-query-res [vars-set q-res] (let [[e-pair av-map] q-res e-res (resultify-bind-pair vars-set [] e-pair)] (map (partial resultify-av-pair vars-set e-res) av-map))) (defn resultify-bind-pair [vars-set accum pair] (let [[ var-name _] pair] (if (contains? vars-set var-name) (conj accum pair) accum))) (defn resultify-av-pair [vars-set accum-res av-pair] (reduce (partial resultify-bind-pair vars-set) accum-res av-pair)) At the end of this phase, the results for our example are: [( ?nm USA ) ( ?bd July 4, 1776 )]","title":"Phase 4: Unify and Report"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#running-the-show","text":"We've finally built all of the components we need for our user-facing query mechanism, the q macro, which receives as arguments a database and a query. (defmacro q [db query] `(let [pred-clauses# (q-clauses-to-pred-clauses ~(:where query)) needed-vars# (symbol-col-to-set ~(:find query)) query-plan# (build-query-plan pred-clauses#) query-internal-res# (query-plan# ~db)] (unify query-internal-res# needed-vars#)))","title":"Running the Show"},{"location":"Project/An Archaeology-Inspired Database\u81ea\u9020\u6570\u636e\u5e93/#summary","text":"Our journey started with a conception of a different kind of database, and ended with one that: Supports ACI transactions (durability was lost when we decided to have the data stored in-memory). Supports \"what if\" interactions. Answers time-related questions. Handles simple datalog queries that are optimized with indexes. Provides APIs for graph queries. Introduces and implements the notion of evolutionary queries. There are still many things that we could improve: We could add caching to several components to improve performance; support richer queries; and add real storage support to provide data durability, to name a few. However, our final product can do a great many things, and was implemented in 488 lines of Clojure source code, 73 of which are blank lines and 55 of which are docstrings. Finally, there's one thing that is still missing: a name. The only sensible option for an in-memory, index-optimized, query-supporting, library developer-friendly, time-aware functional database implemented in 360 lines of Clojure code is CircleDB.","title":"Summary"},{"location":"Project/PY\u673a\u5668\u4eba/","text":"\u7528 Python \u6765\u505a\u4e00\u4e2a\u804a\u5929\u673a\u5668\u4eba\u5427\uff01 chinese-corpus \u6211\u6839\u636e ChatterBot \u8bed\u6599\u5e93\u548c\u7f51\u7edc\u5c0f\u8bf4\u3001\u53e4\u8bd7\u8bcd\u81ea\u5df1\u6574\u7406\u7684\u5355/\u591a\u8f6e\u4e2d\u6587\u5bf9\u8bdd\u8bed\u6599\u5e93\uff0c\u5185\u5bb9\u4e0d\u591a\uff0c\u4f46\u662f\u6211\u5c3d\u91cf\u4fdd\u8bc1\u4f4e\u566a\u58f0\u3002 \u53ef\u7528\u4e8e ChatterBot\uff0c\u590d\u5236\u5230 Python\u76ee\u5f55\\Lib\\site-packages\\chatterbot_corpus\\data\\chinese \u5373\u53ef\u4f7f\u7528 ChatterBotCorpusTrainer \u8bad\u7ec3\u3002 wxBot wxBot \u662f\u7528Python\u5305\u88c5Web\u5fae\u4fe1\u534f\u8bae\u5b9e\u73b0\u7684\u5fae\u4fe1\u673a\u5668\u4eba\u6846\u67b6\u3002 \u7528 Python \u6765\u505a\u4e00\u4e2a\u804a\u5929\u673a\u5668\u4eba\u5427\uff01 wxrobot \u4e3a\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df\u53d1\u5c55\u8d21\u732e\u8bed\u6599 nlp_chinese_corpus ai-chatbot-framework ToRCH2014\u73b0\u4ee3\u6c49\u8bed\u5e73\u8861\u8bed\u6599\u5e93\u7b80\u4ecb","title":"PY\u673a\u5668\u4eba"},{"location":"Project/PY\u673a\u5668\u4eba/#chinese-corpus","text":"\u6211\u6839\u636e ChatterBot \u8bed\u6599\u5e93\u548c\u7f51\u7edc\u5c0f\u8bf4\u3001\u53e4\u8bd7\u8bcd\u81ea\u5df1\u6574\u7406\u7684\u5355/\u591a\u8f6e\u4e2d\u6587\u5bf9\u8bdd\u8bed\u6599\u5e93\uff0c\u5185\u5bb9\u4e0d\u591a\uff0c\u4f46\u662f\u6211\u5c3d\u91cf\u4fdd\u8bc1\u4f4e\u566a\u58f0\u3002 \u53ef\u7528\u4e8e ChatterBot\uff0c\u590d\u5236\u5230 Python\u76ee\u5f55\\Lib\\site-packages\\chatterbot_corpus\\data\\chinese \u5373\u53ef\u4f7f\u7528 ChatterBotCorpusTrainer \u8bad\u7ec3\u3002","title":"chinese-corpus"},{"location":"Project/PY\u673a\u5668\u4eba/#wxbot","text":"wxBot \u662f\u7528Python\u5305\u88c5Web\u5fae\u4fe1\u534f\u8bae\u5b9e\u73b0\u7684\u5fae\u4fe1\u673a\u5668\u4eba\u6846\u67b6\u3002 \u7528 Python \u6765\u505a\u4e00\u4e2a\u804a\u5929\u673a\u5668\u4eba\u5427\uff01","title":"wxBot"},{"location":"Project/PY\u673a\u5668\u4eba/#wxrobot","text":"","title":"wxrobot"},{"location":"Project/PY\u673a\u5668\u4eba/#_1","text":"","title":"\u4e3a\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df\u53d1\u5c55\u8d21\u732e\u8bed\u6599"},{"location":"Project/PY\u673a\u5668\u4eba/#nlp_chinese_corpus","text":"","title":"nlp_chinese_corpus"},{"location":"Project/PY\u673a\u5668\u4eba/#ai-chatbot-framework","text":"","title":"ai-chatbot-framework"},{"location":"Project/PY\u673a\u5668\u4eba/#torch2014","text":"","title":"ToRCH2014\u73b0\u4ee3\u6c49\u8bed\u5e73\u8861\u8bed\u6599\u5e93\u7b80\u4ecb"},{"location":"Project/python\u89c6\u9891/","text":"\u4f7f\u7528python\u8fdb\u884c\u89c6\u9891\u7f16\u8f91\uff1a\u5c06\u80cc\u666f\u97f3\u4e50\u6dfb\u52a0\u5230\u5e26\u58f0\u97f3\u7684\u89c6\u9891\u4e2d \u4f7f\u7528 Python \u628a\u591a\u4e2a MP4 \u5408\u6210\u4e00\u4e2a\u89c6\u9891 \u6296\u97f3\u77ed\u89c6\u9891\u4e2d\u8fb9\u8bf4\u8fc7\u8fb9\u51fa\u73b0\u6587\u5b57\u7684\u662f\u600e\u4e48\u505a\u7684 \u767e\u4e07\u70b9\u8d5e\u600e\u4e48\u6765\uff1fPython\u6279\u91cf\u5236\u4f5c\u6296\u97f3\u7684\u5361\u70b9\u89c6\u9891\u539f\u6765\u8fd9\u4e48\u7b80\u5355\uff01 \u767e\u4e07\u70b9\u8d5e\u600e\u4e48\u6765\uff1fPython\u6279\u91cf\u5236\u4f5c\u6296\u97f3\u7684\u5361\u70b9\u89c6\u9891\u539f\u6765\u8fd9\u4e48\u7b80\u5355\uff01 Python-FFmpeg-Video Python\u8c03\u7528ffmpeg\u5f00\u6e90\u89c6\u9891\u5904\u7406\u5e93\uff0c\u6765\u5b9e\u73b0\u89c6\u9891\u6279\u91cf\u7684\u5904\u7406\uff1a\u6c34\u5370\u3001\u80cc\u666f\u97f3\u4e50\u3001\u526a\u8f91\u3001\u5408\u5e76\u3001\u5e27\u7387\u3001\u901f\u7387\u3001\u5206\u8fa8\u7387\u7b49\u64cd\u4f5c FFmpeg\u662f\u4e00\u5957\u53ef\u4ee5\u7528\u6765\u8bb0\u5f55\u3001\u8f6c\u6362\u6570\u5b57\u97f3\u9891\u3001\u89c6\u9891\uff0c\u5e76\u80fd\u5c06\u5176\u8f6c\u5316\u4e3a\u6d41\u7684\u5f00\u6e90\u8ba1\u7b97\u673a\u7a0b\u5e8f\u3002\u91c7\u7528LGPL\u6216GPL\u8bb8\u53ef\u8bc1\u3002 \u5b83\u63d0\u4f9b\u4e86\u5f55\u5236\u3001\u8f6c\u6362\u4ee5\u53ca\u6d41\u5316\u97f3\u89c6\u9891\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u5305\u542b\u4e86\u975e\u5e38\u5148\u8fdb\u7684\u97f3\u9891/\u89c6\u9891\u7f16\u89e3\u7801\u5e93libavcodec\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u9ad8\u53ef\u79fb\u690d\u6027\u548c\u7f16\u89e3\u7801\u8d28\u91cf\uff0clibavcodec\u91cc\u5f88\u591acode\u90fd\u662f\u4ece\u5934\u5f00\u53d1\u7684\u3002 FFmpeg\u5728Linux\u5e73\u53f0\u4e0b\u5f00\u53d1\uff0c\u4f46\u5b83\u540c\u6837\u4e5f\u53ef\u4ee5\u5728\u5176\u5b83\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u4e2d\u7f16\u8bd1\u8fd0\u884c\uff0c\u5305\u62ecWindows\u3001Mac OS X\u7b49\u3002 \u8fd9\u4e2a\u9879\u76ee\u6700\u65e9\u7531Fabrice Bellard\u53d1\u8d77\uff0c2004\u5e74\u81f32015\u5e74\u95f4\u7531Michael Niedermayer\u4e3b\u8981\u8d1f\u8d23\u7ef4\u62a4\u3002 \u8bb8\u591aFFmpeg\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u6765\u81eaMPlayer\u9879\u76ee\uff0c\u800c\u4e14\u5f53\u524dFFmpeg\u4e5f\u662f\u653e\u5728MPlayer\u9879\u76ee\u7ec4\u7684\u670d\u52a1\u5668\u4e0a\u3002 \u9879\u76ee\u7684\u540d\u79f0\u6765\u81eaMPEG\u89c6\u9891\u7f16\u7801\u6807\u51c6\uff0c\u524d\u9762\u7684\"FF\"\u4ee3\u8868\"Fast Forward\"\u3002","title":"Python\u89c6\u9891"},{"location":"Project/python\u89c6\u9891/#python","text":"","title":"\u4f7f\u7528python\u8fdb\u884c\u89c6\u9891\u7f16\u8f91\uff1a\u5c06\u80cc\u666f\u97f3\u4e50\u6dfb\u52a0\u5230\u5e26\u58f0\u97f3\u7684\u89c6\u9891\u4e2d"},{"location":"Project/python\u89c6\u9891/#python-mp4","text":"","title":"\u4f7f\u7528 Python \u628a\u591a\u4e2a MP4 \u5408\u6210\u4e00\u4e2a\u89c6\u9891"},{"location":"Project/python\u89c6\u9891/#_1","text":"","title":"\u6296\u97f3\u77ed\u89c6\u9891\u4e2d\u8fb9\u8bf4\u8fc7\u8fb9\u51fa\u73b0\u6587\u5b57\u7684\u662f\u600e\u4e48\u505a\u7684"},{"location":"Project/python\u89c6\u9891/#python_1","text":"","title":"\u767e\u4e07\u70b9\u8d5e\u600e\u4e48\u6765\uff1fPython\u6279\u91cf\u5236\u4f5c\u6296\u97f3\u7684\u5361\u70b9\u89c6\u9891\u539f\u6765\u8fd9\u4e48\u7b80\u5355\uff01"},{"location":"Project/python\u89c6\u9891/#python_2","text":"","title":"\u767e\u4e07\u70b9\u8d5e\u600e\u4e48\u6765\uff1fPython\u6279\u91cf\u5236\u4f5c\u6296\u97f3\u7684\u5361\u70b9\u89c6\u9891\u539f\u6765\u8fd9\u4e48\u7b80\u5355\uff01"},{"location":"Project/python\u89c6\u9891/#python-ffmpeg-video","text":"Python\u8c03\u7528ffmpeg\u5f00\u6e90\u89c6\u9891\u5904\u7406\u5e93\uff0c\u6765\u5b9e\u73b0\u89c6\u9891\u6279\u91cf\u7684\u5904\u7406\uff1a\u6c34\u5370\u3001\u80cc\u666f\u97f3\u4e50\u3001\u526a\u8f91\u3001\u5408\u5e76\u3001\u5e27\u7387\u3001\u901f\u7387\u3001\u5206\u8fa8\u7387\u7b49\u64cd\u4f5c FFmpeg\u662f\u4e00\u5957\u53ef\u4ee5\u7528\u6765\u8bb0\u5f55\u3001\u8f6c\u6362\u6570\u5b57\u97f3\u9891\u3001\u89c6\u9891\uff0c\u5e76\u80fd\u5c06\u5176\u8f6c\u5316\u4e3a\u6d41\u7684\u5f00\u6e90\u8ba1\u7b97\u673a\u7a0b\u5e8f\u3002\u91c7\u7528LGPL\u6216GPL\u8bb8\u53ef\u8bc1\u3002 \u5b83\u63d0\u4f9b\u4e86\u5f55\u5236\u3001\u8f6c\u6362\u4ee5\u53ca\u6d41\u5316\u97f3\u89c6\u9891\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u5305\u542b\u4e86\u975e\u5e38\u5148\u8fdb\u7684\u97f3\u9891/\u89c6\u9891\u7f16\u89e3\u7801\u5e93libavcodec\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u9ad8\u53ef\u79fb\u690d\u6027\u548c\u7f16\u89e3\u7801\u8d28\u91cf\uff0clibavcodec\u91cc\u5f88\u591acode\u90fd\u662f\u4ece\u5934\u5f00\u53d1\u7684\u3002 FFmpeg\u5728Linux\u5e73\u53f0\u4e0b\u5f00\u53d1\uff0c\u4f46\u5b83\u540c\u6837\u4e5f\u53ef\u4ee5\u5728\u5176\u5b83\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u4e2d\u7f16\u8bd1\u8fd0\u884c\uff0c\u5305\u62ecWindows\u3001Mac OS X\u7b49\u3002 \u8fd9\u4e2a\u9879\u76ee\u6700\u65e9\u7531Fabrice Bellard\u53d1\u8d77\uff0c2004\u5e74\u81f32015\u5e74\u95f4\u7531Michael Niedermayer\u4e3b\u8981\u8d1f\u8d23\u7ef4\u62a4\u3002 \u8bb8\u591aFFmpeg\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u6765\u81eaMPlayer\u9879\u76ee\uff0c\u800c\u4e14\u5f53\u524dFFmpeg\u4e5f\u662f\u653e\u5728MPlayer\u9879\u76ee\u7ec4\u7684\u670d\u52a1\u5668\u4e0a\u3002 \u9879\u76ee\u7684\u540d\u79f0\u6765\u81eaMPEG\u89c6\u9891\u7f16\u7801\u6807\u51c6\uff0c\u524d\u9762\u7684\"FF\"\u4ee3\u8868\"Fast Forward\"\u3002","title":"Python-FFmpeg-Video"},{"location":"microservice/MicroServiceDevelop/\u5fae\u670d\u52a1\u7684\u4e1a\u52a1\u5206\u6790/","text":"\u5206\u6790 \u4e1a\u52a1\u573a\u666f \u7528\u6237\u53ef\u4ee5\u6ce8\u518c\u548c\u767b\u5f55 \u767b\u5f55\u7528\u6237\u53ef\u4ee5\u5bf9\u8bfe\u7a0b\u8fdb\u884cCURD\u64cd\u4f5c IDE \u7528\u6237\u670d\u52a1 \u7528\u6237\u767b\u5f55 \u7528\u6237\u6ce8\u518c \u7528\u6237\u57fa\u672c\u4fe1\u606f\u67e5\u8be2 \u65e0\u72b6\u6001\uff0c\u65e0Session \u5355\u70b9\u767b\u5f55 \u8bfe\u7a0b\u670d\u52a1 \u767b\u5f55\u9a8c\u8bc1 \u8bfe\u7a0bCURD \u4fe1\u606f\u670d\u52a1 \u53d1\u9001\u90ae\u4ef6 \u53d1\u9001\u77ed\u4fe1 \u7528\u6237Edgeservice \u8bfe\u7a0bEdgeservice API GeteWay","title":"\u5fae\u670d\u52a1\u7684\u4e1a\u52a1\u5206\u6790"},{"location":"microservice/MicroServiceDevelop/\u5fae\u670d\u52a1\u7684\u4e1a\u52a1\u5206\u6790/#ide","text":"\u7528\u6237\u670d\u52a1 \u7528\u6237\u767b\u5f55 \u7528\u6237\u6ce8\u518c \u7528\u6237\u57fa\u672c\u4fe1\u606f\u67e5\u8be2 \u65e0\u72b6\u6001\uff0c\u65e0Session \u5355\u70b9\u767b\u5f55 \u8bfe\u7a0b\u670d\u52a1 \u767b\u5f55\u9a8c\u8bc1 \u8bfe\u7a0bCURD \u4fe1\u606f\u670d\u52a1 \u53d1\u9001\u90ae\u4ef6 \u53d1\u9001\u77ed\u4fe1 \u7528\u6237Edgeservice \u8bfe\u7a0bEdgeservice API GeteWay","title":"IDE"},{"location":"microservice/OneChaper/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/","text":"\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf \u72ec\u7acb\u6027 \u654f\u6377\u6027 \u6280\u672f\u6808\u7075\u6d3b \u9ad8\u6548\u56e2\u961f \u5fae\u670d\u52a1\u67b6\u6784\u7684\u4e0d\u8db3 \u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf \u72ec\u7acb\u6027 \u654f\u6377\u6027 \u6280\u672f\u6808\u7075\u6d3b \u9ad8\u6548\u56e2\u961f \u5fae\u670d\u52a1\u67b6\u6784\u7684\u4e0d\u8db3 \u989d\u5916\u7684\u5de5\u4f5c \u6570\u636e\u4e00\u81f4\u6027 \u6c9f\u901a\u6210\u672c API\u5e26\u6765\u7684\u6c9f\u901a","title":"\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3"},{"location":"microservice/OneChaper/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_1","text":"","title":"\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf"},{"location":"microservice/OneChaper/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_2","text":"","title":"\u72ec\u7acb\u6027"},{"location":"microservice/OneChaper/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_3","text":"","title":"\u654f\u6377\u6027"},{"location":"microservice/OneChaper/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_4","text":"","title":"\u6280\u672f\u6808\u7075\u6d3b"},{"location":"microservice/OneChaper/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_5","text":"","title":"\u9ad8\u6548\u56e2\u961f"},{"location":"microservice/OneChaper/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_6","text":"\u989d\u5916\u7684\u5de5\u4f5c \u6570\u636e\u4e00\u81f4\u6027 \u6c9f\u901a\u6210\u672c API\u5e26\u6765\u7684\u6c9f\u901a","title":"\u5fae\u670d\u52a1\u67b6\u6784\u7684\u4e0d\u8db3"},{"location":"microservice/OneChaper/\u8bfe\u7a0b\u51c6\u5907/","text":"\u73af\u5883\u8bbe\u65bd \u6280\u672f\u50a8\u5907 \u9002\u5408\u4eba\u7fa4 \u73af\u5883\u8bbe\u65bd Python 3.6.3 Thrift 0.10.0 Ubuntu-16.04 Docker-17.09.0 Kubernetes-1.9.0 \u6280\u672f\u50a8\u5907 \u719f\u7ec3\u638c\u63e1Java WEB \u719f\u6089Docker \u719f\u6089Linux \u9002\u5408\u4eba\u7fa4 \u5f00\u53d1\u5de5\u7a0b\u5e08 DEVOPS\u5de5\u7a0b\u5e08 \u67b6\u6784\u5e08\u6709\u5fd7\u9752\u5e74","title":"\u8bfe\u7a0b\u51c6\u5907"},{"location":"microservice/OneChaper/\u8bfe\u7a0b\u51c6\u5907/#_1","text":"Python 3.6.3 Thrift 0.10.0 Ubuntu-16.04 Docker-17.09.0 Kubernetes-1.9.0","title":"\u73af\u5883\u8bbe\u65bd"},{"location":"microservice/OneChaper/\u8bfe\u7a0b\u51c6\u5907/#_2","text":"\u719f\u7ec3\u638c\u63e1Java WEB \u719f\u6089Docker \u719f\u6089Linux","title":"\u6280\u672f\u50a8\u5907"},{"location":"microservice/OneChaper/\u8bfe\u7a0b\u51c6\u5907/#_3","text":"\u5f00\u53d1\u5de5\u7a0b\u5e08 DEVOPS\u5de5\u7a0b\u5e08 \u67b6\u6784\u5e08\u6709\u5fd7\u9752\u5e74","title":"\u9002\u5408\u4eba\u7fa4"},{"location":"microservice/OneChapter/4.\u5fae\u670d\u52a1\u67b6\u6784\u56fe/","text":"","title":"4.\u5fae\u670d\u52a1\u67b6\u6784\u56fe"},{"location":"microservice/OneChapter/\u4ec0\u4e48\u662f\u5fae\u670d\u52a1/","text":"\u5b9a\u4e49 \u7279\u5f81 \u80cc\u666f \u5b9a\u4e49 \u72ec\u7acb\u8fdb\u7a0b \u8f7b\u91cf\u7ea7\u901a\u8baf\u534f\u8bae \u81ea\u52a8\u5316\u90e8\u7f72 \u5fae\uff1a\u4e0d\u53ef\u8bd5\u9898\uff0c\u662f\u601d\u60f3\uff0c\u601d\u7ef4\u3002 \u7279\u5f81 \u5355\u4e00\u804c\u8d23 \u8f7b\u91cf\u901a\u8baf \u9694\u79bb\u6027\u8d28 \u6709\u81ea\u5df1\u6570\u636e\uff0c\u72ec\u7acb \u6280\u672f\u591a\u6837\u6027\uff0c\u53ea\u8981\u63d0\u4f9bAPI\u5c31\u53ef\u4ee5\u3002 \u80cc\u666f \u884c\u4e1a\u5feb\u901f\u53d1\u5c55 \u654f\u6377\u5f00\u53d1\uff0c\u7cbe\u76ca\u65b9\u6cd5\u6df1\u5165\u4eba\u6027 \u865a\u62df\u5316\uff0c\u7a97\u53e3\u6280\u672f\u6210\u719f\u53d1\u5c55\uff08Docker\uff0cK8S\uff09","title":"\u4ec0\u4e48\u662f\u5fae\u670d\u52a1"},{"location":"microservice/OneChapter/\u4ec0\u4e48\u662f\u5fae\u670d\u52a1/#_1","text":"\u72ec\u7acb\u8fdb\u7a0b \u8f7b\u91cf\u7ea7\u901a\u8baf\u534f\u8bae \u81ea\u52a8\u5316\u90e8\u7f72 \u5fae\uff1a\u4e0d\u53ef\u8bd5\u9898\uff0c\u662f\u601d\u60f3\uff0c\u601d\u7ef4\u3002","title":"\u5b9a\u4e49"},{"location":"microservice/OneChapter/\u4ec0\u4e48\u662f\u5fae\u670d\u52a1/#_2","text":"\u5355\u4e00\u804c\u8d23 \u8f7b\u91cf\u901a\u8baf \u9694\u79bb\u6027\u8d28 \u6709\u81ea\u5df1\u6570\u636e\uff0c\u72ec\u7acb \u6280\u672f\u591a\u6837\u6027\uff0c\u53ea\u8981\u63d0\u4f9bAPI\u5c31\u53ef\u4ee5\u3002","title":"\u7279\u5f81"},{"location":"microservice/OneChapter/\u4ec0\u4e48\u662f\u5fae\u670d\u52a1/#_3","text":"\u884c\u4e1a\u5feb\u901f\u53d1\u5c55 \u654f\u6377\u5f00\u53d1\uff0c\u7cbe\u76ca\u65b9\u6cd5\u6df1\u5165\u4eba\u6027 \u865a\u62df\u5316\uff0c\u7a97\u53e3\u6280\u672f\u6210\u719f\u53d1\u5c55\uff08Docker\uff0cK8S\uff09","title":"\u80cc\u666f"},{"location":"microservice/OneChapter/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/","text":"\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf \u72ec\u7acb\u6027 \u654f\u6377\u6027 \u6280\u672f\u6808\u7075\u6d3b \u9ad8\u6548\u56e2\u961f \u5fae\u670d\u52a1\u67b6\u6784\u7684\u4e0d\u8db3 \u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf \u72ec\u7acb\u6027 \u654f\u6377\u6027 \u6280\u672f\u6808\u7075\u6d3b \u9ad8\u6548\u56e2\u961f \u5fae\u670d\u52a1\u67b6\u6784\u7684\u4e0d\u8db3 \u989d\u5916\u7684\u5de5\u4f5c \u6570\u636e\u4e00\u81f4\u6027 \u6c9f\u901a\u6210\u672c API\u5e26\u6765\u7684\u6c9f\u901a","title":"\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3"},{"location":"microservice/OneChapter/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_1","text":"","title":"\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf"},{"location":"microservice/OneChapter/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_2","text":"","title":"\u72ec\u7acb\u6027"},{"location":"microservice/OneChapter/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_3","text":"","title":"\u654f\u6377\u6027"},{"location":"microservice/OneChapter/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_4","text":"","title":"\u6280\u672f\u6808\u7075\u6d3b"},{"location":"microservice/OneChapter/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_5","text":"","title":"\u9ad8\u6548\u56e2\u961f"},{"location":"microservice/OneChapter/\u5fae\u670d\u52a1\u67b6\u6784\u4f18\u52bf\u4e0e\u4e0d\u8db3/#_6","text":"\u989d\u5916\u7684\u5de5\u4f5c \u6570\u636e\u4e00\u81f4\u6027 \u6c9f\u901a\u6210\u672c API\u5e26\u6765\u7684\u6c9f\u901a","title":"\u5fae\u670d\u52a1\u67b6\u6784\u7684\u4e0d\u8db3"},{"location":"microservice/OneChapter/\u8bfe\u7a0b\u51c6\u5907/","text":"\u73af\u5883\u8bbe\u65bd \u6280\u672f\u50a8\u5907 \u9002\u5408\u4eba\u7fa4 \u73af\u5883\u8bbe\u65bd Python 3.6.3 Thrift 0.10.0 Ubuntu-16.04 Docker-17.09.0 Kubernetes-1.9.0 \u6280\u672f\u50a8\u5907 \u719f\u7ec3\u638c\u63e1Java WEB \u719f\u6089Docker \u719f\u6089Linux \u9002\u5408\u4eba\u7fa4 \u5f00\u53d1\u5de5\u7a0b\u5e08 DEVOPS\u5de5\u7a0b\u5e08 \u67b6\u6784\u5e08\u6709\u5fd7\u9752\u5e74","title":"\u8bfe\u7a0b\u51c6\u5907"},{"location":"microservice/OneChapter/\u8bfe\u7a0b\u51c6\u5907/#_1","text":"Python 3.6.3 Thrift 0.10.0 Ubuntu-16.04 Docker-17.09.0 Kubernetes-1.9.0","title":"\u73af\u5883\u8bbe\u65bd"},{"location":"microservice/OneChapter/\u8bfe\u7a0b\u51c6\u5907/#_2","text":"\u719f\u7ec3\u638c\u63e1Java WEB \u719f\u6089Docker \u719f\u6089Linux","title":"\u6280\u672f\u50a8\u5907"},{"location":"microservice/OneChapter/\u8bfe\u7a0b\u51c6\u5907/#_3","text":"\u5f00\u53d1\u5de5\u7a0b\u5e08 DEVOPS\u5de5\u7a0b\u5e08 \u67b6\u6784\u5e08\u6709\u5fd7\u9752\u5e74","title":"\u9002\u5408\u4eba\u7fa4"},{"location":"microservice/SecondChaper/\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/","text":"\u5fae\u670d\u52a1\u5982\u4f55\u901a\u8baf\uff1f \u5fae\u670d\u52a1\u5982\u4f55\u53d1\u73b0\u5f7c\u6b64? \u5fae\u670d\u52a1\u600e\u6837\u90e8\u7f72\uff0c\u66f4\u65b0\uff0c\u6269\u5bb9\uff1f \u5fae\u670d\u52a1\u5982\u4f55\u901a\u8baf\uff1f \u4ece\u901a\u8baf\u6a21\u5f0f\u89d2\u5ea6\u8003\u8651 \u540c\u6b65\uff1a\u8bf7\u6c42\u54cd\u5e94\u6a21\u5f0f\uff0c\u6700\u5e38\u89c1\u3002 \u5f02\u6b65\uff1a\u901a\u77e5/\u8bf7\u6c42\u5f02\u6b65\u54cd\u5e94\u3002 \u5fae\u670d\u52a1\u5982\u4f55\u53d1\u73b0\u5f7c\u6b64? RESTAPI BAD\uff1a GOOD\uff1a RPC MQ RPC - \u6784\u67b6 - I/O\uff0c\u7ebf\u7a0b\u8c03\u5ea6\u6a21\u578b - \u5e8f\u5217\u5316\u65b9\u5f0f - \u591a\u8bed\u8a00\u652f\u6301 - \u670d\u52a1\u6cbb\u7406 \u6d41\u884cRPC\u6846\u67b6\uff1a Dubbo/Dubbox thrift Motan Grpc Dubbo \u5fae\u670d\u52a1\u600e\u6837\u90e8\u7f72\uff0c\u66f4\u65b0\uff0c\u6269\u5bb9\uff1f","title":"\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898"},{"location":"microservice/SecondChaper/\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#_1","text":"\u4ece\u901a\u8baf\u6a21\u5f0f\u89d2\u5ea6\u8003\u8651 \u540c\u6b65\uff1a\u8bf7\u6c42\u54cd\u5e94\u6a21\u5f0f\uff0c\u6700\u5e38\u89c1\u3002 \u5f02\u6b65\uff1a\u901a\u77e5/\u8bf7\u6c42\u5f02\u6b65\u54cd\u5e94\u3002","title":"\u5fae\u670d\u52a1\u5982\u4f55\u901a\u8baf\uff1f"},{"location":"microservice/SecondChaper/\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#_2","text":"RESTAPI BAD\uff1a GOOD\uff1a RPC MQ RPC - \u6784\u67b6 - I/O\uff0c\u7ebf\u7a0b\u8c03\u5ea6\u6a21\u578b - \u5e8f\u5217\u5316\u65b9\u5f0f - \u591a\u8bed\u8a00\u652f\u6301 - \u670d\u52a1\u6cbb\u7406 \u6d41\u884cRPC\u6846\u67b6\uff1a Dubbo/Dubbox thrift Motan Grpc Dubbo","title":"\u5fae\u670d\u52a1\u5982\u4f55\u53d1\u73b0\u5f7c\u6b64?"},{"location":"microservice/SecondChaper/\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#_3","text":"","title":"\u5fae\u670d\u52a1\u600e\u6837\u90e8\u7f72\uff0c\u66f4\u65b0\uff0c\u6269\u5bb9\uff1f"},{"location":"microservice/SecondChapter/1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/","text":"\u5fae\u670d\u52a1\u5982\u4f55\u901a\u8baf\uff1f \u5fae\u670d\u52a1\u5982\u4f55\u53d1\u73b0\u5f7c\u6b64? RPC\u6846\u67b6 \u4f20\u7edf\u670d\u52a1VS\u5fae\u670d\u52a1 \u5982\u4f55\u53d1\u73b0 \u5fae\u670d\u52a1\u600e\u6837\u90e8\u7f72\uff0c\u66f4\u65b0\uff0c\u6269\u5bb9\uff1f \u5fae\u670d\u52a1\u5982\u4f55\u901a\u8baf\uff1f socket,https,http,rpc \u4ece\u901a\u8baf\u6a21\u5f0f\u89d2\u5ea6\u8003\u8651 \u4e00\u5bf9\u4e00\u8fd8\u662f\u4e00\u5bf9\u591a \u540c\u6b65\u8fd8\u662f\u5f02\u6b65 \u540c\u6b65\uff1a\u8bf7\u6c42\u54cd\u5e94\u6a21\u5f0f\uff0c\u6700\u5e38\u89c1\u3002 \u5f02\u6b65\uff1a\u901a\u77e5/\u8bf7\u6c42\u5f02\u6b65\u54cd\u5e94\u3002 Rest API (http\u98ce\u683c) \u5fae\u670d\u52a1\u5982\u4f55\u53d1\u73b0\u5f7c\u6b64? RESTAPI RPC MQ RPC\u6846\u67b6 \u6784\u67b6 I/O\uff0c\u7ebf\u7a0b\u8c03\u5ea6\u6a21\u578b,\u957f\u77ed\u8fde\u63a5,http\u77ed\u8fde\u63a5. \u5e8f\u5217\u5316\u65b9\u5f0f,\u6548\u7387\u5f71\u54cdrpc\u901a\u8baf. \u591a\u8bed\u8a00\u652f\u6301,\u8bed\u8a00\u5bf9\u6846\u67b6\u5f71\u54cd \u670d\u52a1\u6cbb\u7406. \u6d41\u884cRPC\u6846\u67b6\uff1a Dubbo(ali)/Dubbox(\u5f53\u5f53) thrift(facebook,C/S,\u6ca1\u670d\u52a1\u6cbb\u7406) Motan Grpc \u533a\u522b protobuf\u6548\u7387\u662f\u6700\u9ad8\u7684 \u4f20\u7edf\u670d\u52a1VS\u5fae\u670d\u52a1 \u5982\u4f55\u53d1\u73b0 \u5ba2\u6237\u7aef\u53d1\u73b0 \u670d\u52a1\u7aef\u53d1\u73b0 \u5fae\u670d\u52a1\u600e\u6837\u90e8\u7f72\uff0c\u66f4\u65b0\uff0c\u6269\u5bb9\uff1f \u670d\u52a1\u7f16\u6392(\u670d\u52a1\u53d1\u73b0,\u90e8\u7f72,\u66f4\u65b0,\u6269\u5bb9.\u7b80\u5316\u610f\u4e49) \u6d41\u884c\u7684\u670d\u52a1\u7f16\u6392\u5de5\u5177 Mesos \u2013apache Docker Sarm \u2013docker Kubernetes \u2013google","title":"1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898"},{"location":"microservice/SecondChapter/1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#_1","text":"socket,https,http,rpc \u4ece\u901a\u8baf\u6a21\u5f0f\u89d2\u5ea6\u8003\u8651 \u4e00\u5bf9\u4e00\u8fd8\u662f\u4e00\u5bf9\u591a \u540c\u6b65\u8fd8\u662f\u5f02\u6b65 \u540c\u6b65\uff1a\u8bf7\u6c42\u54cd\u5e94\u6a21\u5f0f\uff0c\u6700\u5e38\u89c1\u3002 \u5f02\u6b65\uff1a\u901a\u77e5/\u8bf7\u6c42\u5f02\u6b65\u54cd\u5e94\u3002 Rest API (http\u98ce\u683c)","title":"\u5fae\u670d\u52a1\u5982\u4f55\u901a\u8baf\uff1f"},{"location":"microservice/SecondChapter/1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#_2","text":"RESTAPI RPC MQ","title":"\u5fae\u670d\u52a1\u5982\u4f55\u53d1\u73b0\u5f7c\u6b64?"},{"location":"microservice/SecondChapter/1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#rpc","text":"\u6784\u67b6 I/O\uff0c\u7ebf\u7a0b\u8c03\u5ea6\u6a21\u578b,\u957f\u77ed\u8fde\u63a5,http\u77ed\u8fde\u63a5. \u5e8f\u5217\u5316\u65b9\u5f0f,\u6548\u7387\u5f71\u54cdrpc\u901a\u8baf. \u591a\u8bed\u8a00\u652f\u6301,\u8bed\u8a00\u5bf9\u6846\u67b6\u5f71\u54cd \u670d\u52a1\u6cbb\u7406. \u6d41\u884cRPC\u6846\u67b6\uff1a Dubbo(ali)/Dubbox(\u5f53\u5f53) thrift(facebook,C/S,\u6ca1\u670d\u52a1\u6cbb\u7406) Motan Grpc \u533a\u522b protobuf\u6548\u7387\u662f\u6700\u9ad8\u7684","title":"RPC\u6846\u67b6"},{"location":"microservice/SecondChapter/1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#vs","text":"","title":"\u4f20\u7edf\u670d\u52a1VS\u5fae\u670d\u52a1"},{"location":"microservice/SecondChapter/1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#_3","text":"\u5ba2\u6237\u7aef\u53d1\u73b0 \u670d\u52a1\u7aef\u53d1\u73b0","title":"\u5982\u4f55\u53d1\u73b0"},{"location":"microservice/SecondChapter/1.\u5fae\u670d\u52a1\u67b6\u6784\u5e26\u6765\u7684\u95ee\u9898/#_4","text":"\u670d\u52a1\u7f16\u6392(\u670d\u52a1\u53d1\u73b0,\u90e8\u7f72,\u66f4\u65b0,\u6269\u5bb9.\u7b80\u5316\u610f\u4e49) \u6d41\u884c\u7684\u670d\u52a1\u7f16\u6392\u5de5\u5177 Mesos \u2013apache Docker Sarm \u2013docker Kubernetes \u2013google","title":"\u5fae\u670d\u52a1\u600e\u6837\u90e8\u7f72\uff0c\u66f4\u65b0\uff0c\u6269\u5bb9\uff1f"},{"location":"microservice/SecondChapter/Untitled/","text":"","title":"Untitled"},{"location":"mkdocs/\u4e3b\u9898/","text":"- Docs \u00bb - \u7528\u6237\u6307\u5357 \u00bb - \u6587\u6863\u6837\u5f0f \u914d\u7f6e\u4e3b\u9898 \u5982\u4f55\u914d\u7f6e\u4e3b\u9898. \u5185\u5efa\u4e3b\u9898 Bootstrap Read the Docs The bootswatch themes \u81ea\u5b9a\u4e49\u4e3b\u9898 \u81ea\u5b9a\u4e49\u4e3b\u9898\u6700\u5c11\u53ea\u9700\u8981\u4e00\u4e2a base.html \u6a21\u677f\u6587\u4ef6\u5c31\u53ef\u4ee5\u4e86. \u6a21\u677f\u76ee\u5f55\u5e94\u5f53\u88ab\u653e\u7f6e\u5230\u4e0e mkdocs.yml \u914d\u7f6e\u6587\u4ef6\u76f8\u540c\u76ee\u5f55\u4e0b. \u5728 mkdocs.yml \u6587\u4ef6\u4e2d\u6307\u5b9a theme_dir \u9009\u9879\u4e3a\u5305\u542b base.html \u6587\u4ef6\u7684\u76ee\u5f55\u5373\u53ef. \u4f8b\u5982, \u5982\u4e0b\u76ee\u5f55\u7ed3\u6784: mkdocs.yml docs/ index.md about.md custom_theme/ base.html ... \u4f60\u9700\u8981\u914d\u7f6e\u81ea\u5b9a\u4e49\u4e3b\u9898\u76ee\u5f55\u9009\u9879: theme_dir: 'custom_theme' \u5982\u679c\u548c theme \u9009\u9879\u7ed3\u5408\u4f7f\u7528, \u81ea\u5b9a\u4e49\u4e3b\u9898\u53ef\u4ee5\u7528\u4e8e\u66ff\u6362\u5185\u5efa\u4e3b\u9898\u7684\u7279\u5b9a\u90e8\u5206. \u4f8b\u5982, \u4e0a\u8ff0\u76ee\u5f55\u7ed3\u6784\u5982\u679c\u4f60\u8bbe\u7f6e\u4e86 theme: mkdocs , \u90a3\u4e48 base.html \u5c06\u66ff\u6362\u4e3b\u9898\u4e2d\u7684\u76f8\u5e94\u6587\u4ef6, \u800c\u5176\u4ed6\u7684\u5219\u4fdd\u6301\u4e0d\u53d8. \u8fd9\u5728\u4f60\u5e0c\u671b\u5bf9\u4e3b\u9898\u8fdb\u884c\u5c0f\u8c03\u6574\u65f6\u662f\u5341\u5206\u6709\u7528\u7684. \u6700\u7b80\u5355\u7684 base.html \u7ed3\u6784\u5982\u4e0b: !DOCTYPE html html head /head body {{ content }} /body /html mkdocs.yml \u4e2d\u6307\u5b9a\u7684\u6bcf\u4e00\u9875\u7684\u6587\u6863\u5185\u5bb9\u4f7f\u7528 {{ content }} \u6807\u7b7e\u6765\u63d2\u5165. \u53ef\u4ee5\u50cf\u5904\u7406\u666e\u901a HTML \u6587\u6863\u4e00\u6837\u5bfc\u5165\u6837\u5f0f\u8868\u548c\u811a\u672c. \u76f8\u5e94\u7684, \u5bfc\u822a\u680f\u548c\u5185\u5bb9\u5217\u8868\u53ef\u4ee5\u901a\u8fc7 nav \u548c toc \u5bf9\u8c61\u81ea\u52a8\u751f\u6210\u548c\u5305\u542b. \u5982\u679c\u4f60\u60f3\u8bbe\u8ba1\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898, \u6700\u597d\u4ece\u4fee\u6539 \u5185\u5efa\u4e3b\u9898 \u5f00\u59cb.","title":"\u4e3b\u9898"},{"location":"mkdocs/\u4e3b\u9898/#-docs","text":"","title":"- Docs \u00bb"},{"location":"mkdocs/\u4e3b\u9898/#-","text":"","title":"- \u7528\u6237\u6307\u5357 \u00bb"},{"location":"mkdocs/\u4e3b\u9898/#-_1","text":"","title":"- \u6587\u6863\u6837\u5f0f"},{"location":"mkdocs/\u4e3b\u9898/#_1","text":"\u5982\u4f55\u914d\u7f6e\u4e3b\u9898.","title":"\u914d\u7f6e\u4e3b\u9898"},{"location":"mkdocs/\u4e3b\u9898/#_2","text":"","title":"\u5185\u5efa\u4e3b\u9898"},{"location":"mkdocs/\u4e3b\u9898/#bootstrap","text":"","title":"Bootstrap"},{"location":"mkdocs/\u4e3b\u9898/#read-the-docs","text":"","title":"Read the Docs"},{"location":"mkdocs/\u4e3b\u9898/#the-bootswatch-themes","text":"","title":"The bootswatch themes"},{"location":"mkdocs/\u4e3b\u9898/#_3","text":"\u81ea\u5b9a\u4e49\u4e3b\u9898\u6700\u5c11\u53ea\u9700\u8981\u4e00\u4e2a base.html \u6a21\u677f\u6587\u4ef6\u5c31\u53ef\u4ee5\u4e86. \u6a21\u677f\u76ee\u5f55\u5e94\u5f53\u88ab\u653e\u7f6e\u5230\u4e0e mkdocs.yml \u914d\u7f6e\u6587\u4ef6\u76f8\u540c\u76ee\u5f55\u4e0b. \u5728 mkdocs.yml \u6587\u4ef6\u4e2d\u6307\u5b9a theme_dir \u9009\u9879\u4e3a\u5305\u542b base.html \u6587\u4ef6\u7684\u76ee\u5f55\u5373\u53ef. \u4f8b\u5982, \u5982\u4e0b\u76ee\u5f55\u7ed3\u6784: mkdocs.yml docs/ index.md about.md custom_theme/ base.html ... \u4f60\u9700\u8981\u914d\u7f6e\u81ea\u5b9a\u4e49\u4e3b\u9898\u76ee\u5f55\u9009\u9879: theme_dir: 'custom_theme' \u5982\u679c\u548c theme \u9009\u9879\u7ed3\u5408\u4f7f\u7528, \u81ea\u5b9a\u4e49\u4e3b\u9898\u53ef\u4ee5\u7528\u4e8e\u66ff\u6362\u5185\u5efa\u4e3b\u9898\u7684\u7279\u5b9a\u90e8\u5206. \u4f8b\u5982, \u4e0a\u8ff0\u76ee\u5f55\u7ed3\u6784\u5982\u679c\u4f60\u8bbe\u7f6e\u4e86 theme: mkdocs , \u90a3\u4e48 base.html \u5c06\u66ff\u6362\u4e3b\u9898\u4e2d\u7684\u76f8\u5e94\u6587\u4ef6, \u800c\u5176\u4ed6\u7684\u5219\u4fdd\u6301\u4e0d\u53d8. \u8fd9\u5728\u4f60\u5e0c\u671b\u5bf9\u4e3b\u9898\u8fdb\u884c\u5c0f\u8c03\u6574\u65f6\u662f\u5341\u5206\u6709\u7528\u7684. \u6700\u7b80\u5355\u7684 base.html \u7ed3\u6784\u5982\u4e0b: !DOCTYPE html html head /head body {{ content }} /body /html mkdocs.yml \u4e2d\u6307\u5b9a\u7684\u6bcf\u4e00\u9875\u7684\u6587\u6863\u5185\u5bb9\u4f7f\u7528 {{ content }} \u6807\u7b7e\u6765\u63d2\u5165. \u53ef\u4ee5\u50cf\u5904\u7406\u666e\u901a HTML \u6587\u6863\u4e00\u6837\u5bfc\u5165\u6837\u5f0f\u8868\u548c\u811a\u672c. \u76f8\u5e94\u7684, \u5bfc\u822a\u680f\u548c\u5185\u5bb9\u5217\u8868\u53ef\u4ee5\u901a\u8fc7 nav \u548c toc \u5bf9\u8c61\u81ea\u52a8\u751f\u6210\u548c\u5305\u542b. \u5982\u679c\u4f60\u60f3\u8bbe\u8ba1\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898, \u6700\u597d\u4ece\u4fee\u6539 \u5185\u5efa\u4e3b\u9898 \u5f00\u59cb.","title":"\u81ea\u5b9a\u4e49\u4e3b\u9898"},{"location":"mkdocs/\u73af\u5883\u5e72\u6270\u4e3b\u9898/","text":"\u95ee\u9898\uff1a\u591a\u73af\u5883\u5e72\u6270\u9020\u6210\u4e3b\u9898\u4e0d\u80fd\u88ab\u8bc6\u522b \u95ee\u9898\u5206\u6790\uff1a \u89e3\u51b3\u65b9\u6cd5\uff1a \u5378\u8f7dmkdocs(confirm pip\u662f2.7\u6216\u540c\u4e00\u7248\u672c\u73af\u5883\u4e0b\u64cd\u4f5c\u3002) \u5b89\u6392mkdocs \u95ee\u9898\uff1a\u591a\u73af\u5883\u5e72\u6270\u9020\u6210\u4e3b\u9898\u4e0d\u80fd\u88ab\u8bc6\u522b mkdocs server -f **/mkdocs.yml -a 192.168.1.10:8000 \u65f6\u9047\u5230\u5982\u4e0b\u62a5\u9519\uff1a us@kali:/note$ mkdocs serve -f /note/NetworkMind/mkdocs.yml -a 192.168.56.101:8000 INFO - Building documentation... ERROR - Config value: 'theme'. Error: Unrecognised theme name: 'amelia'. The available installed themes are: mkdocs, readthedocs Aborted with 2 Configuration Errors! \u95ee\u9898\u5206\u6790\uff1a amelia \u662f\u4e00\u4e2a\u4e3b\u9898\uff0c\u4f46mkdocs\u4e0d\u8ba4\u53ef\u3002\u53ea\u8ba4\u53ef readthedocs \u89e3\u51b3\u65b9\u6cd5\uff1a \u5378\u8f7dmkdocs(confirm pip\u662f2.7\u6216\u540c\u4e00\u7248\u672c\u73af\u5883\u4e0b\u64cd\u4f5c\u3002) pip uninstall mkdocs \u5b89\u6392mkdocs pip install mkdocs","title":"\u73af\u5883\u5e72\u6270\u4e3b\u9898"},{"location":"mkdocs/\u73af\u5883\u5e72\u6270\u4e3b\u9898/#_1","text":"mkdocs server -f **/mkdocs.yml -a 192.168.1.10:8000 \u65f6\u9047\u5230\u5982\u4e0b\u62a5\u9519\uff1a us@kali:/note$ mkdocs serve -f /note/NetworkMind/mkdocs.yml -a 192.168.56.101:8000 INFO - Building documentation... ERROR - Config value: 'theme'. Error: Unrecognised theme name: 'amelia'. The available installed themes are: mkdocs, readthedocs Aborted with 2 Configuration Errors!","title":"\u95ee\u9898\uff1a\u591a\u73af\u5883\u5e72\u6270\u9020\u6210\u4e3b\u9898\u4e0d\u80fd\u88ab\u8bc6\u522b"},{"location":"mkdocs/\u73af\u5883\u5e72\u6270\u4e3b\u9898/#_2","text":"amelia \u662f\u4e00\u4e2a\u4e3b\u9898\uff0c\u4f46mkdocs\u4e0d\u8ba4\u53ef\u3002\u53ea\u8ba4\u53ef readthedocs","title":"\u95ee\u9898\u5206\u6790\uff1a"},{"location":"mkdocs/\u73af\u5883\u5e72\u6270\u4e3b\u9898/#_3","text":"","title":"\u89e3\u51b3\u65b9\u6cd5\uff1a"},{"location":"mkdocs/\u73af\u5883\u5e72\u6270\u4e3b\u9898/#mkdocsconfirm-pip27","text":"pip uninstall mkdocs","title":"\u5378\u8f7dmkdocs(confirm pip\u662f2.7\u6216\u540c\u4e00\u7248\u672c\u73af\u5883\u4e0b\u64cd\u4f5c\u3002)"},{"location":"mkdocs/\u73af\u5883\u5e72\u6270\u4e3b\u9898/#mkdocs","text":"pip install mkdocs","title":"\u5b89\u6392mkdocs"},{"location":"program/Algorathm/whatisAlgorathm/","text":"\u7a0b\u5e8f\u4e0e\u7b97\u6cd5\u7684\u533a\u522b \u7a0b\u5e8f\u4e0e\u7b97\u6cd5\u7684\u533a\u522b \u7b97\u6cd5\u662f\u903b\u8f91\u5c42\u9762\uff0c\u7a0b\u5e8f\u662f\u7269\u7406\u5c42\u9762 \u7b97\u6cd5\u662f\u5bf9\u95ee\u9898\u89e3\u51b3\u7684\u5206\u6b65\uff08\u6b65\u9aa4\uff09\u63cf\u8ff0\u3002 \u7a0b\u5e8f\u5219\u662f\u91c7\u7528\u67d0\u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u3002 \u4e0d\u540c\u8bed\u8a00\u5b9e\u73b0\u540c\u4e00\u4e2a\u7b97\u6cd5\uff0c\u7b97\u6cd5\u4e0e\u7a0b\u5e8f\u5173\u7cfb1\uff1aN","title":"whatisAlgorathm"},{"location":"program/Algorathm/whatisAlgorathm/#_1","text":"\u7b97\u6cd5\u662f\u903b\u8f91\u5c42\u9762\uff0c\u7a0b\u5e8f\u662f\u7269\u7406\u5c42\u9762 \u7b97\u6cd5\u662f\u5bf9\u95ee\u9898\u89e3\u51b3\u7684\u5206\u6b65\uff08\u6b65\u9aa4\uff09\u63cf\u8ff0\u3002 \u7a0b\u5e8f\u5219\u662f\u91c7\u7528\u67d0\u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u3002 \u4e0d\u540c\u8bed\u8a00\u5b9e\u73b0\u540c\u4e00\u4e2a\u7b97\u6cd5\uff0c\u7b97\u6cd5\u4e0e\u7a0b\u5e8f\u5173\u7cfb1\uff1aN","title":"\u7a0b\u5e8f\u4e0e\u7b97\u6cd5\u7684\u533a\u522b"},{"location":"program/PythonProjects/autolucky/source/","text":"\u9996\u5148\u5f00\u59cb\uff1a\u627e\u5230hashid\u3002 \u67e5\u8be2\u662f\u5426\u53c2\u52a0\u4e86 \u53c2\u52a0 \u67e5\u53c2\u52a0 \u83b7\u53d6\u4e0b\u4e00\u4e2ahashid record.hashid \u9996\u5148\u5f00\u59cb\uff1a\u627e\u5230hashid\u3002 get GET https://api.neituixiaowangzi.com/api/lotteries/rand HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54\u62a5\u6587\uff1ahashid HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:05:52 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595765152|1595765152;Path=/ 1f { hashid : ow49qplckkmds8pw9k } 0 \u67e5\u8be2\u662f\u5426\u53c2\u52a0\u4e86 GET https://api.neituixiaowangzi.com/api/my/lotteries/ow49qplckkmds8pw9k/attend HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54\u62a5\u6587\uff1a HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:06:10 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595765170|1595765170;Path=/ 10 { record :false} 0 \u53c2\u52a0\u524d\uff1a POST https://api.neituixiaowangzi.com/api/lotteries/common/subscribe HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive Content-Length: 0 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54 HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:01:41 GMT Content-Type: application/json Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=fc90cf0e5e477fa8a2cb1866658c7956|1595764901|1595764901;Path=/ 10 { success :true} 0 \u53c2\u52a0 POST https://api.neituixiaowangzi.com/api/my/lotteries/m8gkmm4fq66pixegvm/draw HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive Content-Length: 37 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br { token : , share_type : , plan :1} HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:01:41 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595764901|1595764901;Path=/ 1e { state : doing , message : } 0 \u67e5\u53c2\u52a0 POST https://api.neituixiaowangzi.com/api/my/lotteries/m8gkmm4fq66pixegvm/draw-state HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive Content-Length: 0 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br ==\u7b54 HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:01:42 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595764902|1595764902;Path=/ 17f { id : 34104926 , lottery_id : 191317 , source : luck_lottery , platform : weixin , type : cash , lottery_userid : 17037182 , amount : 0 , is_win : 0 , creator : 5452439 , created : 1595764890 , updated : 1595764890 , user :{ id : 5452439 , wx_name : AIQ , gender : \u7537 , avatar : https:\\/\\/static.neituixiaowangzi.com\\/avatar\\/2019\\/04-28\\/084709685412008174.png , nickname : AIQ }} 0 \u83b7\u53d6\u4e0b\u4e00\u4e2ahashid record.hashid GET https://api.neituixiaowangzi.com/api/lotteries/vv73md3cl4xqsxqoq2/next-rand2 HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54\uff1ahashid=6dlplkxt233queojon HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:19:18 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595765958|1595765958;Path=/ 47b { hashid : 6dlplkxt233queojon , record :{ id : 191194 , inner_id : 45753 , hashid : 322j93wf2yx2uwdv94 , type : cash , source : voice_lottery , platform : weixin , is_advanced : 0 , count : 28 , join_count : 3946 , open_type : by_date , open_date : 1595946600 , open_count : 0 , status : created , summary : \u70b9\u51fb\u4e0b\u65b9\u201c\u53bb\u5173\u6ce8\u201d\u516c\u4f17\u53f7\u300e\u767d\u8272\u7684\u53ef\u4e50\u300f\\n\u300e1\u300f\u5f00\u5956\u524d\u52a0\u5fae\u4fe1\uff0c\u5956\u52b1\u7ffb\u500d\uff01\u5956\u52b1\u7ffb\u500d\uff01\\n\u300e2\u300f\\n\u300e3\u300f\u5176\u4ed6\u798f\u5229\u5728\u6587\u7ae0\u672b\u5c3e\u6709\u8bf4\u660e\\n\u5fae\u4fe1 1561116 , rich_text_summary : , one_click_copy : , grant_config : {} , seq : 0 , is_stick : 1 , audit_status : 1 , stick_start : 1595648027 , stick_end : 1596512027 , is_bind_xcx : 0 , xcx :null, limit_draw_count : 0 , limit_create_count : 0 , limit_city :null, limit_gender :null, is_share : 1 , enable_comment : 1 , enable_comment_message : 1 , enable_interstitial_ad : 1 , enable_reward_ad : 1 , enable_attend_ad : 0 , promotion_id : 9302 , promotion :{ id : 9302 , source : voice_lottery , promo_type : 0 , name : \u767d\u8272\u7684\u53ef\u4e50 , qrcode : public:\\/\\/lottery_promotion\\/2020\\/07-02\\/143932851103759293.jpg , remark :null, is_default : 1 , creator : 16 2c1 683349 , created : 1593671973 , updated : 1593671973 }, sponsored : 0 , is_delete : 0 , deletor :null, delete_msg :null, delete_time : 0 , settle_time :null, creator : 16683349 , created : 1595648027 , updated : 1595653057 , user :{ id : 16683349 , wx_name : \u9633\u5149\u4e0d\u9508 , username : \u9633\u5149\u4e0d\u9508-1593341861578 , gender : \u7537 , avatar : public:\\/\\/avatar\\/2020\\/06-28\\/185741734367151060.png , nickname : \u9633\u5149\u4e0d\u9508 }, ext :{ id : 136174 , lottery_id : 191194 , phrase :null, allot_mode : rand , amount : 2068 , refund_amount : 0 , red_package_id : 136576 }, exts :[{ id : 136174 , lottery_id : 191194 , phrase :null, allot_mode : rand , amount : 2068 , refund_amount : 0 , red_package_id : 136576 }]}} 0","title":"Source"},{"location":"program/PythonProjects/autolucky/source/#hashid","text":"get GET https://api.neituixiaowangzi.com/api/lotteries/rand HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54\u62a5\u6587\uff1ahashid HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:05:52 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595765152|1595765152;Path=/ 1f { hashid : ow49qplckkmds8pw9k } 0","title":"\u9996\u5148\u5f00\u59cb\uff1a\u627e\u5230hashid\u3002"},{"location":"program/PythonProjects/autolucky/source/#_1","text":"GET https://api.neituixiaowangzi.com/api/my/lotteries/ow49qplckkmds8pw9k/attend HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54\u62a5\u6587\uff1a HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:06:10 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595765170|1595765170;Path=/ 10 { record :false} 0 \u53c2\u52a0\u524d\uff1a POST https://api.neituixiaowangzi.com/api/lotteries/common/subscribe HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive Content-Length: 0 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54 HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:01:41 GMT Content-Type: application/json Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=fc90cf0e5e477fa8a2cb1866658c7956|1595764901|1595764901;Path=/ 10 { success :true} 0","title":"\u67e5\u8be2\u662f\u5426\u53c2\u52a0\u4e86"},{"location":"program/PythonProjects/autolucky/source/#_2","text":"POST https://api.neituixiaowangzi.com/api/my/lotteries/m8gkmm4fq66pixegvm/draw HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive Content-Length: 37 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br { token : , share_type : , plan :1} HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:01:41 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595764901|1595764901;Path=/ 1e { state : doing , message : } 0","title":"\u53c2\u52a0"},{"location":"program/PythonProjects/autolucky/source/#_3","text":"POST https://api.neituixiaowangzi.com/api/my/lotteries/m8gkmm4fq66pixegvm/draw-state HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive Content-Length: 0 User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br ==\u7b54 HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:01:42 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595764902|1595764902;Path=/ 17f { id : 34104926 , lottery_id : 191317 , source : luck_lottery , platform : weixin , type : cash , lottery_userid : 17037182 , amount : 0 , is_win : 0 , creator : 5452439 , created : 1595764890 , updated : 1595764890 , user :{ id : 5452439 , wx_name : AIQ , gender : \u7537 , avatar : https:\\/\\/static.neituixiaowangzi.com\\/avatar\\/2019\\/04-28\\/084709685412008174.png , nickname : AIQ }} 0","title":"\u67e5\u53c2\u52a0"},{"location":"program/PythonProjects/autolucky/source/#hashid-recordhashid","text":"GET https://api.neituixiaowangzi.com/api/lotteries/vv73md3cl4xqsxqoq2/next-rand2 HTTP/1.1 Host: api.neituixiaowangzi.com Connection: keep-alive User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat content-type: application/json x-client-key: luck_lottery x-client-type: release x-session-id: a2d7183b556df1ee3df7a120b8243957 Referer: https://servicewechat.com/wx558e4cb3c26e6076/306/page-frame.html Accept-Encoding: gzip, deflate, br \u5e94\u7b54\uff1ahashid=6dlplkxt233queojon HTTP/1.1 200 OK Date: Sun, 26 Jul 2020 12:19:18 GMT Content-Type: application/json;charset=UTF-8 Transfer-Encoding: chunked Connection: keep-alive X-Powered-By: PHP/7.1.29 Cache-Control: no-cache, private Strict-Transport-Security: max-age=63072000; includeSubdomains; Set-Cookie: SERVERID=91814f3ab6620b62f06a8af06ecb6313|1595765958|1595765958;Path=/ 47b { hashid : 6dlplkxt233queojon , record :{ id : 191194 , inner_id : 45753 , hashid : 322j93wf2yx2uwdv94 , type : cash , source : voice_lottery , platform : weixin , is_advanced : 0 , count : 28 , join_count : 3946 , open_type : by_date , open_date : 1595946600 , open_count : 0 , status : created , summary : \u70b9\u51fb\u4e0b\u65b9\u201c\u53bb\u5173\u6ce8\u201d\u516c\u4f17\u53f7\u300e\u767d\u8272\u7684\u53ef\u4e50\u300f\\n\u300e1\u300f\u5f00\u5956\u524d\u52a0\u5fae\u4fe1\uff0c\u5956\u52b1\u7ffb\u500d\uff01\u5956\u52b1\u7ffb\u500d\uff01\\n\u300e2\u300f\\n\u300e3\u300f\u5176\u4ed6\u798f\u5229\u5728\u6587\u7ae0\u672b\u5c3e\u6709\u8bf4\u660e\\n\u5fae\u4fe1 1561116 , rich_text_summary : , one_click_copy : , grant_config : {} , seq : 0 , is_stick : 1 , audit_status : 1 , stick_start : 1595648027 , stick_end : 1596512027 , is_bind_xcx : 0 , xcx :null, limit_draw_count : 0 , limit_create_count : 0 , limit_city :null, limit_gender :null, is_share : 1 , enable_comment : 1 , enable_comment_message : 1 , enable_interstitial_ad : 1 , enable_reward_ad : 1 , enable_attend_ad : 0 , promotion_id : 9302 , promotion :{ id : 9302 , source : voice_lottery , promo_type : 0 , name : \u767d\u8272\u7684\u53ef\u4e50 , qrcode : public:\\/\\/lottery_promotion\\/2020\\/07-02\\/143932851103759293.jpg , remark :null, is_default : 1 , creator : 16 2c1 683349 , created : 1593671973 , updated : 1593671973 }, sponsored : 0 , is_delete : 0 , deletor :null, delete_msg :null, delete_time : 0 , settle_time :null, creator : 16683349 , created : 1595648027 , updated : 1595653057 , user :{ id : 16683349 , wx_name : \u9633\u5149\u4e0d\u9508 , username : \u9633\u5149\u4e0d\u9508-1593341861578 , gender : \u7537 , avatar : public:\\/\\/avatar\\/2020\\/06-28\\/185741734367151060.png , nickname : \u9633\u5149\u4e0d\u9508 }, ext :{ id : 136174 , lottery_id : 191194 , phrase :null, allot_mode : rand , amount : 2068 , refund_amount : 0 , red_package_id : 136576 }, exts :[{ id : 136174 , lottery_id : 191194 , phrase :null, allot_mode : rand , amount : 2068 , refund_amount : 0 , red_package_id : 136576 }]}} 0","title":"\u83b7\u53d6\u4e0b\u4e00\u4e2ahashid  record.hashid"},{"location":"program/PythonProjects/automaticlottery/\u81ea\u52a8\u62bd\u5956/","text":"\u81ea\u52a8\u62bd\u5956 \u81ea\u52a8\u62bd\u5956 Python\u5199\u7684\uff0c\u7b80\u5355 \u4e3b\u8981\u901a\u8fc7\u6293\u53d6\u5176URL\u8fdb\u884c\u5206\u6790 \u901a\u8fc7\u6570\u636e\u67e5\u627e\u51fa\u54ea\u4e2aURL\u662f\u67e5\u8be2\u62bd\u5956\u7684\u7c7b\u578b\u3002\u6bd4\u5982\uff1a\u516c\u5171\uff0c\u81ea\u52a9\u62bd\u5956 GET\u7684\u5185\u5bb9\u6709\u54ea\u4e9b\uff0c\u54ea\u4e9b\u5185\u5bb9\u662f\u6211\u4eec\u9700\u8981\u7684 \u516c\u5171\u62bd\u5956\u5217\u8868 \u62bd\u5956\u7684ID\uff08\u53ef\u80fd\u7ed9URL\u4f7f\u7528\uff09 \u62bd\u5956\u7684\u72b6\u6001 \u62bd\u5956\u7684\u540d\u5b57 \u62bd\u5956\u7684\u6807\u8bc6\uff08\u53ea\u6709\u73a9\u6e38\u620f\u624d\u80fd\u62bd\u5956\u7b49\uff09 \u81ea\u52a9\u62bd\u5956\u5217\u8868\uff08\u540c\u4e0a\uff09 \u540c\u65f6\u8003\u8651\u662f\u5426\u4e00\u81f4\u3002 header\u53c2\u6570\u6709\u54ea\u4e9b \u62bd\u5956\u7684\u52a8\u4f5c\u7684URL\u662f\u600e\u6837\u7684\u3002 POST header\u53c2\u6570\u6709\u54ea\u4e9b \u9644\u5e26\u54ea\u4e9b\u53c2\u6570\uff08\u62bd\u5956\u7684ID) #!/usr/bin/python3 import requests def main(): url = https://lucky.nocode.com/v2/lottery/public #\u663e\u793a\u6240\u6709\u7684\u62bd\u6362\u7684URL headers = { # change your Authorization Authorization : Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjY1ODEzLCJpYXQiOjE1OTUwNjgxODgsImV4cCI6MTU5NTY3Mjk4OH0.-UMtvSDmX2nwHmmxhu97T2EqlUmJqP4lcBNUTmGWeqk , content - type : application / json , platform : wechat , Client - Version : 7.0.9 , User-Agent : Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat } # \u5f15\u53f7\u5185\u586b\u5199 res = requests.get(url, headers=headers) #\u53d6\u5f97\u8fd4\u56de\u503c public_info = res.json()['public'] #\u5df2Json\u683c\u5f0f\u540e\u7684\u503c\u8d4b square_info = res.json()['square'] for p_id in public_info: #\u7b2c\u4e00\u5c42\u7684\u952e\u503c\u6765\u8fed\u4ee3 if p_id['joined'] is True : print ('\u5df2\u79ef\u8d5e\u8fd0\u6c14:%s' % p_id['prizes']['data'][0]['name']) continue # https://lucky.nocode.com/v2/lottery/7YbkDyayyiY/join p_url = 'https://lucky.nocode.com/v2/lottery/%s/join' % p_id['id'] res=requests.post(p_url,headers=headers) data = res.json() if res.status_code == 200 and 'errors' not in data: print( lucky done : %s % (p_id['prizes']['data'][0]['name'])) else: print( Whoops something happened! ) for s_id in square_info: # https://lucky.nocode.com/v2/lottery/7YbkDyayyiY/join if s_id['joined'] is True: print ('\u5df2\u79ef\u8d5e\u8fd0\u6c14:%s' % s_id['prizes']['data'][0]['name']) '''s_id\u5c31\u5df2\u7ecf\u662f\u5177\u4f53\u62bd\u5956\u7684\u4fe1\u606f\u5566\uff0c\u542b\u6709\u5f88\u591a\u4fe1\u606f\uff0c\u62bd\u5956\u4e0e\u5426\uff0c\u62bd\u5956\u540d\u79f0\uff0c[0]\u662f\u8868\u793a{}\u7684\u5217\u8868\uff1f\uff0c\u662f\u4e00\u5c42\u5c42\u5217\u8868\u952e\u503c''' continue s_url = 'https://lucky.nocode.com/v2/lottery/%s/join' % s_id['id'] #\u751f\u6210\u63d0\u4ea4\u62bd\u5956\u7684URL res = requests.post(s_url, headers=headers) data = res.json() if res.status_code == 200 and 'errors' not in data: print( lucky done : %s % (s_id['prizes']['data'][0]['name'])) else: print( Whoops something happened! ) if __name__ == '__main__': main()","title":"\u81ea\u52a8\u62bd\u5956"},{"location":"program/PythonProjects/automaticlottery/\u81ea\u52a8\u62bd\u5956/#_1","text":"Python\u5199\u7684\uff0c\u7b80\u5355 \u4e3b\u8981\u901a\u8fc7\u6293\u53d6\u5176URL\u8fdb\u884c\u5206\u6790 \u901a\u8fc7\u6570\u636e\u67e5\u627e\u51fa\u54ea\u4e2aURL\u662f\u67e5\u8be2\u62bd\u5956\u7684\u7c7b\u578b\u3002\u6bd4\u5982\uff1a\u516c\u5171\uff0c\u81ea\u52a9\u62bd\u5956 GET\u7684\u5185\u5bb9\u6709\u54ea\u4e9b\uff0c\u54ea\u4e9b\u5185\u5bb9\u662f\u6211\u4eec\u9700\u8981\u7684 \u516c\u5171\u62bd\u5956\u5217\u8868 \u62bd\u5956\u7684ID\uff08\u53ef\u80fd\u7ed9URL\u4f7f\u7528\uff09 \u62bd\u5956\u7684\u72b6\u6001 \u62bd\u5956\u7684\u540d\u5b57 \u62bd\u5956\u7684\u6807\u8bc6\uff08\u53ea\u6709\u73a9\u6e38\u620f\u624d\u80fd\u62bd\u5956\u7b49\uff09 \u81ea\u52a9\u62bd\u5956\u5217\u8868\uff08\u540c\u4e0a\uff09 \u540c\u65f6\u8003\u8651\u662f\u5426\u4e00\u81f4\u3002 header\u53c2\u6570\u6709\u54ea\u4e9b \u62bd\u5956\u7684\u52a8\u4f5c\u7684URL\u662f\u600e\u6837\u7684\u3002 POST header\u53c2\u6570\u6709\u54ea\u4e9b \u9644\u5e26\u54ea\u4e9b\u53c2\u6570\uff08\u62bd\u5956\u7684ID) #!/usr/bin/python3 import requests def main(): url = https://lucky.nocode.com/v2/lottery/public #\u663e\u793a\u6240\u6709\u7684\u62bd\u6362\u7684URL headers = { # change your Authorization Authorization : Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjY1ODEzLCJpYXQiOjE1OTUwNjgxODgsImV4cCI6MTU5NTY3Mjk4OH0.-UMtvSDmX2nwHmmxhu97T2EqlUmJqP4lcBNUTmGWeqk , content - type : application / json , platform : wechat , Client - Version : 7.0.9 , User-Agent : Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36 MicroMessenger/7.0.9.501 NetType/WIFI MiniProgramEnv/Windows WindowsWechat } # \u5f15\u53f7\u5185\u586b\u5199 res = requests.get(url, headers=headers) #\u53d6\u5f97\u8fd4\u56de\u503c public_info = res.json()['public'] #\u5df2Json\u683c\u5f0f\u540e\u7684\u503c\u8d4b square_info = res.json()['square'] for p_id in public_info: #\u7b2c\u4e00\u5c42\u7684\u952e\u503c\u6765\u8fed\u4ee3 if p_id['joined'] is True : print ('\u5df2\u79ef\u8d5e\u8fd0\u6c14:%s' % p_id['prizes']['data'][0]['name']) continue # https://lucky.nocode.com/v2/lottery/7YbkDyayyiY/join p_url = 'https://lucky.nocode.com/v2/lottery/%s/join' % p_id['id'] res=requests.post(p_url,headers=headers) data = res.json() if res.status_code == 200 and 'errors' not in data: print( lucky done : %s % (p_id['prizes']['data'][0]['name'])) else: print( Whoops something happened! ) for s_id in square_info: # https://lucky.nocode.com/v2/lottery/7YbkDyayyiY/join if s_id['joined'] is True: print ('\u5df2\u79ef\u8d5e\u8fd0\u6c14:%s' % s_id['prizes']['data'][0]['name']) '''s_id\u5c31\u5df2\u7ecf\u662f\u5177\u4f53\u62bd\u5956\u7684\u4fe1\u606f\u5566\uff0c\u542b\u6709\u5f88\u591a\u4fe1\u606f\uff0c\u62bd\u5956\u4e0e\u5426\uff0c\u62bd\u5956\u540d\u79f0\uff0c[0]\u662f\u8868\u793a{}\u7684\u5217\u8868\uff1f\uff0c\u662f\u4e00\u5c42\u5c42\u5217\u8868\u952e\u503c''' continue s_url = 'https://lucky.nocode.com/v2/lottery/%s/join' % s_id['id'] #\u751f\u6210\u63d0\u4ea4\u62bd\u5956\u7684URL res = requests.post(s_url, headers=headers) data = res.json() if res.status_code == 200 and 'errors' not in data: print( lucky done : %s % (s_id['prizes']['data'][0]['name'])) else: print( Whoops something happened! ) if __name__ == '__main__': main()","title":"\u81ea\u52a8\u62bd\u5956"},{"location":"program/basic/time/","text":"\u65f6\u95f4\u5e93\uff1a \u5e38\u7528\u65b9\u6cd5\uff1a time.time() time.localtime([Seconds]) time.gmtime([Secs]) time.mktime(t)\u5c06stuct_time\u8f6c\u5316\u6210\u65f6\u95f4\u6233 time.sleep(Secs) \u7ebf\u7a0b\u63a8\u8fdf\u6307\u5b9a\u7684\u65f6\u95f4\u540e\u518d\u8fd0\u884c\u3002\u7761\u7720\u65f6\u95f4 time.clock() \u51fd\u6570\u8fd4\u56de\u5f53\u524dCPU\u65f6\u95f4\uff0c\u6216\u8005\u4ece\u8fdb\u884c\u8fd0\u884c\u622a\u81f3\u7ed3\u675f\u6216\u8005\u4ece\u7b2c\u4e00\u6b21\u8c03\u7528\u5230\u73b0\u5728\u7684\u771f\u5b9e\u65f6\u957f \u65f6\u95f4\u5e93\uff1a dir (time) ['CLOCK_MONOTONIC', 'CLOCK_MONOTONIC_RAW', 'CLOCK_PROCESS_CPUTIME_ID', 'CLOCK_REALTIME', 'CLOCK_THREAD_CPUTIME_ID', '_STRUCT_TM_ITEMS', '__doc__', '__loader__', '__name__', '__package__', '__spec__', 'altzone', 'asctime', 'clock', 'clock_getres', 'clock_gettime', 'clock_settime', 'ctime', 'daylight', 'get_clock_info', 'gmtime', 'localtime', 'mktime', 'monotonic', 'perf_counter', 'process_time', 'sleep', 'strftime', 'strptime', 'struct_time', 'time', 'timezone', 'tzname', 'tzset'] \u5e38\u7528\u65b9\u6cd5\uff1a time.time() \u663e\u793a\u5f53\u524d\u65f6\u95f4\u6233\u3002 time.time() 1595662634.6728134 \u663e\u793a\u4e3a\u6574\u6570\u7684\u79d2\u3002 int(time.time()) 1595662640 time.localtime([Seconds]) \u5c06\u65f6\u95f4\u6233\u8f6c\u6362\u6210 \u201c\u5f53\u524d\u65f6\u533a\u201d \u7684struct_time\uff08\u7ed3\u6784\u5316\u6570\u636e\uff09\u3002\u663e\u793a\u4e3a\u65f6\u95f4\u6570\u7ec4\u6a21\u5f0f\u7684\u65f6\u95f4\u3002 \u53c2\u6570\uff1aSecs \u2013\u79d2\u6570[\u9ed8\u8ba4\u4e3a time.time() ]\uff0c\u7528\u6765\u8f6c\u6362\u4e3a time.struct_time \u7c7b\u578b\u7684\u5bf9\u8c61 \u7ed9\u5b9a\u53c2\u6570 time.localtime(time.time()) time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=15, tm_min=40, tm_sec=50, tm_wday=5, tm_yday=207, tm_isdst=0) \u4e0d\u7ed9\u53c2\u6570 time.localtime() time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=15, tm_min=40, tm_sec=38, tm_wday=5, tm_yday=207, tm_isdst=0) \u8c03\u7528\u5176\u4e2d\u7684\u6570\u636e,\u5982\u5e74\uff0c\u6708\u3002 time.localtime().tm_year 2020 time.localtime().tm_mon 7 time.gmtime([Secs]) \u4e0e time.localtime() \u7c7b\u4f3c\uff0c\u4f46\u6b64\u5904\u4e3a\u5c06\u65f6\u95f4\u6233\u8f6c\u6362\u6210UTC\u65f6\u533a\uff080\u65f6\u533a\uff09\u7684struct_time\u5bf9\u8c61\uff08struct_time\u662ftime\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684\u5bf9\u8c61\uff09\u3002 \u53c2\u6570Secs\uff1a\u53ef\u4ee5\u662f\u4ece1970-1-1 00:00:00\u4ee5\u6765\u7684\u79d2\u6570\u3002\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u6233 time.time() \u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u4e0a\u9762\u7684\u6765\u8c03\u7528struct_time\u7684\u5c5e\u6027\u3002 time.gmtime() time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=9, tm_min=2, tm_sec=16, tm_wday=5, tm_yday=207, tm_isdst=0) time.gmtime(1595662634.6728134) time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=7, tm_min=37, tm_sec=14, tm_wday=5, tm_yday=207, tm_isdst=0) time.gmtime(time.time()); time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=9, tm_min=3, tm_sec=3, tm_wday=5, tm_yday=207, tm_isdst=0) time.mktime(t) \u5c06stuct_time\u8f6c\u5316\u6210\u65f6\u95f4\u6233 time.mktime \u662fgmtime(),localtime()\u9006\u5411\u64cd\u4f5c\u3002stuct_time\u8f6c\u5316\u6210\u65f6\u95f4\u6233 \u53c2\u6570\uff1at -\u7ed3\u6784\u5316\u65f6\u95f4\uff0c\u6216\u8005\u5b8c\u6574\u76849\u4f4d\u5143\u7ec4\u5143\u7d20\u3002 time.localtime() time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=17, tm_min=8, tm_sec=43, tm_wday=5, tm_yday=207, tm_isdst=0) time.mktime(time.localtime()) 1595668133.0 time.sleep(Secs) \u7ebf\u7a0b\u63a8\u8fdf\u6307\u5b9a\u7684\u65f6\u95f4\u540e\u518d\u8fd0\u884c\u3002\u7761\u7720\u65f6\u95f4 \u53c2\u6570\uff1a Secs -\u79d2\u6570\uff0ctype : float or int Help on built-in function sleep in module time: sleep(...) sleep(seconds) Delay execution for a given number of seconds. The argument may be a floating point number for subsecond precision. time.sleep(2.1) [root@mysql tmp]# cat time.py import time print (time.time()) time.sleep(2.3) print (time.time()) [root@mysql tmp]# py time.py 1595660979.5029752 1595660981.8056316 time.clock() \u51fd\u6570\u8fd4\u56de\u5f53\u524dCPU\u65f6\u95f4\uff0c\u6216\u8005\u4ece\u8fdb\u884c\u8fd0\u884c\u622a\u81f3\u7ed3\u675f\u6216\u8005\u4ece\u7b2c\u4e00\u6b21\u8c03\u7528\u5230\u73b0\u5728\u7684\u771f\u5b9e\u65f6\u957f Help on built-in function clock in module time: clock(...) clock() - floating point number Return the CPU time or real time since the start of the process or since the first call to clock(). This has as much precision as the system records.","title":"Time"},{"location":"program/basic/time/#_1","text":"dir (time) ['CLOCK_MONOTONIC', 'CLOCK_MONOTONIC_RAW', 'CLOCK_PROCESS_CPUTIME_ID', 'CLOCK_REALTIME', 'CLOCK_THREAD_CPUTIME_ID', '_STRUCT_TM_ITEMS', '__doc__', '__loader__', '__name__', '__package__', '__spec__', 'altzone', 'asctime', 'clock', 'clock_getres', 'clock_gettime', 'clock_settime', 'ctime', 'daylight', 'get_clock_info', 'gmtime', 'localtime', 'mktime', 'monotonic', 'perf_counter', 'process_time', 'sleep', 'strftime', 'strptime', 'struct_time', 'time', 'timezone', 'tzname', 'tzset']","title":"\u65f6\u95f4\u5e93\uff1a"},{"location":"program/basic/time/#_2","text":"","title":"\u5e38\u7528\u65b9\u6cd5\uff1a"},{"location":"program/basic/time/#timetime","text":"\u663e\u793a\u5f53\u524d\u65f6\u95f4\u6233\u3002 time.time() 1595662634.6728134 \u663e\u793a\u4e3a\u6574\u6570\u7684\u79d2\u3002 int(time.time()) 1595662640","title":"time.time()"},{"location":"program/basic/time/#timelocaltimeseconds","text":"\u5c06\u65f6\u95f4\u6233\u8f6c\u6362\u6210 \u201c\u5f53\u524d\u65f6\u533a\u201d \u7684struct_time\uff08\u7ed3\u6784\u5316\u6570\u636e\uff09\u3002\u663e\u793a\u4e3a\u65f6\u95f4\u6570\u7ec4\u6a21\u5f0f\u7684\u65f6\u95f4\u3002 \u53c2\u6570\uff1aSecs \u2013\u79d2\u6570[\u9ed8\u8ba4\u4e3a time.time() ]\uff0c\u7528\u6765\u8f6c\u6362\u4e3a time.struct_time \u7c7b\u578b\u7684\u5bf9\u8c61 \u7ed9\u5b9a\u53c2\u6570 time.localtime(time.time()) time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=15, tm_min=40, tm_sec=50, tm_wday=5, tm_yday=207, tm_isdst=0) \u4e0d\u7ed9\u53c2\u6570 time.localtime() time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=15, tm_min=40, tm_sec=38, tm_wday=5, tm_yday=207, tm_isdst=0) \u8c03\u7528\u5176\u4e2d\u7684\u6570\u636e,\u5982\u5e74\uff0c\u6708\u3002 time.localtime().tm_year 2020 time.localtime().tm_mon 7","title":"time.localtime([Seconds])"},{"location":"program/basic/time/#timegmtimesecs","text":"\u4e0e time.localtime() \u7c7b\u4f3c\uff0c\u4f46\u6b64\u5904\u4e3a\u5c06\u65f6\u95f4\u6233\u8f6c\u6362\u6210UTC\u65f6\u533a\uff080\u65f6\u533a\uff09\u7684struct_time\u5bf9\u8c61\uff08struct_time\u662ftime\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684\u5bf9\u8c61\uff09\u3002 \u53c2\u6570Secs\uff1a\u53ef\u4ee5\u662f\u4ece1970-1-1 00:00:00\u4ee5\u6765\u7684\u79d2\u6570\u3002\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u6233 time.time() \u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u4e0a\u9762\u7684\u6765\u8c03\u7528struct_time\u7684\u5c5e\u6027\u3002 time.gmtime() time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=9, tm_min=2, tm_sec=16, tm_wday=5, tm_yday=207, tm_isdst=0) time.gmtime(1595662634.6728134) time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=7, tm_min=37, tm_sec=14, tm_wday=5, tm_yday=207, tm_isdst=0) time.gmtime(time.time()); time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=9, tm_min=3, tm_sec=3, tm_wday=5, tm_yday=207, tm_isdst=0)","title":"time.gmtime([Secs])"},{"location":"program/basic/time/#timemktimetstuct_time","text":"time.mktime \u662fgmtime(),localtime()\u9006\u5411\u64cd\u4f5c\u3002stuct_time\u8f6c\u5316\u6210\u65f6\u95f4\u6233 \u53c2\u6570\uff1at -\u7ed3\u6784\u5316\u65f6\u95f4\uff0c\u6216\u8005\u5b8c\u6574\u76849\u4f4d\u5143\u7ec4\u5143\u7d20\u3002 time.localtime() time.struct_time(tm_year=2020, tm_mon=7, tm_mday=25, tm_hour=17, tm_min=8, tm_sec=43, tm_wday=5, tm_yday=207, tm_isdst=0) time.mktime(time.localtime()) 1595668133.0","title":"time.mktime(t)\u5c06stuct_time\u8f6c\u5316\u6210\u65f6\u95f4\u6233"},{"location":"program/basic/time/#timesleepsecs","text":"\u53c2\u6570\uff1a Secs -\u79d2\u6570\uff0ctype : float or int Help on built-in function sleep in module time: sleep(...) sleep(seconds) Delay execution for a given number of seconds. The argument may be a floating point number for subsecond precision. time.sleep(2.1) [root@mysql tmp]# cat time.py import time print (time.time()) time.sleep(2.3) print (time.time()) [root@mysql tmp]# py time.py 1595660979.5029752 1595660981.8056316","title":"time.sleep(Secs) \u7ebf\u7a0b\u63a8\u8fdf\u6307\u5b9a\u7684\u65f6\u95f4\u540e\u518d\u8fd0\u884c\u3002\u7761\u7720\u65f6\u95f4"},{"location":"program/basic/time/#timeclock-cpu","text":"Help on built-in function clock in module time: clock(...) clock() - floating point number Return the CPU time or real time since the start of the process or since the first call to clock(). This has as much precision as the system records.","title":"time.clock() \u51fd\u6570\u8fd4\u56de\u5f53\u524dCPU\u65f6\u95f4\uff0c\u6216\u8005\u4ece\u8fdb\u884c\u8fd0\u884c\u622a\u81f3\u7ed3\u675f\u6216\u8005\u4ece\u7b2c\u4e00\u6b21\u8c03\u7528\u5230\u73b0\u5728\u7684\u771f\u5b9e\u65f6\u957f"},{"location":"program/jupyter/# IPythonJupyter Notebooks for Oracle/","text":"IPython/Jupyter Notebooks for Oracle Posted by Luca Canali on Tuesday, 7 June 2016 Topic: In this short post you can find examples of how to use IPython/Jupyter notebooks for running SQL on Oracle. IPython/Jupyter notebooks are one of the leading free platforms for data analysis, with many advantages, notably the interactive web-based interface and a large ecosystem of readily available packages for data analysis and visualization . Moreover IPython/Jupyter notebooks are a very handy format for sharing code and data as you will see in the examples. See also this blog post with examples on how to use Jupyter for querying Apache Impala . It is of interest to integrate many data sources into Jupyter notebooks to make the platform versatile and to fulfill many different use cases. In this short post you can find examples of how to query data from Oracle databases using IPython and Jupyter notebooks and simple examples of the integration with pandas and matplotlib . Notebook Short description Oracle_IPython_sqlplus Examples of how to use sqlplus inside Jupyter notebooks. It is based on the use of %%bash cell magic and here documents to wrap up sqlplus inside Jupyter cells. Oracle_IPython_cx_Oracle_pandas Examples of how to query Oracle from Python using cx_Oracle and how to integrate with pandas and visualization with matplotlib. Oracle_IPython_SQL_magic Examples of how to query Oracle using %sql line magic (or %%sql cell magic) and the integration with cx_Oracle and pandas. Dependencies and pointers to build a test environment: Install IPython and Jupyter . The following assumes Anaconda from Continuum Analytics) Install the Oracle client Download the software from OTN: http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html On that same link you can find the installation instructions (scroll down by the end of the page) Example of the actions: perform ln -s libclntsh.so.12.1 libclntsh.so (12c version) and export LD_LIBRARY_PATH={oracle client home} I have tested this with Oracle client versions 12.1.0.2 and 11.2.0.4 on Linux Post client installation: set environment: export ORACLE_HOME={path to the Oracle client installation} If not already installed, install libaio (yum install libaio) Check that the Oracle client works and all dependencies are set by running sqlplus from the Oracle client home, example: check client connectivity with: sqlplus username/ password@dbserver :port/service_name Install cx_Oracle , for example with pip install cx_Oracle Install ipython-sql download from https://github.com/LucaCanali/ipython-sql cd ipython-sql and (sudo) python setup.py install Optionally install the official version on PyPi using pip install ipython-sql","title":"[IPython/Jupyter Notebooks for Oracle](https://db-blog.web.cern.ch/blog/luca-canali/2016-06-ipythonjupyter-notebooks-oracle)"},{"location":"program/jupyter/# IPythonJupyter Notebooks for Oracle/#ipythonjupyter-notebooks-for-oracle","text":"Posted by Luca Canali on Tuesday, 7 June 2016 Topic: In this short post you can find examples of how to use IPython/Jupyter notebooks for running SQL on Oracle. IPython/Jupyter notebooks are one of the leading free platforms for data analysis, with many advantages, notably the interactive web-based interface and a large ecosystem of readily available packages for data analysis and visualization . Moreover IPython/Jupyter notebooks are a very handy format for sharing code and data as you will see in the examples. See also this blog post with examples on how to use Jupyter for querying Apache Impala . It is of interest to integrate many data sources into Jupyter notebooks to make the platform versatile and to fulfill many different use cases. In this short post you can find examples of how to query data from Oracle databases using IPython and Jupyter notebooks and simple examples of the integration with pandas and matplotlib . Notebook Short description Oracle_IPython_sqlplus Examples of how to use sqlplus inside Jupyter notebooks. It is based on the use of %%bash cell magic and here documents to wrap up sqlplus inside Jupyter cells. Oracle_IPython_cx_Oracle_pandas Examples of how to query Oracle from Python using cx_Oracle and how to integrate with pandas and visualization with matplotlib. Oracle_IPython_SQL_magic Examples of how to query Oracle using %sql line magic (or %%sql cell magic) and the integration with cx_Oracle and pandas. Dependencies and pointers to build a test environment: Install IPython and Jupyter . The following assumes Anaconda from Continuum Analytics) Install the Oracle client Download the software from OTN: http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html On that same link you can find the installation instructions (scroll down by the end of the page) Example of the actions: perform ln -s libclntsh.so.12.1 libclntsh.so (12c version) and export LD_LIBRARY_PATH={oracle client home} I have tested this with Oracle client versions 12.1.0.2 and 11.2.0.4 on Linux Post client installation: set environment: export ORACLE_HOME={path to the Oracle client installation} If not already installed, install libaio (yum install libaio) Check that the Oracle client works and all dependencies are set by running sqlplus from the Oracle client home, example: check client connectivity with: sqlplus username/ password@dbserver :port/service_name Install cx_Oracle , for example with pip install cx_Oracle Install ipython-sql download from https://github.com/LucaCanali/ipython-sql cd ipython-sql and (sudo) python setup.py install Optionally install the official version on PyPi using pip install ipython-sql","title":"IPython/Jupyter Notebooks for Oracle"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/","text":"Here\u2019s How to Run SQL in Jupyter Notebooks Jupyter Notebooks as a SQL IDE? Dario Rade\u010di\u0107 Follow Jan 19 \u00b7 5 min read Let\u2019s face the facts \u2014 databases are everywhere. Even though, when learning data science you\u2019ve only dealt with CSVs, that will hardly resemble reality since most companies tend to store data into databases. In today\u2019s article, I quickly want to go over the concept of using Jupyter Notebooks or JupyterLab as a SQL IDE. Prior to this, I\u2019ve worked with various Python libraries to connect to the database, but this nifty little trick will save you a bunch of time and typing. After reading the article you will be able to execute any SQL query/procedure directly through the Notebook, and also to store the result of any query to a variable you can then use later in your analysis. I don\u2019t want to dwell any more with the intro, let\u2019s jump straight into the good stuff. A bit of Setup To begin, you\u2019ll need to install one library to make sure you can run SQL directly in the Notebooks, so paste the following into any Jupyter cell: !pip install ipython-sql When writing the article I was dealing with the Oracle database . If you are also, make sure cx_Oracle is installed. If not just quickly look online for a required library. In my opinion, those would be: pyodbc \u2014 for SQL Server mysql \u2014 for MySQL psycopg2 \u2014 for PostgreSQL Now we will use the sqlalchemy library to create an engine needed to connect to the database. This will be required only once per connection string \u2014 meaning you won\u2019t have to do it each time when making a connection. Here are some general-looking connection strings for various databases: PostgreSQL : postgresql://scott:tiger@localhost/mydatabase MySQL : mysql://scott:tiger@localhost/foo Oracle : oracle://scott:tiger@127.0.0.1:1521/sidname SQL Server: mssql+pyodbc://scott:tiger@mydsn SQLite: sqlite:///foo.db Here\u2019 an example for Oracle DB: Now we can load in previously installed SQL module: And connect to the database with a connection string specified earlier. Notice how the column content is prefixed with the percent sign : If you\u2019ve got the same output as I did it means that everything went well and you are good to proceed! Let\u2019s Begin Okay, now you\u2019re ready to go. To start out I\u2019ll show how to pass a multi-line SQL query to a Juypter cell. Without this magic commands, you would have to import various libraries, make a connection to the database, surround the query with brackets and then execute it, but now it\u2019s just a matter of prefixing the code with %%sql or %sql which I will demonstrate below. Mark entire cell as a SQL block Let\u2019s start with this one, as it will allow you to enter multi-line SQL statements. The only requirement is to make a %%sql prefix on the start. I\u2019ve decided to select the first five rows from some table: And yeah, that\u2019s it! If you were to execute this cell this is the output you\u2019d get: It kind of looks like a Pandas DataFrame, but it isn\u2019t, it only showcases how the table looks. Single Line Statements \u2014 Store result to a Variable You are not limited to multi-line statements, and you can store the result of a SQL query to a variable. Here you will have only one percent sign instead of two: %sql Let\u2019s see this in action \u2014 I\u2019m going to select a single value from a phone_number column: You can see that if I print it, the output isn\u2019t something you\u2019d expect, and here\u2019s how to address that issue: It was just a matter of simple indexing, nothing to be worried about. What else can you do? It\u2019s been all fun and games until now, but you might be wondering what else ipython-sql can provide to us. Well, a lot, and I\u2019m gonna cover two things. This won't blow your mind but are a good thing to know. Let\u2019s start. Converting to Pandas DataFrame It\u2019s just one nice additional feature of ipython-sql saving you a bit of time so you don\u2019t have to make the conversion manually. I will select some set of data from the database and then call .DataFrame() method of it: We can now check both the DataFrame and its type, just to verify everything is as expected: Yeah, the data look right, the type is okay, so we can proceed. Plotting Let\u2019s say you\u2019re in a hurry and want to quickly fetch some data from a database and make a bar chart. To demonstrate, I\u2019ll import matplotlib and make everything a bit bigger just for the sake of it, and then store a result of some SQL query to a variable. Once done, you can call .bar() method to make a bar chart: And the corresponding plot would look like this: That\u2019s quite nice for just a line of code, plotting-wise. Note that you could also use .pie() to show a pie chart \u2014 feel free to look for other options on your own. Before you go I don\u2019t think that anything from the article had a wow-factor for you, but I also hope that you can appreciate the simplicity of performing database queries in this format. This could also be an alternative to standard SQL IDE\u2019s if performing queries is all you do and there\u2019s no need for anything more advanced. Anyhow, I hope you\u2019ve managed to get something useful from the article. Thanks for reading.","title":"Here\u2019s How to Run SQL in Jupyter Notebooks"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#heres-how-to-run-sql-in-jupyter-notebooks","text":"","title":"Here\u2019s How to Run SQL in Jupyter Notebooks"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#jupyter-notebooks-as-a-sql-ide","text":"Dario Rade\u010di\u0107 Follow Jan 19 \u00b7 5 min read Let\u2019s face the facts \u2014 databases are everywhere. Even though, when learning data science you\u2019ve only dealt with CSVs, that will hardly resemble reality since most companies tend to store data into databases. In today\u2019s article, I quickly want to go over the concept of using Jupyter Notebooks or JupyterLab as a SQL IDE. Prior to this, I\u2019ve worked with various Python libraries to connect to the database, but this nifty little trick will save you a bunch of time and typing. After reading the article you will be able to execute any SQL query/procedure directly through the Notebook, and also to store the result of any query to a variable you can then use later in your analysis. I don\u2019t want to dwell any more with the intro, let\u2019s jump straight into the good stuff.","title":"Jupyter Notebooks as a SQL IDE?"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#a-bit-of-setup","text":"To begin, you\u2019ll need to install one library to make sure you can run SQL directly in the Notebooks, so paste the following into any Jupyter cell: !pip install ipython-sql When writing the article I was dealing with the Oracle database . If you are also, make sure cx_Oracle is installed. If not just quickly look online for a required library. In my opinion, those would be: pyodbc \u2014 for SQL Server mysql \u2014 for MySQL psycopg2 \u2014 for PostgreSQL Now we will use the sqlalchemy library to create an engine needed to connect to the database. This will be required only once per connection string \u2014 meaning you won\u2019t have to do it each time when making a connection. Here are some general-looking connection strings for various databases: PostgreSQL : postgresql://scott:tiger@localhost/mydatabase MySQL : mysql://scott:tiger@localhost/foo Oracle : oracle://scott:tiger@127.0.0.1:1521/sidname SQL Server: mssql+pyodbc://scott:tiger@mydsn SQLite: sqlite:///foo.db Here\u2019 an example for Oracle DB: Now we can load in previously installed SQL module: And connect to the database with a connection string specified earlier. Notice how the column content is prefixed with the percent sign : If you\u2019ve got the same output as I did it means that everything went well and you are good to proceed!","title":"A bit of Setup"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#lets-begin","text":"Okay, now you\u2019re ready to go. To start out I\u2019ll show how to pass a multi-line SQL query to a Juypter cell. Without this magic commands, you would have to import various libraries, make a connection to the database, surround the query with brackets and then execute it, but now it\u2019s just a matter of prefixing the code with %%sql or %sql which I will demonstrate below.","title":"Let\u2019s Begin"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#mark-entire-cell-as-a-sql-block","text":"Let\u2019s start with this one, as it will allow you to enter multi-line SQL statements. The only requirement is to make a %%sql prefix on the start. I\u2019ve decided to select the first five rows from some table: And yeah, that\u2019s it! If you were to execute this cell this is the output you\u2019d get: It kind of looks like a Pandas DataFrame, but it isn\u2019t, it only showcases how the table looks.","title":"Mark entire cell as a SQL block"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#single-line-statements-store-result-to-a-variable","text":"You are not limited to multi-line statements, and you can store the result of a SQL query to a variable. Here you will have only one percent sign instead of two: %sql Let\u2019s see this in action \u2014 I\u2019m going to select a single value from a phone_number column: You can see that if I print it, the output isn\u2019t something you\u2019d expect, and here\u2019s how to address that issue: It was just a matter of simple indexing, nothing to be worried about.","title":"Single Line Statements \u2014 Store result to a Variable"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#what-else-can-you-do","text":"It\u2019s been all fun and games until now, but you might be wondering what else ipython-sql can provide to us. Well, a lot, and I\u2019m gonna cover two things. This won't blow your mind but are a good thing to know. Let\u2019s start.","title":"What else can you do?"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#converting-to-pandas-dataframe","text":"It\u2019s just one nice additional feature of ipython-sql saving you a bit of time so you don\u2019t have to make the conversion manually. I will select some set of data from the database and then call .DataFrame() method of it: We can now check both the DataFrame and its type, just to verify everything is as expected: Yeah, the data look right, the type is okay, so we can proceed.","title":"Converting to Pandas DataFrame"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#plotting","text":"Let\u2019s say you\u2019re in a hurry and want to quickly fetch some data from a database and make a bar chart. To demonstrate, I\u2019ll import matplotlib and make everything a bit bigger just for the sake of it, and then store a result of some SQL query to a variable. Once done, you can call .bar() method to make a bar chart: And the corresponding plot would look like this: That\u2019s quite nice for just a line of code, plotting-wise. Note that you could also use .pie() to show a pie chart \u2014 feel free to look for other options on your own.","title":"Plotting"},{"location":"program/jupyter/Here\u2019s How to Run SQL in Jupyter Notebooks/#before-you-go","text":"I don\u2019t think that anything from the article had a wow-factor for you, but I also hope that you can appreciate the simplicity of performing database queries in this format. This could also be an alternative to standard SQL IDE\u2019s if performing queries is all you do and there\u2019s no need for anything more advanced. Anyhow, I hope you\u2019ve managed to get something useful from the article. Thanks for reading.","title":"Before you go"},{"location":"program/jupyter/Support export format as PDF/","text":"Support export format as PDF Install pandocs Support export format as PDF Install pandocs pip install pandocs Error and Solve WARNING: You are using pip version 20.2.1; however, version 20.2.2 is available. You should consider upgrading via the '/usr/bin/python3 -m pip install --upgrade pip' command. Solve python3 -m pip install --upgrade pip Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple Collecting pip Downloading https://pypi.tuna.tsinghua.edu.cn/packages/5a/4a/39400ff9b36e719bdf8f31c99fe1fa7842a42fa77432e584f707a5080063/pip-20.2.2-py2.py3-none-any.whl (1.5 MB) |????????????????????????????????| 1.5 MB 780 kB/s Installing collected packages: pip Attempting uninstall: pip Found existing installation: pip 20.2.1 Uninstalling pip-20.2.1: Successfully uninstalled pip-20.2.1 Successfully installed pip-20.2.2","title":"Support export format as PDF"},{"location":"program/jupyter/Support export format as PDF/#support-export-format-as-pdf","text":"","title":"Support export format as PDF"},{"location":"program/jupyter/Support export format as PDF/#install-pandocs","text":"pip install pandocs Error and Solve WARNING: You are using pip version 20.2.1; however, version 20.2.2 is available. You should consider upgrading via the '/usr/bin/python3 -m pip install --upgrade pip' command. Solve python3 -m pip install --upgrade pip Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple Collecting pip Downloading https://pypi.tuna.tsinghua.edu.cn/packages/5a/4a/39400ff9b36e719bdf8f31c99fe1fa7842a42fa77432e584f707a5080063/pip-20.2.2-py2.py3-none-any.whl (1.5 MB) |????????????????????????????????| 1.5 MB 780 kB/s Installing collected packages: pip Attempting uninstall: pip Found existing installation: pip 20.2.1 Uninstalling pip-20.2.1: Successfully uninstalled pip-20.2.1 Successfully installed pip-20.2.2","title":"Install pandocs"},{"location":"program/jupyter/Untitled/","text":"1 : change cell to heading 1 2 : change cell to heading 2 3 : change cell to heading 3 1 : change cell to heading 1 2 : change cell to heading 2 3 : change cell to heading 3 4 : change cell to heading 4 5 : change cell to heading 5 6 : change cell to heading 6 K : select cell above Up : select cell above Down : select cell below J : select cell below Shift-K : extend selected cells above Shift-Up : extend selected cells above Shift-Down : extend selected cells below Shift-J : extend selected cells below","title":"Untitled"},{"location":"program/jupyter/gitclone/","text":"githubclone \u83b7\u53d6\u6587\u4ef6 githubclone \u83b7\u53d6\u6587\u4ef6 git\u76f4\u63a5clone \u79bb\u7ebf\u5b89\u88c5","title":"Gitclone"},{"location":"program/jupyter/gitclone/#githubclone","text":"","title":"githubclone"},{"location":"program/jupyter/gitclone/#_1","text":"git\u76f4\u63a5clone \u79bb\u7ebf\u5b89\u88c5","title":"\u83b7\u53d6\u6587\u4ef6"},{"location":"program/jupyter/goproxy/","text":"\u4e00\u952e\u89e3\u51b3 go get golang.org/x \u5305\u5931\u8d25 2019-02-24 Go \u7ea6 1029 \u5b57 \u9884\u8ba1\u9605\u8bfb 3 \u5206\u949f \u95ee\u9898\u63cf\u8ff0 \u5f53\u6211\u4eec\u4f7f\u7528 go get \u3001 go install \u3001 go mod \u7b49\u547d\u4ee4\u65f6\uff0c\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u76f8\u5e94\u7684\u5305\u6216\u4f9d\u8d56\u5305\u3002\u4f46\u7531\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c\u7c7b\u4f3c\u4e8e golang.org/x/... \u7684\u5305\u4f1a\u51fa\u73b0\u4e0b\u8f7d\u5931\u8d25\u7684\u60c5\u51b5\u3002\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 $ go get -u golang.org/x/sys go get golang.org/x/sys: unrecognized import path \"golang.org/x/sys\" (https fetch: Get https://golang.org/x/sys?go-get=1: dial tcp 216.239.37.1:443: i/o timeout) \u89e3\u51b3\u65b9\u5f0f \u90a3\u6211\u4eec\u8be5\u5982\u4f55\u89e3\u51b3\u95ee\u9898\u5462\uff1f\u6bd5\u7adf\u8fd8\u8981\u5236\u9020 bug \u7684\u561b~ \u624b\u52a8\u4e0b\u8f7d \u6211\u4eec\u5e38\u89c1\u7684 golang.org/x/... \u5305\uff0c\u4e00\u822c\u5728 GitHub \u4e0a\u90fd\u6709\u5b98\u65b9\u7684\u955c\u50cf\u4ed3\u5e93\u5bf9\u5e94\u3002\u6bd4\u5982 golang.org/x/text \u5bf9\u5e94 github.com/golang/text \u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u4e0b\u8f7d\u6216 clone \u5bf9\u5e94\u7684 GitHub \u4ed3\u5e93\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u3002 1 2 3 4 mkdir $GOPATH/src/golang.org/x cd $GOPATH/src/golang.org/x git clone git@github.com:golang/text.git rm -rf text/.git \u5f53\u5982\u679c\u9700\u8981\u6307\u5b9a\u7248\u672c\u7684\u65f6\u5019\uff0c\u8be5\u65b9\u6cd5\u5c31\u65e0\u89e3\u4e86\uff0c\u56e0\u4e3a GitHub \u4e0a\u7684\u955c\u50cf\u4ed3\u5e93\u591a\u6570\u90fd\u6ca1\u6709 tag\u3002\u5e76\u4e14\uff0c\u624b\u52a8\u561b\uff0c\u7a0b\u5e8f\u5458\u600e\u4e48\u80fd\u5e72\u5462\uff0c\u5c24\u5176\u662f\u4f9d\u8d56\u7684\u4f9d\u8d56\uff0c\u592a\u591a\u4e86\u3002 \u8bbe\u7f6e\u4ee3\u7406 \u5982\u679c\u4f60 \u6709\u4ee3\u7406 \uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u7f6e\u5bf9\u5e94\u7684\u73af\u5883\u53d8\u91cf\uff1a 1 2 export http_proxy=http://proxyAddress:port export https_proxy=http://proxyAddress:port \u6216\u8005\uff0c\u76f4\u63a5\u7528 all_proxy \uff1a 1 export all_proxy=http://proxyAddress:port go mod replace \u4ece Go 1.11 \u7248\u672c\u5f00\u59cb\uff0c\u65b0\u589e\u652f\u6301\u4e86 go modules \u7528\u4e8e\u89e3\u51b3\u5305\u4f9d\u8d56\u7ba1\u7406\u95ee\u9898\u3002\u8be5\u5de5\u5177\u63d0\u4f9b\u4e86 replace \uff0c\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u5305\u7684\u522b\u540d\u95ee\u9898\uff0c\u4e5f\u80fd\u66ff\u6211\u4eec\u89e3\u51b3 golang.org/x \u65e0\u6cd5\u4e0b\u8f7d\u7684\u7684\u95ee\u9898\u3002 go module \u88ab\u96c6\u6210\u5230\u539f\u751f\u7684 go mod \u547d\u4ee4\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u4ee3\u7801\u5e93\u5728 $GOPATH \u4e2d\uff0c module \u529f\u80fd\u662f\u9ed8\u8ba4\u4e0d\u4f1a\u5f00\u542f\u7684\uff0c\u60f3\u8981\u5f00\u542f\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u5373\u53ef\u5f00\u542f export GO111MODULE=on \u3002 \u4ee5\u4e0b\u4e3a\u53c2\u8003\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 module example.com/hello require ( golang.org/x/text v0.3.0 ) replace ( golang.org/x/text = github.com/golang/text v0.3.0 ) \u7c7b\u4f3c\u7684\u8fd8\u6709 glide \u3001 gopm \u7b49\u8fd9\u7c7b\u7b2c\u4e09\u65b9\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u90fd\u4e0d\u540c\u65b9\u5f0f\u7684\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u7ed9\u6211\u4eec\u3002 GOPROXY \u73af\u5883\u53d8\u91cf \u7ec8\u4e8e\u5230\u4e86\u672c\u6587\u7684\u7ec8\u6781\u5927\u6740\u5668 \u2014\u2014 GOPROXY \u3002 \u6211\u4eec\u77e5\u9053\u4ece Go 1.11 \u7248\u672c\u5f00\u59cb\uff0c\u5b98\u65b9\u652f\u6301\u4e86 go module \u5305\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u3002 \u5176\u5b9e\u8fd8\u65b0\u589e\u4e86 GOPROXY \u73af\u5883\u53d8\u91cf\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\u8be5\u53d8\u91cf\uff0c\u4e0b\u8f7d\u6e90\u4ee3\u7801\u65f6\u5c06\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u7684\u4ee3\u7406\u5730\u5740\uff0c\u800c\u4e0d\u518d\u662f\u4ee5\u524d\u7684\u76f4\u63a5\u4ece\u4ee3\u7801\u5e93\u4e0b\u8f7d\u3002\u8fd9\u65e0\u7591\u5bf9\u6211\u7b49\u65e0\u6cd5\u79d1\u5b66\u4e0a\u7f51\u7684\u5f00\u53d1\u826f\u6c11\u6765\u8bf4\u662f\u6700\u5927\u7684\u798f\u97f3\u3002 \u66f4\u53ef\u559c\u7684\u662f\uff0c goproxy.io \u8fd9\u4e2a\u5f00\u6e90\u9879\u76ee\u5e2e\u6211\u4eec\u5b9e\u73b0\u597d\u4e86\u6211\u4eec\u60f3\u8981\u7684\u3002\u8be5\u9879\u76ee\u5141\u8bb8\u5f00\u53d1\u8005\u4e00\u952e\u6784\u5efa\u81ea\u5df1\u7684 GOPROXY \u4ee3\u7406\u670d\u52a1\u3002\u540c\u65f6\uff0c\u4e5f\u63d0\u4f9b\u4e86\u516c\u7528\u7684\u4ee3\u7406\u670d\u52a1 https://goproxy.io \uff0c\u6211\u4eec\u53ea\u9700\u8bbe\u7f6e\u8be5\u73af\u5883\u53d8\u91cf\u5373\u53ef\u6b63\u5e38\u4e0b\u8f7d\u88ab\u5899\u7684\u6e90\u7801\u5305\u4e86\uff1a 1 export GOPROXY=https://goproxy.io \u4e0d\u8fc7\uff0c \u9700\u8981\u4f9d\u8d56\u4e8e go module \u529f\u80fd \u3002\u53ef\u901a\u8fc7 export GO111MODULE=on \u5f00\u542f MODULE\u3002 \u5982\u679c\u9879\u76ee\u4e0d\u5728 GOPATH \u4e2d\uff0c\u5219\u65e0\u6cd5\u4f7f\u7528 go get ... \uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 go mod ... \u76f8\u5173\u547d\u4ee4\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f6e\u7a7a\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u6765\u5173\u95ed\uff0c export GOPROXY= \u3002 \u5bf9\u4e8e Windows \u7528\u6237\uff0c\u53ef\u4ee5\u5728 PowerShell \u4e2d\u8bbe\u7f6e\uff1a 1 $env:GOPROXY = \"https://goproxy.io\" \u6700\u540e\uff0c\u6211\u4eec\u5f53\u7136\u63a8\u8350\u4f7f\u7528 GOPROXY \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u89e3\u51b3\u65b9\u5f0f\uff0c\u524d\u63d0\u662f Go version = 1.11 \u3002 \u6700\u540e\u7684\u6700\u540e\uff0c\u4e03\u725b\u4e5f\u51fa\u4e86\u4e2a\u56fd\u5185\u4ee3\u7406 goproxy.cn \u65b9\u4fbf\u56fd\u5185\u7528\u6237\u66f4\u5feb\u7684\u8bbf\u95ee\u4e0d\u80fd\u8bbf\u95ee\u7684\u5305\uff0c\u771f\u662f\u826f\u5fc3\u3002 \u53c2\u8003\u8d44\u6599 goproxy.io for Go modules goproxy.io goproxy.cn jupyter notebook --allow-root --log-level DEBUG","title":"\u4e00\u952e\u89e3\u51b3 go get golang.org/x \u5305\u5931\u8d25"},{"location":"program/jupyter/goproxy/#go-get-golangorgx","text":"2019-02-24 Go \u7ea6 1029 \u5b57 \u9884\u8ba1\u9605\u8bfb 3 \u5206\u949f","title":"\u4e00\u952e\u89e3\u51b3 go get golang.org/x \u5305\u5931\u8d25"},{"location":"program/jupyter/goproxy/#_1","text":"\u5f53\u6211\u4eec\u4f7f\u7528 go get \u3001 go install \u3001 go mod \u7b49\u547d\u4ee4\u65f6\uff0c\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u76f8\u5e94\u7684\u5305\u6216\u4f9d\u8d56\u5305\u3002\u4f46\u7531\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c\u7c7b\u4f3c\u4e8e golang.org/x/... \u7684\u5305\u4f1a\u51fa\u73b0\u4e0b\u8f7d\u5931\u8d25\u7684\u60c5\u51b5\u3002\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 $ go get -u golang.org/x/sys go get golang.org/x/sys: unrecognized import path \"golang.org/x/sys\" (https fetch: Get https://golang.org/x/sys?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"program/jupyter/goproxy/#_2","text":"\u90a3\u6211\u4eec\u8be5\u5982\u4f55\u89e3\u51b3\u95ee\u9898\u5462\uff1f\u6bd5\u7adf\u8fd8\u8981\u5236\u9020 bug \u7684\u561b~","title":"\u89e3\u51b3\u65b9\u5f0f"},{"location":"program/jupyter/goproxy/#_3","text":"\u6211\u4eec\u5e38\u89c1\u7684 golang.org/x/... \u5305\uff0c\u4e00\u822c\u5728 GitHub \u4e0a\u90fd\u6709\u5b98\u65b9\u7684\u955c\u50cf\u4ed3\u5e93\u5bf9\u5e94\u3002\u6bd4\u5982 golang.org/x/text \u5bf9\u5e94 github.com/golang/text \u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u4e0b\u8f7d\u6216 clone \u5bf9\u5e94\u7684 GitHub \u4ed3\u5e93\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u3002 1 2 3 4 mkdir $GOPATH/src/golang.org/x cd $GOPATH/src/golang.org/x git clone git@github.com:golang/text.git rm -rf text/.git \u5f53\u5982\u679c\u9700\u8981\u6307\u5b9a\u7248\u672c\u7684\u65f6\u5019\uff0c\u8be5\u65b9\u6cd5\u5c31\u65e0\u89e3\u4e86\uff0c\u56e0\u4e3a GitHub \u4e0a\u7684\u955c\u50cf\u4ed3\u5e93\u591a\u6570\u90fd\u6ca1\u6709 tag\u3002\u5e76\u4e14\uff0c\u624b\u52a8\u561b\uff0c\u7a0b\u5e8f\u5458\u600e\u4e48\u80fd\u5e72\u5462\uff0c\u5c24\u5176\u662f\u4f9d\u8d56\u7684\u4f9d\u8d56\uff0c\u592a\u591a\u4e86\u3002","title":"\u624b\u52a8\u4e0b\u8f7d"},{"location":"program/jupyter/goproxy/#_4","text":"\u5982\u679c\u4f60 \u6709\u4ee3\u7406 \uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe\u7f6e\u5bf9\u5e94\u7684\u73af\u5883\u53d8\u91cf\uff1a 1 2 export http_proxy=http://proxyAddress:port export https_proxy=http://proxyAddress:port \u6216\u8005\uff0c\u76f4\u63a5\u7528 all_proxy \uff1a 1 export all_proxy=http://proxyAddress:port","title":"\u8bbe\u7f6e\u4ee3\u7406"},{"location":"program/jupyter/goproxy/#go-mod-replace","text":"\u4ece Go 1.11 \u7248\u672c\u5f00\u59cb\uff0c\u65b0\u589e\u652f\u6301\u4e86 go modules \u7528\u4e8e\u89e3\u51b3\u5305\u4f9d\u8d56\u7ba1\u7406\u95ee\u9898\u3002\u8be5\u5de5\u5177\u63d0\u4f9b\u4e86 replace \uff0c\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u5305\u7684\u522b\u540d\u95ee\u9898\uff0c\u4e5f\u80fd\u66ff\u6211\u4eec\u89e3\u51b3 golang.org/x \u65e0\u6cd5\u4e0b\u8f7d\u7684\u7684\u95ee\u9898\u3002 go module \u88ab\u96c6\u6210\u5230\u539f\u751f\u7684 go mod \u547d\u4ee4\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u4ee3\u7801\u5e93\u5728 $GOPATH \u4e2d\uff0c module \u529f\u80fd\u662f\u9ed8\u8ba4\u4e0d\u4f1a\u5f00\u542f\u7684\uff0c\u60f3\u8981\u5f00\u542f\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u5373\u53ef\u5f00\u542f export GO111MODULE=on \u3002 \u4ee5\u4e0b\u4e3a\u53c2\u8003\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 module example.com/hello require ( golang.org/x/text v0.3.0 ) replace ( golang.org/x/text = github.com/golang/text v0.3.0 ) \u7c7b\u4f3c\u7684\u8fd8\u6709 glide \u3001 gopm \u7b49\u8fd9\u7c7b\u7b2c\u4e09\u65b9\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u90fd\u4e0d\u540c\u65b9\u5f0f\u7684\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u7ed9\u6211\u4eec\u3002","title":"go mod replace"},{"location":"program/jupyter/goproxy/#goproxy","text":"\u7ec8\u4e8e\u5230\u4e86\u672c\u6587\u7684\u7ec8\u6781\u5927\u6740\u5668 \u2014\u2014 GOPROXY \u3002 \u6211\u4eec\u77e5\u9053\u4ece Go 1.11 \u7248\u672c\u5f00\u59cb\uff0c\u5b98\u65b9\u652f\u6301\u4e86 go module \u5305\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u3002 \u5176\u5b9e\u8fd8\u65b0\u589e\u4e86 GOPROXY \u73af\u5883\u53d8\u91cf\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\u8be5\u53d8\u91cf\uff0c\u4e0b\u8f7d\u6e90\u4ee3\u7801\u65f6\u5c06\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u7684\u4ee3\u7406\u5730\u5740\uff0c\u800c\u4e0d\u518d\u662f\u4ee5\u524d\u7684\u76f4\u63a5\u4ece\u4ee3\u7801\u5e93\u4e0b\u8f7d\u3002\u8fd9\u65e0\u7591\u5bf9\u6211\u7b49\u65e0\u6cd5\u79d1\u5b66\u4e0a\u7f51\u7684\u5f00\u53d1\u826f\u6c11\u6765\u8bf4\u662f\u6700\u5927\u7684\u798f\u97f3\u3002 \u66f4\u53ef\u559c\u7684\u662f\uff0c goproxy.io \u8fd9\u4e2a\u5f00\u6e90\u9879\u76ee\u5e2e\u6211\u4eec\u5b9e\u73b0\u597d\u4e86\u6211\u4eec\u60f3\u8981\u7684\u3002\u8be5\u9879\u76ee\u5141\u8bb8\u5f00\u53d1\u8005\u4e00\u952e\u6784\u5efa\u81ea\u5df1\u7684 GOPROXY \u4ee3\u7406\u670d\u52a1\u3002\u540c\u65f6\uff0c\u4e5f\u63d0\u4f9b\u4e86\u516c\u7528\u7684\u4ee3\u7406\u670d\u52a1 https://goproxy.io \uff0c\u6211\u4eec\u53ea\u9700\u8bbe\u7f6e\u8be5\u73af\u5883\u53d8\u91cf\u5373\u53ef\u6b63\u5e38\u4e0b\u8f7d\u88ab\u5899\u7684\u6e90\u7801\u5305\u4e86\uff1a 1 export GOPROXY=https://goproxy.io \u4e0d\u8fc7\uff0c \u9700\u8981\u4f9d\u8d56\u4e8e go module \u529f\u80fd \u3002\u53ef\u901a\u8fc7 export GO111MODULE=on \u5f00\u542f MODULE\u3002 \u5982\u679c\u9879\u76ee\u4e0d\u5728 GOPATH \u4e2d\uff0c\u5219\u65e0\u6cd5\u4f7f\u7528 go get ... \uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 go mod ... \u76f8\u5173\u547d\u4ee4\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f6e\u7a7a\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u6765\u5173\u95ed\uff0c export GOPROXY= \u3002 \u5bf9\u4e8e Windows \u7528\u6237\uff0c\u53ef\u4ee5\u5728 PowerShell \u4e2d\u8bbe\u7f6e\uff1a 1 $env:GOPROXY = \"https://goproxy.io\" \u6700\u540e\uff0c\u6211\u4eec\u5f53\u7136\u63a8\u8350\u4f7f\u7528 GOPROXY \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u89e3\u51b3\u65b9\u5f0f\uff0c\u524d\u63d0\u662f Go version = 1.11 \u3002 \u6700\u540e\u7684\u6700\u540e\uff0c\u4e03\u725b\u4e5f\u51fa\u4e86\u4e2a\u56fd\u5185\u4ee3\u7406 goproxy.cn \u65b9\u4fbf\u56fd\u5185\u7528\u6237\u66f4\u5feb\u7684\u8bbf\u95ee\u4e0d\u80fd\u8bbf\u95ee\u7684\u5305\uff0c\u771f\u662f\u826f\u5fc3\u3002","title":"GOPROXY \u73af\u5883\u53d8\u91cf"},{"location":"program/jupyter/goproxy/#_5","text":"goproxy.io for Go modules goproxy.io goproxy.cn jupyter notebook --allow-root --log-level DEBUG","title":"\u53c2\u8003\u8d44\u6599"},{"location":"program/jupyter/jupyter keybord shortcuts/","text":"jupyter keybord shortcuts # Command Mode (press Esc to enable)Edit Shortcuts #### Edit Mode (press Enter to enable) F : find and replace Tab : code completion or indent Ctrl-Shift-F : open the command palette Shift-Tab : tooltip Ctrl-Shift-P : open the command palette Ctrl-] : indent Enter : enter edit mode Ctrl-[ : dedent P : open the command palette Ctrl-A : select all Shift-Enter : run cell, select below Ctrl-Z : undo Ctrl-Enter : run selected cells Ctrl-/ : comment Alt-Enter : run cell and insert below Ctrl-D : delete whole line Y : change cell to code Ctrl-U : undo selection M : change cell to markdown Insert : toggle overwrite flag R : change cell to raw Ctrl-Home : go to cell start 1 : change cell to heading 1 Ctrl-Up : go to cell start 2 : change cell to heading 2 Ctrl-End : go to cell end 3 : change cell to heading 3 Ctrl-Down : go to cell end 4 : change cell to heading 4 Ctrl-Left : go one word left 5 : change cell to heading 5 Ctrl-Right : go one word right 6 : change cell to heading 6 Ctrl-Backspace : delete word before K : select cell above Ctrl-Delete : delete word after Up : select cell above Ctrl-Y : redo Down : select cell below Alt-U : redo selection J : select cell below Ctrl-M : enter command mode Shift-K : extend selected cells above Ctrl-Shift-F : open the command palette Shift-Up : extend selected cells above Ctrl-Shift-P : open the command palette Shift-Down : extend selected cells below Esc : enter command mode Shift-J : extend selected cells below Shift-Enter : run cell, select below Ctrl-A : select all cells Ctrl-Enter : run selected cells A : insert cell above Alt-Enter : run cell and insert below B : insert cell below Ctrl-Shift-Minus : split cell at cursor(s) X : cut selected cells Ctrl-S : Save and Checkpoint C : copy selected cells Down : move cursor down Shift-V : paste cells above Up : move cursor up V : paste cells below Z : undo cell deletion D,D : delete selected cells Shift-M : merge selected cells, or current cell with cell below if only one cell is selected Ctrl-S : Save and Checkpoint S : Save and Checkpoint L : toggle line numbers O : toggle output of selected cells Shift-O : toggle output scrolling of selected cells H : show keyboard shortcuts I,I : interrupt the kernel 0,0 : restart the kernel (with dialog) Esc : close the pager Q : close the pager Shift-L : toggles line numbers in all cells, and persist the setting Shift-Space : scroll notebook up Space : scroll notebook down","title":"Jupyter keybord shortcuts"},{"location":"program/jupyter/setpwd/","text":"\u8bbe\u7f6eJupyter\u7684\u5bc6\u7801\u767b\u5f55 1\u3001 \u751f\u6210\u914d\u7f6e\u6587\u4ef6 2. \u751f\u6210\u5bc6\u7801\u5e76\u590d\u5236\u5bc6\u7801\u7684sha1\u5185\u5bb9 2.1 \u751f\u6210\u5bc6\u7801 2.1.1 jupyter\u751f\u6210 2.1.2 ipython\u751f\u6210 3.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 4.\u91cd\u542fjupyter 5.\u68c0\u67e5\u6548\u679c \u8bbe\u7f6eJupyter\u7684\u5bc6\u7801\u767b\u5f55 1\u3001 \u751f\u6210\u914d\u7f6e\u6587\u4ef6 jupyter notebook --generate-config \u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\u4e00\u822c\u5728 /home/$USER/.jupyter/ \u540d\u5b57\uff1ajupyter_notebook_config.py 2. \u751f\u6210\u5bc6\u7801\u5e76\u590d\u5236\u5bc6\u7801\u7684sha1\u5185\u5bb9 2.1 \u751f\u6210\u5bc6\u7801 2.1.1 jupyter\u751f\u6210 jupyter notebook password \u4e24\u6b21\u786e\u8ba4\u5bc6\u7801\u540e\uff0c\u751f\u6210\u4e00\u4e2a\u5bc6\u7801\u6587\u4ef6\uff0c\u67e5\u770b\u5e76\u8bb0\u4f4f\u5bc6\u6587\uff1a$argon2id$v=19$m=10240,t=10,p=8$5SvuPUmUu7oCUxwzvX0gdA$WgzO+M4b5HwV46b98UVx1Q [root@mysql ~]# jupyter notebook password Enter password: Verify password: [NotebookPasswordApp] Wrote hashed password to /root/.jupyter/jupyter_notebook_config.json [root@mysql ~]# cat /root/.jupyter/jupyter_notebook_config.json { NotebookApp : { password : $argon2id$v=19$m=10240,t=10,p=8$5SvuPUmUu7oCUxwzvX0gdA$WgzO+M4b5HwV46b98UVx1Q } 2.1.2 ipython\u751f\u6210 In [2]: from notebook.auth import passwd In [3]: passwd() Enter password: Verify password: Out[3]: 'argon2:$argon2id$v=19$m=10240,t=10,p=8$Bv45y12flRGvp5u4ebhImA$b5yy0e8LNLZ4+9rXF8zR4g' \u8bb0\u4f4f\uff1a$argon2id$v=19$m=10240,t=10,p=8$Bv45y12flRGvp5u4ebhImA$b5yy0e8LNLZ4+9rXF8zR4g 3.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 c.NotebookApp.ip='*' #default value localhost c.NotebookApp.password = u'sha1:***' #\u586b\u5199\u6b65\u9aa42\u4e2d\u751f\u6210\u5bc6\u7801\u540e\u7684\u52a0\u5bc6\u5bc6\u6587 c.NotebookApp.port=1080 #\u81ea\u5b9a\u4e49\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\uff1a8888 c.NotebookApp.open_browser = False #default value True 4.\u91cd\u542fjupyter ps -ef |grep jupyter |grep -v grep |awk '{print $2}'|kill -9 jupyter notebook \u2013allow-root 5.\u68c0\u67e5\u6548\u679c","title":"Setpwd"},{"location":"program/jupyter/setpwd/#jupyter","text":"","title":"\u8bbe\u7f6eJupyter\u7684\u5bc6\u7801\u767b\u5f55"},{"location":"program/jupyter/setpwd/#1","text":"jupyter notebook --generate-config \u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\u4e00\u822c\u5728 /home/$USER/.jupyter/ \u540d\u5b57\uff1ajupyter_notebook_config.py","title":"1\u3001 \u751f\u6210\u914d\u7f6e\u6587\u4ef6"},{"location":"program/jupyter/setpwd/#2-sha1","text":"","title":"2. \u751f\u6210\u5bc6\u7801\u5e76\u590d\u5236\u5bc6\u7801\u7684sha1\u5185\u5bb9"},{"location":"program/jupyter/setpwd/#21","text":"","title":"2.1 \u751f\u6210\u5bc6\u7801"},{"location":"program/jupyter/setpwd/#211-jupyter","text":"jupyter notebook password \u4e24\u6b21\u786e\u8ba4\u5bc6\u7801\u540e\uff0c\u751f\u6210\u4e00\u4e2a\u5bc6\u7801\u6587\u4ef6\uff0c\u67e5\u770b\u5e76\u8bb0\u4f4f\u5bc6\u6587\uff1a$argon2id$v=19$m=10240,t=10,p=8$5SvuPUmUu7oCUxwzvX0gdA$WgzO+M4b5HwV46b98UVx1Q [root@mysql ~]# jupyter notebook password Enter password: Verify password: [NotebookPasswordApp] Wrote hashed password to /root/.jupyter/jupyter_notebook_config.json [root@mysql ~]# cat /root/.jupyter/jupyter_notebook_config.json { NotebookApp : { password : $argon2id$v=19$m=10240,t=10,p=8$5SvuPUmUu7oCUxwzvX0gdA$WgzO+M4b5HwV46b98UVx1Q }","title":"2.1.1 jupyter\u751f\u6210"},{"location":"program/jupyter/setpwd/#212-ipython","text":"In [2]: from notebook.auth import passwd In [3]: passwd() Enter password: Verify password: Out[3]: 'argon2:$argon2id$v=19$m=10240,t=10,p=8$Bv45y12flRGvp5u4ebhImA$b5yy0e8LNLZ4+9rXF8zR4g' \u8bb0\u4f4f\uff1a$argon2id$v=19$m=10240,t=10,p=8$Bv45y12flRGvp5u4ebhImA$b5yy0e8LNLZ4+9rXF8zR4g","title":"2.1.2 ipython\u751f\u6210"},{"location":"program/jupyter/setpwd/#3","text":"c.NotebookApp.ip='*' #default value localhost c.NotebookApp.password = u'sha1:***' #\u586b\u5199\u6b65\u9aa42\u4e2d\u751f\u6210\u5bc6\u7801\u540e\u7684\u52a0\u5bc6\u5bc6\u6587 c.NotebookApp.port=1080 #\u81ea\u5b9a\u4e49\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\uff1a8888 c.NotebookApp.open_browser = False #default value True","title":"3.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"program/jupyter/setpwd/#4jupyter","text":"ps -ef |grep jupyter |grep -v grep |awk '{print $2}'|kill -9 jupyter notebook \u2013allow-root","title":"4.\u91cd\u542fjupyter"},{"location":"program/jupyter/setpwd/#5","text":"","title":"5.\u68c0\u67e5\u6548\u679c"},{"location":"program/python/Installpyenv/","text":"","title":"Installpyenv"},{"location":"program/python/pipConfiguration/","text":"\u5bf9\u4e8ePython\u5f00\u53d1\u7528\u6237\u6765\u8bb2\uff0cPIP\u5b89\u88c5\u8f6f\u4ef6\u5305\u662f\u5bb6\u5e38\u4fbf\u996d\u3002\u4f46\u56fd\u5916\u7684\u6e90\u4e0b\u8f7d\u901f\u5ea6\u5b9e\u5728\u592a\u6162\uff0c\u6d6a\u8d39\u65f6\u95f4\u3002\u800c\u4e14\u7ecf\u5e38\u51fa\u73b0\u4e0b\u8f7d\u540e\u5b89\u88c5\u51fa\u9519\u95ee\u9898\u3002\u6240\u4ee5\u628aPIP\u5b89\u88c5\u6e90\u66ff\u6362\u6210\u56fd\u5185\u955c\u50cf\uff0c\u53ef\u4ee5\u5927\u5e45\u63d0\u5347\u4e0b\u8f7d\u901f\u5ea6\uff0c\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u5b89\u88c5\u6210\u529f\u7387\u3002 \u56fd\u5185\u6e90\uff1a \u65b0\u7248ubuntu\u8981\u6c42\u4f7f\u7528https\u6e90\uff0c\u8981\u6ce8\u610f\u3002 \u6e05\u534e\uff1ahttps://pypi.tuna.tsinghua.edu.cn/simple \u963f\u91cc\u4e91\uff1ahttp://mirrors.aliyun.com/pypi/simple/ \u4e2d\u56fd\u79d1\u6280\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u534e\u4e2d\u7406\u5de5\u5927\u5b66\uff1ahttp://pypi.hustunique.com/ \u5c71\u4e1c\u7406\u5de5\u5927\u5b66\uff1ahttp://pypi.sdutlinux.org/ \u8c46\u74e3\uff1ahttp://pypi.douban.com/simple/ \u4e34\u65f6\u4f7f\u7528\uff1a \u53ef\u4ee5\u5728\u4f7f\u7528pip\u7684\u65f6\u5019\u52a0\u53c2\u6570-i https://pypi.tuna.tsinghua.edu.cn/simple \u4f8b\u5982\uff1apip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyspider\uff0c\u8fd9\u6837\u5c31\u4f1a\u4ece\u6e05\u534e\u8fd9\u8fb9\u7684\u955c\u50cf\u53bb\u5b89\u88c5pyspider\u5e93\u3002 \u6c38\u4e45\u4fee\u6539\uff0c\u4e00\u52b3\u6c38\u9038\uff1a Linux\u4e0b\uff0c\u4fee\u6539 ~/.pip/pip.conf (\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u53ca\u6587\u4ef6\u3002\u6587\u4ef6\u5939\u8981\u52a0\u201c.\u201d\uff0c\u8868\u793a\u662f\u9690\u85cf\u6587\u4ef6\u5939) \u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=mirrors.aliyun.com windows\u4e0b\uff0c\u76f4\u63a5\u5728user\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2apip\u76ee\u5f55\uff0c\u5982\uff1aC:\\Users\\xx\\pip\uff0c\u65b0\u5efa\u6587\u4ef6pip.ini\u3002\u5185\u5bb9\u540c\u4e0a\u3002","title":"pipConfiguration"},{"location":"program/python/pipConfiguration/#_1","text":"\u65b0\u7248ubuntu\u8981\u6c42\u4f7f\u7528https\u6e90\uff0c\u8981\u6ce8\u610f\u3002 \u6e05\u534e\uff1ahttps://pypi.tuna.tsinghua.edu.cn/simple \u963f\u91cc\u4e91\uff1ahttp://mirrors.aliyun.com/pypi/simple/ \u4e2d\u56fd\u79d1\u6280\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u534e\u4e2d\u7406\u5de5\u5927\u5b66\uff1ahttp://pypi.hustunique.com/ \u5c71\u4e1c\u7406\u5de5\u5927\u5b66\uff1ahttp://pypi.sdutlinux.org/ \u8c46\u74e3\uff1ahttp://pypi.douban.com/simple/","title":"\u56fd\u5185\u6e90\uff1a"},{"location":"program/python/pipConfiguration/#_2","text":"\u53ef\u4ee5\u5728\u4f7f\u7528pip\u7684\u65f6\u5019\u52a0\u53c2\u6570-i https://pypi.tuna.tsinghua.edu.cn/simple \u4f8b\u5982\uff1apip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyspider\uff0c\u8fd9\u6837\u5c31\u4f1a\u4ece\u6e05\u534e\u8fd9\u8fb9\u7684\u955c\u50cf\u53bb\u5b89\u88c5pyspider\u5e93\u3002","title":"\u4e34\u65f6\u4f7f\u7528\uff1a"},{"location":"program/python/pipConfiguration/#_3","text":"Linux\u4e0b\uff0c\u4fee\u6539 ~/.pip/pip.conf (\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u53ca\u6587\u4ef6\u3002\u6587\u4ef6\u5939\u8981\u52a0\u201c.\u201d\uff0c\u8868\u793a\u662f\u9690\u85cf\u6587\u4ef6\u5939) \u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=mirrors.aliyun.com windows\u4e0b\uff0c\u76f4\u63a5\u5728user\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2apip\u76ee\u5f55\uff0c\u5982\uff1aC:\\Users\\xx\\pip\uff0c\u65b0\u5efa\u6587\u4ef6pip.ini\u3002\u5185\u5bb9\u540c\u4e0a\u3002","title":"\u6c38\u4e45\u4fee\u6539\uff0c\u4e00\u52b3\u6c38\u9038\uff1a"},{"location":"program/python/pyenvaddspeed/","text":"\u4f7f\u7528\u56fd\u5185\u7684\u6e90\u52a0\u901f \u4f7f\u7528\u6dd8\u5b9d\u6e90\uff0c\u4e0b\u8f7d\u6587\u4ef6\u5230\u7f13\u5b58\u91cc \u4f7f\u7528\u672c\u5730\u5b89\u88c5 \u56fd\u5185\u6e90: pip\u52a0\u901f \u4f7f\u7528\u56fd\u5185\u7684\u6e90\u52a0\u901f \u4f7f\u7528\u6dd8\u5b9d\u6e90\uff0c\u4e0b\u8f7d\u6587\u4ef6\u5230\u7f13\u5b58\u91cc v=2.7.6 wget https://npm.taobao.org/mirrors/python/$v/Python-$v.tar.xz -P ~/.pyenv/cache/ \u4f7f\u7528\u672c\u5730\u5b89\u88c5 pyenv install $v \u56fd\u5185\u6e90: # \u5f3a\u70c8\u63a8\u8350 https://npm.taobao.org/mirrors/python/ pip\u52a0\u901f pip\u52a0\u901f\u914d\u7f6e \uff08ctrl+\u53f3\u952e\uff09","title":"Pyenvaddspeed"},{"location":"program/python/pyenvaddspeed/#_1","text":"","title":"\u4f7f\u7528\u56fd\u5185\u7684\u6e90\u52a0\u901f"},{"location":"program/python/pyenvaddspeed/#_2","text":"v=2.7.6 wget https://npm.taobao.org/mirrors/python/$v/Python-$v.tar.xz -P ~/.pyenv/cache/","title":"\u4f7f\u7528\u6dd8\u5b9d\u6e90\uff0c\u4e0b\u8f7d\u6587\u4ef6\u5230\u7f13\u5b58\u91cc"},{"location":"program/python/pyenvaddspeed/#_3","text":"pyenv install $v","title":"\u4f7f\u7528\u672c\u5730\u5b89\u88c5"},{"location":"program/python/pyenvaddspeed/#_4","text":"# \u5f3a\u70c8\u63a8\u8350 https://npm.taobao.org/mirrors/python/","title":"\u56fd\u5185\u6e90:"},{"location":"program/python/pyenvaddspeed/#pip","text":"pip\u52a0\u901f\u914d\u7f6e \uff08ctrl+\u53f3\u952e\uff09","title":"pip\u52a0\u901f"},{"location":"program/python/Learn/while/","text":"\u4e5d\u4e5d\u4e58\u6cd5\u53e3\u8bc0 for \u6253\u5370\u83f1\u5f62 \u4e5d\u4e5d\u4e58\u6cd5\u53e3\u8bc0 for i in range(1,10): for j in range(1,i+1): print (str(j)+'*'+str(i)+'='+str(i*j)+ \\t ,end='') print (' ') 1*1=1 1*2=2 2*2=4 1*3=3 2*3=6 3*3=9 1*4=4 2*4=8 3*4=12 4*4=16 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 for for i in range(1,10): line = '' for j in range(1,10): if i j : line = '{0} {1} {2: 4}'.format(' ',' ', ' ')+line else: line = line+'{0}*{1}={2: 4}'.format(i,j,j*i) #print ('=='+line) print (line) # line = '{0} {1} {2: 4}'.format(' ',' ', ' ')+line #\u5f53i j\u65f6\uff0c\u6253\u5370\u7a7a\u683c\uff0c\u5f53i j\u65f6\uff0c\u62c9\u4e0a\u5b57\u7b26\u3002 #\u7559\u610fline\u7684\u63a5\u9a73\u4f4d\u7f6e\u3002 1*1=1 1*2=2 1*3=3 1*4=4 1*5=5 1*6=6 1*7=7 1*8=8 1*9=9 2*2=4 2*3=6 2*4=8 2*5=10 2*6=12 2*7=14 2*8=16 2*9=18 3*3=9 3*4=12 3*5=15 3*6=18 3*7=21 3*8=24 3*9=27 4*4=16 4*5=20 4*6=24 4*7=28 4*8=32 4*9=36 5*5=25 5*6=30 5*7=35 5*8=40 5*9=45 6*6=36 6*7=42 6*8=48 6*9=54 7*7=49 7*8=56 7*9=63 8*8=64 8*9=72 9*9=81 \u6253\u5370\u83f1\u5f62 * *** ***** ******* ***** *** * for i in range(-3,4): if i 0: prespace=-i else: prespace=i print (' '*prespace+'*'*(7-prespace*2))","title":"While"},{"location":"program/python/Learn/while/#_1","text":"for i in range(1,10): for j in range(1,i+1): print (str(j)+'*'+str(i)+'='+str(i*j)+ \\t ,end='') print (' ') 1*1=1 1*2=2 2*2=4 1*3=3 2*3=6 3*3=9 1*4=4 2*4=8 3*4=12 4*4=16 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81","title":"\u4e5d\u4e5d\u4e58\u6cd5\u53e3\u8bc0"},{"location":"program/python/Learn/while/#for","text":"for i in range(1,10): line = '' for j in range(1,10): if i j : line = '{0} {1} {2: 4}'.format(' ',' ', ' ')+line else: line = line+'{0}*{1}={2: 4}'.format(i,j,j*i) #print ('=='+line) print (line) # line = '{0} {1} {2: 4}'.format(' ',' ', ' ')+line #\u5f53i j\u65f6\uff0c\u6253\u5370\u7a7a\u683c\uff0c\u5f53i j\u65f6\uff0c\u62c9\u4e0a\u5b57\u7b26\u3002 #\u7559\u610fline\u7684\u63a5\u9a73\u4f4d\u7f6e\u3002 1*1=1 1*2=2 1*3=3 1*4=4 1*5=5 1*6=6 1*7=7 1*8=8 1*9=9 2*2=4 2*3=6 2*4=8 2*5=10 2*6=12 2*7=14 2*8=16 2*9=18 3*3=9 3*4=12 3*5=15 3*6=18 3*7=21 3*8=24 3*9=27 4*4=16 4*5=20 4*6=24 4*7=28 4*8=32 4*9=36 5*5=25 5*6=30 5*7=35 5*8=40 5*9=45 6*6=36 6*7=42 6*8=48 6*9=54 7*7=49 7*8=56 7*9=63 8*8=64 8*9=72 9*9=81","title":"for"},{"location":"program/python/Learn/while/#_2","text":"* *** ***** ******* ***** *** * for i in range(-3,4): if i 0: prespace=-i else: prespace=i print (' '*prespace+'*'*(7-prespace*2))","title":"\u6253\u5370\u83f1\u5f62"},{"location":"program/python/pyenv/InstallpythonError/","text":"\u62a5\u9519\u65e5\u5fd7 \u62a5\u9519\u65e5\u5fd7 Installing collected packages: setuptools, pip Successfully installed pip-9.0.1 setuptools-28.8.0 WARNING: The Python bz2 extension was not compiled. Missing the bzip2 lib? WARNING: The Python readline extension was not compiled. Missing the GNU readline lib? WARNING: The Python sqlite3 extension was not compiled. Missing the SQLite3 lib? /tmp/python-build.20200808175554.15673 ~ ~ Installed Python-3.5.3 to /root/.pyenv/versions/3.5.3 WARNING: The Python bz2 extension was not compiled. Missing the bzip2 lib? yum install -y bzip2 bzip-devel WARNING: The Python readline extension was not compiled. Missing the GNU readline lib? WARNING: The Python sqlite3 extension was not compiled. Missing the SQLite3 lib? yum install -y sqlite sqlite-devel","title":"InstallpythonError"},{"location":"program/python/pyenv/InstallpythonError/#_1","text":"Installing collected packages: setuptools, pip Successfully installed pip-9.0.1 setuptools-28.8.0 WARNING: The Python bz2 extension was not compiled. Missing the bzip2 lib? WARNING: The Python readline extension was not compiled. Missing the GNU readline lib? WARNING: The Python sqlite3 extension was not compiled. Missing the SQLite3 lib? /tmp/python-build.20200808175554.15673 ~ ~ Installed Python-3.5.3 to /root/.pyenv/versions/3.5.3 WARNING: The Python bz2 extension was not compiled. Missing the bzip2 lib? yum install -y bzip2 bzip-devel WARNING: The Python readline extension was not compiled. Missing the GNU readline lib? WARNING: The Python sqlite3 extension was not compiled. Missing the SQLite3 lib? yum install -y sqlite sqlite-devel","title":"\u62a5\u9519\u65e5\u5fd7"},{"location":"\u57fa\u91d1/\u5929\u5929\u57fa\u91d1\u7f51 \u6570\u636e\u63a5\u53e3\u53ca\u8bf4\u660e/","text":"\u5929\u5929\u57fa\u91d1\u7f51 \u6570\u636e\u63a5\u53e3\u53ca\u8bf4\u660e \u4e00\u3001\u57fa\u91d1\u5b9e\u65f6\u4fe1\u606f\u63a5\u53e3\uff1a \u5b9e\u65f6\u4fe1\u606f\u63a5\u53e3\u8bf7\u6c42\u7f51\u5740\uff1a http://fundgz.1234567.com.cn/js/ 519983 .js?rt=1463558676006 \u6ce8\uff1a\u4e0a\u9762\u7f51\u5740\u4e2d\u7ea2\u8272\u90e8\u5206519983\u4e3a\u57fa\u91d1\u4ee3\u7801\uff0crt=1463558676006\u4e3a\u65f6\u95f4\u6233\u907f\u514d\u7f13\u5b58\u3002 \u8fd4\u56de\u503c\uff1a PHP jsonpgz({ fundcode : 519983 , name : \u957f\u4fe1\u91cf\u5316\u5148\u950b\u6df7\u5408A , jzrq : 2018-09-21 , dwjz : 1.2440 , gsz : 1.2388 , gszzl : -0.42 , gztime : 2018-09-25 15:00 }); \u8fd4\u56de\u503c\u683c\u5f0f\u662f\uff1a jsonpgz(JSON\u683c\u5f0f\u6570\u636e); \u5728\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u53bb\u9664\u5230jsonpgz();\u53ea\u4fdd\u7559json\u6570\u636e\uff0c\u5c06json\u8f6c\u4e3a\u6570\u7ec4\u4fbf\u4e8e\u4f7f\u7528\u3002 \u8f6c\u6570\u7ec4\u540e\u6570\u636e\uff1a PHP array(7) { [ fundcode ]= 519983 //\u57fa\u91d1\u4ee3\u7801 [ name ]= \u957f\u4fe1\u91cf\u5316\u5148\u950b\u6df7\u5408A //\u57fa\u91d1\u540d\u79f0 [ jzrq ]= 2018-09-21 //\u51c0\u503c\u65e5\u671f [ dwjz ]= 1.2440 //\u5f53\u65e5\u51c0\u503c [ gsz ]= 1.2388 //\u4f30\u7b97\u51c0\u503c [ gszzl ]= -0.42 //\u4f30\u7b97\u6da8\u8dcc\u767e\u5206\u6bd4 \u5373-0.42% [ gztime ]= 2018-09-25 15:00 //\u4f30\u503c\u65f6\u95f4 } \u4e8c\u3001\u57fa\u91d1\u8be6\u7ec6\u4fe1\u606f\u63a5\u53e3\uff1a \u8be6\u7ec6\u4fe1\u606f\u63a5\u53e3\u8bf7\u6c42\u7f51\u5740\uff1a http://fund.eastmoney.com/pingzhongdata/ 519983 .js?v=20160518155842 \u6ce8\uff1a\u4e0a\u9762\u7f51\u5740\u4e2d\u7ea2\u8272\u90e8\u5206519983\u4e3a\u57fa\u91d1\u4ee3\u7801\uff1bv=20160518155842\u662f\u65f6\u95f4\u6233\u907f\u514d\u7f13\u5b58\u3002 \u6570\u636e\u91cf\u592a\u5927\u4e0d\u8d34\u4e86\uff0c\u8be5\u8fd4\u56de\u6570\u636e\u4e2d\u6709\u4e2d\u6587\u6ce8\u91ca\uff0c\u5c31\u4e0d\u6328\u4e2a\u8bf4\u4e86\u3002 \u4e09\u3001\u6240\u6709\u57fa\u91d1\u540d\u79f0\u4ee3\u7801\u5217\u8868\u63a5\u53e3\uff1a \u63a5\u53e3\u7f51\u5740\uff1a http://fund.eastmoney.com/js/fundcode_search.js \u8fd4\u56de\u503c\uff1a \u57fa\u91d1\u4ee3\u7801\u3001\u57fa\u91d1\u540d\u79f0\u5355\u62fc\u3001\u57fa\u91d1\u540d\u79f0\u4e2d\u6587\u3001\u57fa\u91d1\u7c7b\u578b\u3001\u57fa\u91d1\u540d\u79f0\u5168\u62fc \u7684json\u6570\u7ec4\u5f62\u5f0f\u3002 \u56db\u3001\u6240\u6709\u57fa\u91d1\u516c\u53f8\u540d\u79f0\u4ee3\u7801\u5217\u8868\u63a5\u53e3\uff1a \u63a5\u53e3\u7f51\u5740\uff1a http://fund.eastmoney.com/js/jjjz_gs.js?dt=1463791574015 \u8fd4\u56de\u503c\uff1a \u57fa\u91d1\u516c\u53f8\u4ee3\u7801\u3001\u57fa\u91d1\u516c\u53f8\u540d\u79f0\u4e2d\u6587 \u4e94\u3001\u57fa\u91d1\u5b9e\u65f6\u8d70\u52bf\u56fe\u83b7\u53d6\u63a5\u53e3\uff1a \u63a5\u53e3\u7f51\u5740\uff1a http://www.27ba.com/zb_users/upload/2018/09/20180925202910_16888.png \u8fd4\u56de\u503c\uff1a \u56fe\u7247","title":"\u5929\u5929\u57fa\u91d1\u7f51 \u6570\u636e\u63a5\u53e3\u53ca\u8bf4\u660e"},{"location":"\u57fa\u91d1/\u5929\u5929\u57fa\u91d1\u7f51 \u6570\u636e\u63a5\u53e3\u53ca\u8bf4\u660e/#_1","text":"\u4e00\u3001\u57fa\u91d1\u5b9e\u65f6\u4fe1\u606f\u63a5\u53e3\uff1a \u5b9e\u65f6\u4fe1\u606f\u63a5\u53e3\u8bf7\u6c42\u7f51\u5740\uff1a http://fundgz.1234567.com.cn/js/ 519983 .js?rt=1463558676006 \u6ce8\uff1a\u4e0a\u9762\u7f51\u5740\u4e2d\u7ea2\u8272\u90e8\u5206519983\u4e3a\u57fa\u91d1\u4ee3\u7801\uff0crt=1463558676006\u4e3a\u65f6\u95f4\u6233\u907f\u514d\u7f13\u5b58\u3002 \u8fd4\u56de\u503c\uff1a PHP jsonpgz({ fundcode : 519983 , name : \u957f\u4fe1\u91cf\u5316\u5148\u950b\u6df7\u5408A , jzrq : 2018-09-21 , dwjz : 1.2440 , gsz : 1.2388 , gszzl : -0.42 , gztime : 2018-09-25 15:00 }); \u8fd4\u56de\u503c\u683c\u5f0f\u662f\uff1a jsonpgz(JSON\u683c\u5f0f\u6570\u636e); \u5728\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u53bb\u9664\u5230jsonpgz();\u53ea\u4fdd\u7559json\u6570\u636e\uff0c\u5c06json\u8f6c\u4e3a\u6570\u7ec4\u4fbf\u4e8e\u4f7f\u7528\u3002 \u8f6c\u6570\u7ec4\u540e\u6570\u636e\uff1a PHP array(7) { [ fundcode ]= 519983 //\u57fa\u91d1\u4ee3\u7801 [ name ]= \u957f\u4fe1\u91cf\u5316\u5148\u950b\u6df7\u5408A //\u57fa\u91d1\u540d\u79f0 [ jzrq ]= 2018-09-21 //\u51c0\u503c\u65e5\u671f [ dwjz ]= 1.2440 //\u5f53\u65e5\u51c0\u503c [ gsz ]= 1.2388 //\u4f30\u7b97\u51c0\u503c [ gszzl ]= -0.42 //\u4f30\u7b97\u6da8\u8dcc\u767e\u5206\u6bd4 \u5373-0.42% [ gztime ]= 2018-09-25 15:00 //\u4f30\u503c\u65f6\u95f4 } \u4e8c\u3001\u57fa\u91d1\u8be6\u7ec6\u4fe1\u606f\u63a5\u53e3\uff1a \u8be6\u7ec6\u4fe1\u606f\u63a5\u53e3\u8bf7\u6c42\u7f51\u5740\uff1a http://fund.eastmoney.com/pingzhongdata/ 519983 .js?v=20160518155842 \u6ce8\uff1a\u4e0a\u9762\u7f51\u5740\u4e2d\u7ea2\u8272\u90e8\u5206519983\u4e3a\u57fa\u91d1\u4ee3\u7801\uff1bv=20160518155842\u662f\u65f6\u95f4\u6233\u907f\u514d\u7f13\u5b58\u3002 \u6570\u636e\u91cf\u592a\u5927\u4e0d\u8d34\u4e86\uff0c\u8be5\u8fd4\u56de\u6570\u636e\u4e2d\u6709\u4e2d\u6587\u6ce8\u91ca\uff0c\u5c31\u4e0d\u6328\u4e2a\u8bf4\u4e86\u3002 \u4e09\u3001\u6240\u6709\u57fa\u91d1\u540d\u79f0\u4ee3\u7801\u5217\u8868\u63a5\u53e3\uff1a \u63a5\u53e3\u7f51\u5740\uff1a http://fund.eastmoney.com/js/fundcode_search.js \u8fd4\u56de\u503c\uff1a \u57fa\u91d1\u4ee3\u7801\u3001\u57fa\u91d1\u540d\u79f0\u5355\u62fc\u3001\u57fa\u91d1\u540d\u79f0\u4e2d\u6587\u3001\u57fa\u91d1\u7c7b\u578b\u3001\u57fa\u91d1\u540d\u79f0\u5168\u62fc \u7684json\u6570\u7ec4\u5f62\u5f0f\u3002 \u56db\u3001\u6240\u6709\u57fa\u91d1\u516c\u53f8\u540d\u79f0\u4ee3\u7801\u5217\u8868\u63a5\u53e3\uff1a \u63a5\u53e3\u7f51\u5740\uff1a http://fund.eastmoney.com/js/jjjz_gs.js?dt=1463791574015 \u8fd4\u56de\u503c\uff1a \u57fa\u91d1\u516c\u53f8\u4ee3\u7801\u3001\u57fa\u91d1\u516c\u53f8\u540d\u79f0\u4e2d\u6587 \u4e94\u3001\u57fa\u91d1\u5b9e\u65f6\u8d70\u52bf\u56fe\u83b7\u53d6\u63a5\u53e3\uff1a \u63a5\u53e3\u7f51\u5740\uff1a http://www.27ba.com/zb_users/upload/2018/09/20180925202910_16888.png \u8fd4\u56de\u503c\uff1a \u56fe\u7247","title":"\u5929\u5929\u57fa\u91d1\u7f51 \u6570\u636e\u63a5\u53e3\u53ca\u8bf4\u660e"},{"location":"\u6280\u5de7/Untitled/","text":"","title":"Untitled"},{"location":"\u6280\u5de7/yixunConfiguration/","text":"1.BD\u76d8\uff1a 2.Fiddler 3.BD\u76d8 4.Fiddler 5.\u6587\u672c 6.\u4f8b\u5b50(\u6709\u8282\u7701) 1.BD\u76d8\uff1a \u4f20\u8f93\uff1a\u4f20\u8f93--\u9ad8\u7ea7\u8bbe\u7f6e--IE\u4ee3\u7406 2.Fiddler Options\u2013https\u2013 Capture HTTPS CONNECTS Decrypt HTTPS traffic 3.BD\u76d8 \u7f51\u76d8\u5237\u65b0\uff1a\u70b9\u5237\u65b0\u5c0f\u5706\u5708 4.Fiddler \u641c\u7d22\uff1a rand copy fiddler\u663e\u793a\u9ec4\u8272\u7684\u4f1a\u8bdd 5.\u6587\u672c \u7c98\u8d34\u5230\u6587\u672c\u7f16\u8f91\u5668 \u66ff\u6362 -- \\r(\u6362\u884c) \u66ff\u6362BDUSS=-- BDUSS=\\r(\u6362\u884c) \u5bfb\u627e rand: --\u4e0b\u8f7d\u7528 version:--\u4e0b\u8f7d\u7528 time: --\u4e0b\u8f7d\u7528 devuid:--\u4e0b\u8f7d\u7528 BDUSS= --\u767b\u5f55\u7528 6.\u4f8b\u5b50(\u6709\u8282\u7701) GET http://pan.baidu.com/api/list?dir=%2FIT%2Fgo page=1 num=1000 clienttype=8 channel=00000000000000000000000000000000 version=7.0.1.1 devuid=BDIMX2983BD rand=f9e508a2279f07c5cf4f97408b4c119f286c49d4 time=1596727307 vip=0 wp_retry_num=2 desc=0 order=name logid=JwAxADU DMAMAA3ACwAMQAwAC4AMAAuADAALgAxACwAOQAwADcAM AxADUANwAnAA%3D%3D HTTP/1.1 Host: pan.baidu.com Accept: */* Connection: Keep-Alive Cookie: PANPSC=10608841413580329247%3AKkwrx6t0uHCkFVDe4Oa9a6w%3D%3D; BAIDUID=DA50C79EC5E91E20DC4C8D8BB4AE0905:FG=1; STOKEN=62c964f540a1e76a07f8fc07df0b091; BDUSS=dtd3FQblV-ZUJkOTlZc2x3QmhhRxd0toWHVFBQUFBJCQAAAAAAAAAAAEAAADJR97zNzc0MzkzNzZsb3ZlZ28AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANPcL17 User-Agent: netdisk;7.0.1.1;PC;PC-Windows;6.1.7601;WindowsBaiduYunGuanJia Accept-Encoding: gzip,deflate","title":"yixunConfiguration"},{"location":"\u6280\u5de7/yixunConfiguration/#1bd","text":"\u4f20\u8f93\uff1a\u4f20\u8f93--\u9ad8\u7ea7\u8bbe\u7f6e--IE\u4ee3\u7406","title":"1.BD\u76d8\uff1a"},{"location":"\u6280\u5de7/yixunConfiguration/#2fiddler","text":"Options\u2013https\u2013 Capture HTTPS CONNECTS Decrypt HTTPS traffic","title":"2.Fiddler"},{"location":"\u6280\u5de7/yixunConfiguration/#3bd","text":"\u7f51\u76d8\u5237\u65b0\uff1a\u70b9\u5237\u65b0\u5c0f\u5706\u5708","title":"3.BD\u76d8"},{"location":"\u6280\u5de7/yixunConfiguration/#4fiddler","text":"\u641c\u7d22\uff1a rand copy fiddler\u663e\u793a\u9ec4\u8272\u7684\u4f1a\u8bdd","title":"4.Fiddler"},{"location":"\u6280\u5de7/yixunConfiguration/#5","text":"\u7c98\u8d34\u5230\u6587\u672c\u7f16\u8f91\u5668 \u66ff\u6362 -- \\r(\u6362\u884c) \u66ff\u6362BDUSS=-- BDUSS=\\r(\u6362\u884c) \u5bfb\u627e rand: --\u4e0b\u8f7d\u7528 version:--\u4e0b\u8f7d\u7528 time: --\u4e0b\u8f7d\u7528 devuid:--\u4e0b\u8f7d\u7528 BDUSS= --\u767b\u5f55\u7528","title":"5.\u6587\u672c"},{"location":"\u6280\u5de7/yixunConfiguration/#6","text":"GET http://pan.baidu.com/api/list?dir=%2FIT%2Fgo page=1 num=1000 clienttype=8 channel=00000000000000000000000000000000 version=7.0.1.1 devuid=BDIMX2983BD rand=f9e508a2279f07c5cf4f97408b4c119f286c49d4 time=1596727307 vip=0 wp_retry_num=2 desc=0 order=name logid=JwAxADU DMAMAA3ACwAMQAwAC4AMAAuADAALgAxACwAOQAwADcAM AxADUANwAnAA%3D%3D HTTP/1.1 Host: pan.baidu.com Accept: */* Connection: Keep-Alive Cookie: PANPSC=10608841413580329247%3AKkwrx6t0uHCkFVDe4Oa9a6w%3D%3D; BAIDUID=DA50C79EC5E91E20DC4C8D8BB4AE0905:FG=1; STOKEN=62c964f540a1e76a07f8fc07df0b091; BDUSS=dtd3FQblV-ZUJkOTlZc2x3QmhhRxd0toWHVFBQUFBJCQAAAAAAAAAAAEAAADJR97zNzc0MzkzNzZsb3ZlZ28AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANPcL17 User-Agent: netdisk;7.0.1.1;PC;PC-Windows;6.1.7601;WindowsBaiduYunGuanJia Accept-Encoding: gzip,deflate","title":"6.\u4f8b\u5b50(\u6709\u8282\u7701)"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/","text":"webpages emails files SEO coupons! secrets operator review https://www.alec.fyi/dorking-how-to-find-anything-on-the-internet.html https://ahrefs.com/blog/google-advanced-search-operators/ https://grow.google/certificates/ https://artem.krylysov.com/blog/2020/07/28/lets-build-a-full-text-search-engine/ webpages \u67e5\u627e\u6307\u5b9a\u7f51\u7ad9\u7684\u5185\u5bb9\uff08ex:oralce e-book) site:gumroad.com oracle \u5728\u6307\u5b9a\u7f51\u7ad9\u4e2d\uff0c\u627e\u6807\u9898\uff08titile\uff09\u542b\u6709\u4e00\u4e2a\u77ed\u8bed\u7684 allintitile:\"support this\u201d site:gumroad.com \u627e\u7c7b\u4f3c\u7684\u7f51\u7ad9 related:gumroad.com \u5c06\u8fd0\u7b97\u7b26\u94fe\u63a5\u641c\u7d22\u6761\u4ef6\u5728\u4e00\u8d77\u3002 (inurl:security or inurl:bug-bounty OR site:hackeron.com) +\"gumroad\" \u9650\u5236\u67d0\u4e9b\u9876\u7ea7\u57df(ex: list of teacher) site:.edu filetype:xls inurl:\"email.xls\" emails \u627e\u90ae\u7bb1\u8d26\u53f7 sahil lavingia \"@gmail.com\" \u627e\u5de5\u4f5c\u8d26\u53f7\uff08\u9996\u5148\u8981\u77e5\u9053domain\uff09 sahil lavingia \"@gumroad.com\" \u731c\u6d4b\u7535\u5b50\u90ae\u4ef6\u7684\u683c\u5f0f\uff0c\u641c\u7d22\u57df \"s.lavingia\" \"@\"\" .com\" \u627e\u7f51\u9875\u5e26\u6709\u6307\u5b9a\u5b57\u7b26\u7684\u9875\u9762 site:gumroad.com word:\"@gumroad.com\" \u641c\u7d22\u6574\u7ad9\u7684Email,\u4f7f\u7528\u201cChrome DevTools\u201d js var elems = document.body.getElementsByTagName(\"*\"); var re = new RegExp(\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"); for (var i = 0; i elems.length; i++) { if (re.test(elems[i].innerHTML)) { console.log(elems[i].innerHTML); } } files \u641c\u7d22\u7535\u5b50\u5217\u8868 Search Google\u6587\u6863\u548c\u8868\u683c \u67e5\u627e\u5355\u952e\u5bf9\u624b\u7684\u5fbd\u6807\u7684\u4f4d\u7f6e\uff08\u5982\uff1a\u5408\u4f5c\u4f19\u4f34\u6216\u5ba2\u6237\u7684\u7f51\u7ad9 \u627e\u7ade\u4e89\u5bf9\u624b\u7684\u9500\u552e\u5efa\u8bae\u548c\u767d\u76ae\u4e66 \u627e\u7ade\u4e89\u5bf9\u65b9\u7684\u6848\u4f8b\u7814\u7a76 SEO coupons! secrets operator review","title":"SearchByGoogle"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/#webpages","text":"\u67e5\u627e\u6307\u5b9a\u7f51\u7ad9\u7684\u5185\u5bb9\uff08ex:oralce e-book) site:gumroad.com oracle \u5728\u6307\u5b9a\u7f51\u7ad9\u4e2d\uff0c\u627e\u6807\u9898\uff08titile\uff09\u542b\u6709\u4e00\u4e2a\u77ed\u8bed\u7684 allintitile:\"support this\u201d site:gumroad.com \u627e\u7c7b\u4f3c\u7684\u7f51\u7ad9 related:gumroad.com \u5c06\u8fd0\u7b97\u7b26\u94fe\u63a5\u641c\u7d22\u6761\u4ef6\u5728\u4e00\u8d77\u3002 (inurl:security or inurl:bug-bounty OR site:hackeron.com) +\"gumroad\" \u9650\u5236\u67d0\u4e9b\u9876\u7ea7\u57df(ex: list of teacher) site:.edu filetype:xls inurl:\"email.xls\"","title":"webpages"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/#emails","text":"\u627e\u90ae\u7bb1\u8d26\u53f7 sahil lavingia \"@gmail.com\" \u627e\u5de5\u4f5c\u8d26\u53f7\uff08\u9996\u5148\u8981\u77e5\u9053domain\uff09 sahil lavingia \"@gumroad.com\" \u731c\u6d4b\u7535\u5b50\u90ae\u4ef6\u7684\u683c\u5f0f\uff0c\u641c\u7d22\u57df \"s.lavingia\" \"@\"\" .com\" \u627e\u7f51\u9875\u5e26\u6709\u6307\u5b9a\u5b57\u7b26\u7684\u9875\u9762 site:gumroad.com word:\"@gumroad.com\" \u641c\u7d22\u6574\u7ad9\u7684Email,\u4f7f\u7528\u201cChrome DevTools\u201d js var elems = document.body.getElementsByTagName(\"*\"); var re = new RegExp(\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"); for (var i = 0; i elems.length; i++) { if (re.test(elems[i].innerHTML)) { console.log(elems[i].innerHTML); } }","title":"emails"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/#files","text":"\u641c\u7d22\u7535\u5b50\u5217\u8868 Search Google\u6587\u6863\u548c\u8868\u683c \u67e5\u627e\u5355\u952e\u5bf9\u624b\u7684\u5fbd\u6807\u7684\u4f4d\u7f6e\uff08\u5982\uff1a\u5408\u4f5c\u4f19\u4f34\u6216\u5ba2\u6237\u7684\u7f51\u7ad9 \u627e\u7ade\u4e89\u5bf9\u624b\u7684\u9500\u552e\u5efa\u8bae\u548c\u767d\u76ae\u4e66 \u627e\u7ade\u4e89\u5bf9\u65b9\u7684\u6848\u4f8b\u7814\u7a76","title":"files"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/#seo","text":"","title":"SEO"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/#coupons","text":"","title":"coupons!"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/#secrets","text":"","title":"secrets"},{"location":"\u6280\u5de7/AboutGoogle/SearchByGoogle/#operator-review","text":"","title":"operator review"},{"location":"\u6280\u5de7/fildder/\u4e0b\u8f7d\u9489\u9489\u89c6\u5c4f/","text":"\u5229\u7528\u6293\u5305\u4e0b\u8f7d\u9489\u9489\u76f4\u64ad\u56de\u653e \u6700\u8fd1\u5728\u4e0a\u7f51\u8bfe \u53c8\u60f3\u5728\u7f51\u4e0a\u4e0a\u4f20\u76f4\u64ad\u5f55\u50cf \u6216\u8005\u526a\u4e00\u4e0b\u641e\u7b11\u7684\u7247\u6bb5\u4e0a\u4f20 \u4f46\u662f\u5f53\u6211\u6253\u5f00\u7535\u8111\u60f3\u70b9\u201c\u4e0b\u8f7d\u201d\u7684\u65f6\u5019... \u8fd9\u4e2a\u65b9\u6cd5\u9002\u7528\u4e8e\u5b89\u5353\u3001Windows\uff08\u53ea\u5728\u8fd9\u4e24\u4e2a\u5e73\u53f0\u6d4b\u8bd5\u8fc7\uff09 \u5b89\u5353\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9 Windows\u9700\u8981\u4e00\u4e9b\u5de5\u5177 \u6211\u5148\u5199Windows\u7684 \u5148\u5b89\u88c5\u597d\u6293\u5305\u8f6f\u4ef6 Fiddler \u7136\u540e\u9009\u62e9\u6293\u53d6HTTPS \u5b89\u5353\u540c\u7406 \u4e0b\u8f7d\u6293\u5305\u5de5\u5177\u5e76\u5b89\u88c5\u6839\u8bc1\u4e66 \u6253\u5f00\u9489\u9489\u7a97\u53e3 \u6309\u4f4f\u5de5\u5177\u680f\u4e0a\u6807\u6709Any Process\u5b57\u6837\u7684\u6309\u94ae\u5e76\u62d6\u52a8\u5230\u9489\u9489\u7a97\u53e3\u4e0a \u5b89\u5353\u540c\u7406 \u9009\u62e9\u7a0b\u5e8f\u9489\u9489 \u6700\u597d\u8bbe\u7f6e\u8fc7\u6ee4\u57df\u540d\uff1a alicdn.com \u5728\u8f6f\u4ef6\u5de6\u4e0b\u65b9\u547d\u4ee4\u6846\u5148\u8f93\u5165 stop cls \u7136\u540e\u5728\u76f4\u64ad\u56de\u653e\u6253\u5f00\u524d\u8f93\u5165 start \u4ee5\u542f\u52a8\u6293\u5305 \u4e5f\u53ef\u4ee5\u518d\u52a0\u4e00\u6761 bold m3u8? \u53ef\u80fd\u4f1a\u51fa\u73b0\u795e\u5947\u7684\u6548\u679c \u56de\u653e\u52a0\u8f7d\u5b8c\u6210\u540e\uff08\u6709\u753b\u9762\uff09\u5c31\u53ef\u4ee5\u8f93\u5165 stop \u6765\u505c\u6b62\u6293\u5305\u4e86 \u5b89\u5353\u540c\u7406 \u6e05\u9664\u5217\u8868 \u5f00\u542f\u6293\u5305 \u6709\u753b\u9762\u5c31\u8fd4\u56de\u5e76\u505c\u6b62 \u73b0\u5728\u5c31\u662f\u5305\u7684\u5bfb\u627e\u73af\u8282 \u6700\u597d\u786e\u4fdd\u53ea\u6253\u5f00\u4e00\u6b21\u56de\u653e \u56e0\u4e3a\u4f1a\u51fa\u73b0\u91cd\u590d \u8f93\u5165 @alicdn.com select vnd.apple.mpegurl \u8fd9\u6837Fiddler\u5c31\u4f1a\u81ea\u52a8\u5b9a\u4f4d\u5230\u7b26\u5408\u8981\u6c42\u7684\u5305 \u53cc\u51fb \u770b\u5230\u53f3\u8fb9 \u70b9\u4e0b\u8fb9\u7684TextView\u5e94\u8be5\u80fd\u770b\u5230M3U8\u683c\u5f0f\u7684\u6587\u4ef6 \u518d\u5230\u5de6\u8fb9 \u53f3\u952e\u8fd9\u4e00\u6761\u9009\u62e9\u590d\u5236Url \u5b89\u5353\u8fd8\u6ca1\u6709\u627e\u5230\u597d\u4e00\u70b9\u7684\u65b9\u6cd5 \u627e\u57df\u540dalicdn.com\u768410KB\u5de6\u53f3\u7684HTTP\u534f\u8bae\u8bf7\u6c42 \u67092MB\u5de6\u53f3\u7684\u5c31\u662f\u5355\u4e2a\u5206\u7247 \u53ea\u670930\u79d2\u7684 \u5230\u8fd9\u91cc\u4e5f\u5c31\u53ea\u80fd\u5efa\u8bae\u5b89\u5353\u8f6c\u5230Windows\u6216\u8005\u5176\u4ed6\u65b9\u6cd5\u4e86\uff08\u4e0b\u9762\u4f1a\u63d0\u5230\uff09 \u6211\u627e\u5230\u4e86\u4e00\u6b3eM3U8\u4e0b\u8f7d\u5668\uff1a N_m3u8DL-CLI \u6211\u4e5f\u5217\u4e00\u4e0b\u64cd\u4f5c\u6b65\u9aa4\u5427 \u4e0b\u8f7d\u6700\u65b0\u7248\u7684\u4e00\u4e2a\u538b\u7f29\u5305\u6587\u4ef6 \u5305\u542b\u5206\u7247\u5408\u5e76\u5de5\u5177\u548c\u4e00\u4e2a\u53ef\u89c6\u5316\u7a0b\u5e8f \u53ef\u89c6\u5316\u7a0b\u5e8f\u597d\u50cf\u662f\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u7684 \u6240\u4ee5\u4f60\u6700\u597d\u662f\u5b9a\u671f\u4e0b\u8f7d \u8bbe\u7f6e\u597d\u4e4b\u540e\u5c31GO\u5427 \u5408\u5e76\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u5728Downloads\u76ee\u5f55\u627e\u5230mp4\u6587\u4ef6\u5566\uff01 png\u662f\u6211\u62d6\u8fdb\u53bb\u7684 \u5b89\u5353\u561b\u5c31\u6709\u70b9\u56f0\u96be\u4e86 \u6211\u8bd5\u4e86\u8bd5 \u8c8c\u4f3c\u53ea\u6709\u817e\u8bafX5\u5185\u6838\u53ef\u4ee5\u76f4\u63a5\u64ad\u653e\u548c\u4e0b\u8f7d \u4f46\u662f\u5b83\u662f\u628a\u5168\u90e8\u5206\u7247\u90fd\u4e0b\u8f7d\u4e0b\u6765 \u7136\u540e\u5728\u4e0b\u8f7d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2a\u7ed9\u81ea\u5df1\u7528\u7684m3u8\u6587\u4ef6 \u91cc\u9762\u7684\u6587\u4ef6\u683c\u5f0f\u662ffile:///sdcard/QQBrowser/.../...ts \u6240\u4ee5\u5408\u5e76\u8d77\u6765\u6709\u4e9b\u56f0\u96be","title":"\u5229\u7528\u6293\u5305\u4e0b\u8f7d\u9489\u9489\u76f4\u64ad\u56de\u653e"},{"location":"\u6280\u5de7/fildder/\u4e0b\u8f7d\u9489\u9489\u89c6\u5c4f/#_1","text":"\u6700\u8fd1\u5728\u4e0a\u7f51\u8bfe \u53c8\u60f3\u5728\u7f51\u4e0a\u4e0a\u4f20\u76f4\u64ad\u5f55\u50cf \u6216\u8005\u526a\u4e00\u4e0b\u641e\u7b11\u7684\u7247\u6bb5\u4e0a\u4f20 \u4f46\u662f\u5f53\u6211\u6253\u5f00\u7535\u8111\u60f3\u70b9\u201c\u4e0b\u8f7d\u201d\u7684\u65f6\u5019... \u8fd9\u4e2a\u65b9\u6cd5\u9002\u7528\u4e8e\u5b89\u5353\u3001Windows\uff08\u53ea\u5728\u8fd9\u4e24\u4e2a\u5e73\u53f0\u6d4b\u8bd5\u8fc7\uff09 \u5b89\u5353\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9 Windows\u9700\u8981\u4e00\u4e9b\u5de5\u5177 \u6211\u5148\u5199Windows\u7684 \u5148\u5b89\u88c5\u597d\u6293\u5305\u8f6f\u4ef6 Fiddler \u7136\u540e\u9009\u62e9\u6293\u53d6HTTPS \u5b89\u5353\u540c\u7406 \u4e0b\u8f7d\u6293\u5305\u5de5\u5177\u5e76\u5b89\u88c5\u6839\u8bc1\u4e66 \u6253\u5f00\u9489\u9489\u7a97\u53e3 \u6309\u4f4f\u5de5\u5177\u680f\u4e0a\u6807\u6709Any Process\u5b57\u6837\u7684\u6309\u94ae\u5e76\u62d6\u52a8\u5230\u9489\u9489\u7a97\u53e3\u4e0a \u5b89\u5353\u540c\u7406 \u9009\u62e9\u7a0b\u5e8f\u9489\u9489 \u6700\u597d\u8bbe\u7f6e\u8fc7\u6ee4\u57df\u540d\uff1a alicdn.com \u5728\u8f6f\u4ef6\u5de6\u4e0b\u65b9\u547d\u4ee4\u6846\u5148\u8f93\u5165 stop cls \u7136\u540e\u5728\u76f4\u64ad\u56de\u653e\u6253\u5f00\u524d\u8f93\u5165 start \u4ee5\u542f\u52a8\u6293\u5305 \u4e5f\u53ef\u4ee5\u518d\u52a0\u4e00\u6761 bold m3u8? \u53ef\u80fd\u4f1a\u51fa\u73b0\u795e\u5947\u7684\u6548\u679c \u56de\u653e\u52a0\u8f7d\u5b8c\u6210\u540e\uff08\u6709\u753b\u9762\uff09\u5c31\u53ef\u4ee5\u8f93\u5165 stop \u6765\u505c\u6b62\u6293\u5305\u4e86 \u5b89\u5353\u540c\u7406 \u6e05\u9664\u5217\u8868 \u5f00\u542f\u6293\u5305 \u6709\u753b\u9762\u5c31\u8fd4\u56de\u5e76\u505c\u6b62 \u73b0\u5728\u5c31\u662f\u5305\u7684\u5bfb\u627e\u73af\u8282 \u6700\u597d\u786e\u4fdd\u53ea\u6253\u5f00\u4e00\u6b21\u56de\u653e \u56e0\u4e3a\u4f1a\u51fa\u73b0\u91cd\u590d \u8f93\u5165 @alicdn.com select vnd.apple.mpegurl \u8fd9\u6837Fiddler\u5c31\u4f1a\u81ea\u52a8\u5b9a\u4f4d\u5230\u7b26\u5408\u8981\u6c42\u7684\u5305 \u53cc\u51fb \u770b\u5230\u53f3\u8fb9 \u70b9\u4e0b\u8fb9\u7684TextView\u5e94\u8be5\u80fd\u770b\u5230M3U8\u683c\u5f0f\u7684\u6587\u4ef6 \u518d\u5230\u5de6\u8fb9 \u53f3\u952e\u8fd9\u4e00\u6761\u9009\u62e9\u590d\u5236Url \u5b89\u5353\u8fd8\u6ca1\u6709\u627e\u5230\u597d\u4e00\u70b9\u7684\u65b9\u6cd5 \u627e\u57df\u540dalicdn.com\u768410KB\u5de6\u53f3\u7684HTTP\u534f\u8bae\u8bf7\u6c42 \u67092MB\u5de6\u53f3\u7684\u5c31\u662f\u5355\u4e2a\u5206\u7247 \u53ea\u670930\u79d2\u7684 \u5230\u8fd9\u91cc\u4e5f\u5c31\u53ea\u80fd\u5efa\u8bae\u5b89\u5353\u8f6c\u5230Windows\u6216\u8005\u5176\u4ed6\u65b9\u6cd5\u4e86\uff08\u4e0b\u9762\u4f1a\u63d0\u5230\uff09 \u6211\u627e\u5230\u4e86\u4e00\u6b3eM3U8\u4e0b\u8f7d\u5668\uff1a N_m3u8DL-CLI \u6211\u4e5f\u5217\u4e00\u4e0b\u64cd\u4f5c\u6b65\u9aa4\u5427 \u4e0b\u8f7d\u6700\u65b0\u7248\u7684\u4e00\u4e2a\u538b\u7f29\u5305\u6587\u4ef6 \u5305\u542b\u5206\u7247\u5408\u5e76\u5de5\u5177\u548c\u4e00\u4e2a\u53ef\u89c6\u5316\u7a0b\u5e8f \u53ef\u89c6\u5316\u7a0b\u5e8f\u597d\u50cf\u662f\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u7684 \u6240\u4ee5\u4f60\u6700\u597d\u662f\u5b9a\u671f\u4e0b\u8f7d \u8bbe\u7f6e\u597d\u4e4b\u540e\u5c31GO\u5427 \u5408\u5e76\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u5728Downloads\u76ee\u5f55\u627e\u5230mp4\u6587\u4ef6\u5566\uff01 png\u662f\u6211\u62d6\u8fdb\u53bb\u7684 \u5b89\u5353\u561b\u5c31\u6709\u70b9\u56f0\u96be\u4e86 \u6211\u8bd5\u4e86\u8bd5 \u8c8c\u4f3c\u53ea\u6709\u817e\u8bafX5\u5185\u6838\u53ef\u4ee5\u76f4\u63a5\u64ad\u653e\u548c\u4e0b\u8f7d \u4f46\u662f\u5b83\u662f\u628a\u5168\u90e8\u5206\u7247\u90fd\u4e0b\u8f7d\u4e0b\u6765 \u7136\u540e\u5728\u4e0b\u8f7d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2a\u7ed9\u81ea\u5df1\u7528\u7684m3u8\u6587\u4ef6 \u91cc\u9762\u7684\u6587\u4ef6\u683c\u5f0f\u662ffile:///sdcard/QQBrowser/.../...ts \u6240\u4ee5\u5408\u5e76\u8d77\u6765\u6709\u4e9b\u56f0\u96be","title":"\u5229\u7528\u6293\u5305\u4e0b\u8f7d\u9489\u9489\u76f4\u64ad\u56de\u653e"},{"location":"\u6280\u5de7/fildder/\u4e0b\u8f7d\u9489\u9489\u89c6\u98912/","text":"\u9489\u9489\u76f4\u64ad\u56de\u653e\u89c6\u9891\u7684 \u9489\u9489\u76f4\u64ad\u56de\u653e\u89c6\u9891\u7684 \u4e0b\u8f7d\u65b9\u6cd5 \u7528\u5230\u7684\u5de5\u5177\uff1a M3U8 \u4ecb\u7ecd:https://huajiakeji.com/software/2018-12/1683.html Fiddler \u6293\u5305\u5de5\u5177\uff0c\u4e5f\u53ef\u4f7f\u7528\u522b\u7684\uff0c\u672c\u6587\u91c7\u7528fiddler \u7248\u672cv5.0.20194.41348 \u9996\u5148\uff0c\u6253\u5f00Fiddler \uff0c \u4fdd\u6301\u6355\u83b7\u6570\u636e \u5373\u53ef\uff0c \u4e5f\u53ef\u4ee5\u70b9\u51fb\u201c\u4efb\u610f\u8fdb\u7a0b\u201d\u62d6\u52a8\u60f3\u8981\u6293\u5305\u7684\u7a0b\u5e8f\u4e0a\u8fb9\uff0c\u4ec5\u5bf9\u6b64\u7a0b\u5e8f\u6293\u5305 \u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u9489\u9489\u76f4\u64ad\u56de\u653e\u5217\u8868\u4e2d\u7684\u64ad\u653e\uff0c\u5f00\u59cb\u64ad\u653e\u89c6\u9891 \u8fdb\u884c\u6293\u5305 \u5728Fiddler\u7684\u7a97\u53e3\u4e2d\uff0c\u5bfb\u627e \u4e3b\u673a\u662f alicdn.com \u3001 url\u4e3a /hive_hp/ \u5f00\u5934\u3001 \u5185\u5bb9\u7c7b\u578b\u4e3a application/ \u5f00\u5934\u7684\u6570\u636e\u3002 \u53f3\u952e\u70b9\u51fb\u590d\u5236\u5176URL\u3002 \u7136\u540e\u6253\u5f00m3u8\u8f6f\u4ef6\uff0c\u628aURL\u7c98\u8d34\u8fdb\u53bb\u8fdb\u884c\u4e0b\u8f7d \u5982\uff1a https://aliliving-pre.alicdn.com/live_hp/557b4e67-5fce-4608-88c0-994daf43c1e4_merge.m3u8?app_type=win auth_key=1606928848-0-0-8d54aa7c0522eb56d50f5b5056d79761 cid=d777cfbbafbb99f256ca380cd322cfc4 token=bbd0207caaf6f02154aea26eed2188cdnWSA9Q5AKF8QhAsTkpmBVACt0tTK8vKycB3JqfMvOOXSqjH7cp3kyGlge53airltuuyIpPNNeARnhSCwcFAuIpn2PPW7N_RXG173doP38DA= token2=c778265c955cd41c2e647fcb1cbbec57z1juamWgajkdzaxf77T61ew6-zZL7-svyqUkUqbUvA8LK8Isl1i_tNv-s3hsY8IxJI4lEpKfrEwvgGQ2TXfPuE9E7jQJF6EDs1J4lRQTndw version=5.1.28-Release.12 \u53ef\u4ee5\u5c06 version=5.1.28-Release.12\u5220\u9664 \u5230\u6b64\u5b8c\u6210\u3002m3u8\u4f1a\u5c06\u4e00\u4e2a\u4e00\u4e2a\u7684\u89c6\u9891\u5c0f\u6587\u4ef6\u81ea\u52a8\u5408\u5e76\u3002 \u672c\u6b21\u6559\u7a0b\u4ec5\u9488\u5bf9\u9489\u9489\u4e2d\u7684\u3010\u76f4\u64ad\u56de\u653e\u3011\uff0c\u4e0b\u9762\u662f\u6240\u9700\u8f6f\u4ef6\u7684\u4e0b\u8f7d\u5730\u5740\uff1a M3U8\u4e0b\u8f7d\u5668:https://www.lanzous.com/i9w2bwb fiddler \uff1ahttps://www.lanzous.com/i9w48yh","title":"\u4e0b\u8f7d\u9489\u9489\u89c6\u98912"},{"location":"\u6280\u5de7/fildder/\u4e0b\u8f7d\u9489\u9489\u89c6\u98912/#_1","text":"\u4e0b\u8f7d\u65b9\u6cd5 \u7528\u5230\u7684\u5de5\u5177\uff1a M3U8 \u4ecb\u7ecd:https://huajiakeji.com/software/2018-12/1683.html Fiddler \u6293\u5305\u5de5\u5177\uff0c\u4e5f\u53ef\u4f7f\u7528\u522b\u7684\uff0c\u672c\u6587\u91c7\u7528fiddler \u7248\u672cv5.0.20194.41348 \u9996\u5148\uff0c\u6253\u5f00Fiddler \uff0c \u4fdd\u6301\u6355\u83b7\u6570\u636e \u5373\u53ef\uff0c \u4e5f\u53ef\u4ee5\u70b9\u51fb\u201c\u4efb\u610f\u8fdb\u7a0b\u201d\u62d6\u52a8\u60f3\u8981\u6293\u5305\u7684\u7a0b\u5e8f\u4e0a\u8fb9\uff0c\u4ec5\u5bf9\u6b64\u7a0b\u5e8f\u6293\u5305 \u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u9489\u9489\u76f4\u64ad\u56de\u653e\u5217\u8868\u4e2d\u7684\u64ad\u653e\uff0c\u5f00\u59cb\u64ad\u653e\u89c6\u9891 \u8fdb\u884c\u6293\u5305 \u5728Fiddler\u7684\u7a97\u53e3\u4e2d\uff0c\u5bfb\u627e \u4e3b\u673a\u662f alicdn.com \u3001 url\u4e3a /hive_hp/ \u5f00\u5934\u3001 \u5185\u5bb9\u7c7b\u578b\u4e3a application/ \u5f00\u5934\u7684\u6570\u636e\u3002 \u53f3\u952e\u70b9\u51fb\u590d\u5236\u5176URL\u3002 \u7136\u540e\u6253\u5f00m3u8\u8f6f\u4ef6\uff0c\u628aURL\u7c98\u8d34\u8fdb\u53bb\u8fdb\u884c\u4e0b\u8f7d \u5982\uff1a https://aliliving-pre.alicdn.com/live_hp/557b4e67-5fce-4608-88c0-994daf43c1e4_merge.m3u8?app_type=win auth_key=1606928848-0-0-8d54aa7c0522eb56d50f5b5056d79761 cid=d777cfbbafbb99f256ca380cd322cfc4 token=bbd0207caaf6f02154aea26eed2188cdnWSA9Q5AKF8QhAsTkpmBVACt0tTK8vKycB3JqfMvOOXSqjH7cp3kyGlge53airltuuyIpPNNeARnhSCwcFAuIpn2PPW7N_RXG173doP38DA= token2=c778265c955cd41c2e647fcb1cbbec57z1juamWgajkdzaxf77T61ew6-zZL7-svyqUkUqbUvA8LK8Isl1i_tNv-s3hsY8IxJI4lEpKfrEwvgGQ2TXfPuE9E7jQJF6EDs1J4lRQTndw version=5.1.28-Release.12 \u53ef\u4ee5\u5c06 version=5.1.28-Release.12\u5220\u9664 \u5230\u6b64\u5b8c\u6210\u3002m3u8\u4f1a\u5c06\u4e00\u4e2a\u4e00\u4e2a\u7684\u89c6\u9891\u5c0f\u6587\u4ef6\u81ea\u52a8\u5408\u5e76\u3002 \u672c\u6b21\u6559\u7a0b\u4ec5\u9488\u5bf9\u9489\u9489\u4e2d\u7684\u3010\u76f4\u64ad\u56de\u653e\u3011\uff0c\u4e0b\u9762\u662f\u6240\u9700\u8f6f\u4ef6\u7684\u4e0b\u8f7d\u5730\u5740\uff1a M3U8\u4e0b\u8f7d\u5668:https://www.lanzous.com/i9w2bwb fiddler \uff1ahttps://www.lanzous.com/i9w48yh","title":"\u9489\u9489\u76f4\u64ad\u56de\u653e\u89c6\u9891\u7684"}]}